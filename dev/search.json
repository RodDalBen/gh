[{"path":[]},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"pat-and-host","dir":"Articles","previous_headings":"","what":"PAT and host","title":"Managing Personal Access Tokens","text":"gh::gh() allows user provide PAT via .token argument specify host “github.com” via .api_url argument. (companies universities run instance GitHub Enterprise.) However, ’s annoying always provide PAT host ’s unsafe PAT appear explicitly R code. ’s important make possible user provide PAT /API URL directly, rarely necessary. gh::gh() designed play well secure, less fiddly methods expressing want. .api_url .token determined user provide ? .api_url defaults value GITHUB_API_URL environment variable , unset, falls back \"https://api.github.com\". always done worrying PAT. PAT obtained via call gh_token(.api_url). , token looked based host.","code":"gh(endpoint, ..., .token = NULL, ..., .api_url = NULL, ...)"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"the-gitcreds-package","dir":"Articles","previous_headings":"","what":"The gitcreds package","title":"Managing Personal Access Tokens","text":"gh now uses gitcreds package interact Git credential store. gh calls gitcreds::gitcreds_get() URL try find matching PAT. gitcreds::gitcreds_get() checks session environment variables local Git credential store. Therefore, previously used PAT , e.g., command line Git, gh may retrieve re-use . can call gitcreds::gitcreds_get() directly, , want see found specific URL. see something like : means gitcreds get PAT Git credential store. can call gitcreds_get()$password see actual PAT. matching PAT found, gitcreds::gitcreds_get() errors.","code":"gitcreds::gitcreds_get() #> <gitcreds> #>   protocol: https #>   host    : github.com #>   username: PersonalAccessToken #>   password: <-- hidden -->"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"pat-in-an-environment-variable","dir":"Articles","previous_headings":"","what":"PAT in an environment variable","title":"Managing Personal Access Tokens","text":"don’t Git installation, Git installation working credential store, can specify PAT environment variable. github.com can set GITHUB_PAT_GITHUB_COM GITHUB_PAT variable. different GitHub host, call gitcreds::gitcreds_cache_envvar() API URL see environment variable need set. example:","code":"gitcreds::gitcreds_cache_envvar(\"https://github.acme.com\") #> [1] \"GITHUB_PAT_GITHUB_ACME_COM\""},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"recommendations","dir":"Articles","previous_headings":"","what":"Recommendations","title":"Managing Personal Access Tokens","text":"machine used interactive development, recommend: Store PAT(s) official credential store. store PAT(s) plain text , e.g., .Renviron. past, common recommended practice pragmatic reasons. However, gitcreds/gh now evolved point ’s possible us follow better security practices. use general-purpose password manager, like 1Password LastPass, may also want store PAT(s) . ? PAT “forgotten” OS-level credential store, intentionally , ’ll need provide prompted. don’t record PAT, ’ll get new PAT whenever happens. end world. aren’t disciplined deleting lost PATs https://github.com/settings/tokens, eventually find confusing situation can’t sure PAT(s) use. headless system, CI/CD platform, provide necessary PAT(s) via secure environment variables. Regular environment variables can used configure less sensitive settings, API host. Don’t expose PAT something silly like dumping environment variables log file. Note GitHub Actions, specifically, personal access token automatically available workflow GITHUB_TOKEN secret. many workflows R community contain snippet: makes automatic PAT available GITHUB_PAT environment variable. PAT doesn’t right permissions, ’ll need explicitly provide one (see link ).","code":"env:   GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"failure","dir":"Articles","previous_headings":"","what":"Failure","title":"Managing Personal Access Tokens","text":"PAT , gh::gh() sends request token. (Internally, Authorization header omitted PAT found empty string, \"\".) PAT-related failures look like? PAT sent endpoint requires auth, request probably succeeds! least run rate limits. endpoint requires auth, ’ll get HTTP error, possibly one: PAT first discovered environment variable, taken face value. two common ways arrive PAT specification via .Renviron secret CI/CD platform, GitHub Actions. PAT invalid, first affected request fail, probably like : also experience invalid PAT provided directly via .token. Even valid PAT can lead downstream error, insufficient scopes respect specific request.","code":"GitHub API error (401): 401 Unauthorized Message: Requires authentication GitHub API error (401): 401 Unauthorized Message: Bad credentials"},{"path":"https://gh.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Maintainer, contributor. Jennifer Bryan. Author. Hadley Wickham. Author. . Copyright holder, funder.","code":""},{"path":"https://gh.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryan J, Wickham H (2023). gh: 'GitHub' 'API'. https://gh.r-lib.org/, https://github.com/r-lib/gh#readme.","code":"@Manual{,   title = {gh: 'GitHub' 'API'},   author = {Jennifer Bryan and Hadley Wickham},   year = {2023},   note = {https://gh.r-lib.org/, https://github.com/r-lib/gh#readme}, }"},{"path":"https://gh.r-lib.org/dev/index.html","id":"gh","dir":"","previous_headings":"","what":"GitHub API","title":"GitHub API","text":"Minimalistic client access GitHub’s REST GraphQL APIs.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"GitHub API","text":"Install package CRAN usual:","code":"install.packages(\"gh\")"},{"path":"https://gh.r-lib.org/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"GitHub API","text":"Use gh() function access API endpoints. endpoints listed documentation. first argument gh() endpoint. can just copy paste API endpoints documentation. Note leading slash must included well. https://docs.github.com/rest/reference/repos#list-repositories---user can copy paste GET /users/{username}/repos gh() call. E.g. JSON result sent API converted R object. Parameters can passed extra arguments. E.g.","code":"library(gh) my_repos <- gh(\"GET /users/{username}/repos\", username = \"gaborcsardi\") vapply(my_repos, \"[[\", \"\", \"name\") #>  [1] \"after\"                \"alexr\"                \"all.primer.tutorials\" #>  [4] \"altlist\"              \"argufy\"               \"ask\"                  #>  [7] \"async\"                \"BCEA\"                 \"BH\"                   #> [10] \"brokenPackage\"        \"butcher\"              \"css\"                  #> [13] \"curl\"                 \"disposables\"          \"dotenv\"               #> [16] \"falsy\"                \"finmix\"               \"foobar\"               #> [19] \"franc\"                \"fswatch\"              \"guildai-r\"            #> [22] \"httpgd\"               \"installgithub.app\"    \"ISA\"                  #> [25] \"isa2\"                 \"josaplay\"             \"keynote\"              #> [28] \"keypress\"             \"log\"                  \"lpSolve\" my_repos <- gh(   \"/users/{username}/repos\",   username = \"gaborcsardi\",   sort = \"created\") vapply(my_repos, \"[[\", \"\", \"name\") #>  [1] \"isa2\"                   \"r-builds\"               \"sos\"                    #>  [4] \"SCAVENGE\"               \"rworkflows\"             \"r-bugs\"                 #>  [7] \"josaplay\"               \"all.primer.tutorials\"   \"neartools\"              #> [10] \"REDCapTidieR\"           \"guildai-r\"              \"BH\"                     #> [13] \"testrtools\"             \"vt-rs\"                  \"testpaktestthat\"        #> [16] \"httpgd\"                 \"BCEA\"                   \"monorepo\"               #> [19] \"pacman\"                 \"tiff\"                   \"tidyclust\"              #> [22] \"testCheckForceSuggests\" \"naomi\"                  \"rstudio\"                #> [25] \"butcher\"                \"foobar\"                 \"roxydemo\"               #> [28] \"log\"                    \"rtools-packages\"        \"r-builds-original\""},{"path":"https://gh.r-lib.org/dev/index.html","id":"post-patch-put-and-delete-requests","dir":"","previous_headings":"Usage","what":"POST, PATCH, PUT and DELETE requests","title":"GitHub API","text":"POST, PATCH, PUT, DELETE requests can sent including HTTP verb endpoint, first argument. E.g. create repository: delete :","code":"new_repo <- gh(\"POST /user/repos\", name = \"my-new-repo-for-gh-testing\") gh(\"DELETE /repos/{owner}/{repo}\", owner = \"gaborcsardi\",    repo = \"my-new-repo-for-gh-testing\")"},{"path":"https://gh.r-lib.org/dev/index.html","id":"tokens","dir":"","previous_headings":"Usage","what":"Tokens","title":"GitHub API","text":"default GITHUB_PAT environment variable used. Alternatively, one can set .token argument gh().","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"pagination","dir":"","previous_headings":"Usage","what":"Pagination","title":"GitHub API","text":"Supply page parameter get subsequent pages:","code":"my_repos2 <- gh(\"GET /orgs/{org}/repos\", org = \"r-lib\", page = 2) vapply(my_repos2, \"[[\", \"\", \"name\") #>  [1] \"sodium\"      \"gargle\"      \"remotes\"     \"jose\"        \"backports\"   #>  [6] \"rcmdcheck\"   \"vdiffr\"      \"callr\"       \"mockery\"     \"here\"        #> [11] \"revdepcheck\" \"processx\"    \"vctrs\"       \"debugme\"     \"usethis\"     #> [16] \"rlang\"       \"pkgload\"     \"httrmock\"    \"pkgbuild\"    \"prettycode\"  #> [21] \"roxygen2md\"  \"pkgapi\"      \"zeallot\"     \"liteq\"       \"keyring\"     #> [26] \"sloop\"       \"styler\"      \"ansistrings\" \"archive\"     \"later\""},{"path":"https://gh.r-lib.org/dev/index.html","id":"environment-variables","dir":"","previous_headings":"","what":"Environment Variables","title":"GitHub API","text":"GITHUB_API_URL environment variable used default github api url. One GITHUB_PAT GITHUB_TOKEN environment variables used, order, default token.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"GitHub API","text":"Please note gh project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"GitHub API","text":"MIT © Gábor Csárdi, Jennifer Bryan, Hadley Wickham","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gh: 'GitHub' 'API' — gh-package","title":"gh: 'GitHub' 'API' — gh-package","text":"Minimal client access 'GitHub' 'API'.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gh: 'GitHub' 'API' — gh-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com [contributor] Authors: Jennifer Bryan Hadley Wickham contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the GitHub API — gh","title":"Query the GitHub API — gh","text":"extremely minimal client. need know API able use client. function : Try substitute listed parameter endpoint, using {parameter} notation. GET request (default), add listed parameters query parameters. GET request, send parameters request body, JSON. Convert response R list using jsonlite::fromJSON().","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the GitHub API — gh","text":"","code":"gh(   endpoint,   ...,   per_page = NULL,   .token = NULL,   .destfile = NULL,   .overwrite = FALSE,   .api_url = NULL,   .method = \"GET\",   .limit = NULL,   .accept = \"application/vnd.github.v3+json\",   .send_headers = NULL,   .progress = TRUE,   .params = list(),   .max_wait = 600,   .max_rate = NULL )"},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the GitHub API — gh","text":"endpoint GitHub API endpoint. Must one following forms: METHOD path, e.g. GET /rate_limit, path, e.g. /rate_limit, METHOD url, e.g. GET https://api.github.com/rate_limit, url, e.g. https://api.github.com/rate_limit. method supplied, use .method, defaults \"GET\". ... Name-value pairs giving API parameters. matched endpoint placeholders, sent query parameters GET requests, JSON body POST requests. one unnamed parameter, raw vector, JSON encoded, sent raw data, . can used example add assets releases. Named NULL values silently dropped. GET requests, named NA values trigger error. methods, named NA values included body request, JSON null. per_page Number items return per page. omitted, substituted max(.limit, 100) .limit set, otherwise determined API (never greater 100). .token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .destfile Path write response disk. NULL (default), response processed returned object. path given, response written disk form sent. .overwrite .destfile provided, whether overwrite existing file.  Defaults FALSE. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .method HTTP method use explicitly supplied endpoint. .limit Number records return. can used instead manual pagination. default NULL, means defaults GitHub API used. can set number request (less) records, also Inf request records. Note, request many records, multiple GitHub API calls used get , can take potentially long time. .accept value Accept HTTP header. Defaults \"application/vnd.github.v3+json\" . Accept given .send_headers, used. parameter can used provide custom media type, order access preview feature API. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\". .progress Whether show progress indicator calls need one HTTP request. .params Additional list parameters append .... easier use ... parameters list already. .max_wait Maximum number seconds wait rate limited. Defaults 10 minutes. .max_rate Maximum request rate requests per second. Set automatically throttle requests.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the GitHub API — gh","text":"Answer API gh_response object, also list. Failed requests generate R error. Requests generate raw response return raw vector.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the GitHub API — gh","text":"","code":"## Repositories of a user, these are equivalent gh(\"/users/hadley/repos\", .limit = 2) #> [ #>   { #>     \"id\": 40423928, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDQyMzkyOA==\", #>     \"name\": \"15-state-of-the-union\", #>     \"full_name\": \"hadley/15-state-of-the-union\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"description\": {}, #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-state-of-the-union\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/deployments\", #>     \"created_at\": \"2015-08-09T03:22:26Z\", #>     \"updated_at\": \"2022-12-31T01:27:52Z\", #>     \"pushed_at\": \"2015-08-10T20:29:10Z\", #>     \"git_url\": \"git://github.com/hadley/15-state-of-the-union.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-state-of-the-union.git\", #>     \"clone_url\": \"https://github.com/hadley/15-state-of-the-union.git\", #>     \"svn_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"homepage\": {}, #>     \"size\": 4519, #>     \"stargazers_count\": 22, #>     \"watchers_count\": 22, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 7, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 7, #>     \"open_issues\": 0, #>     \"watchers\": 22, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 40544418, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDU0NDQxOA==\", #>     \"name\": \"15-student-papers\", #>     \"full_name\": \"hadley/15-student-papers\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-student-papers\", #>     \"description\": \"Graphics & computing student paper winners @ JSM 2015\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-student-papers\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-student-papers/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-student-papers/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-student-papers/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-student-papers/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-student-papers/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-student-papers/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-student-papers/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-student-papers/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-student-papers/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-student-papers/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-student-papers/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-student-papers/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-student-papers/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-student-papers/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-student-papers/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-student-papers/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-student-papers/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-student-papers/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-student-papers/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-student-papers/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-student-papers/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-student-papers/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-student-papers/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-student-papers/deployments\", #>     \"created_at\": \"2015-08-11T13:51:29Z\", #>     \"updated_at\": \"2019-08-18T16:49:40Z\", #>     \"pushed_at\": \"2015-08-21T15:27:51Z\", #>     \"git_url\": \"git://github.com/hadley/15-student-papers.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-student-papers.git\", #>     \"clone_url\": \"https://github.com/hadley/15-student-papers.git\", #>     \"svn_url\": \"https://github.com/hadley/15-student-papers\", #>     \"homepage\": {}, #>     \"size\": 2956, #>     \"stargazers_count\": 14, #>     \"watchers_count\": 14, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 0, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 0, #>     \"open_issues\": 0, #>     \"watchers\": 14, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  gh(\"/users/{username}/repos\", username = \"hadley\", .limit = 2) #> [ #>   { #>     \"id\": 40423928, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDQyMzkyOA==\", #>     \"name\": \"15-state-of-the-union\", #>     \"full_name\": \"hadley/15-state-of-the-union\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"description\": {}, #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-state-of-the-union\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/deployments\", #>     \"created_at\": \"2015-08-09T03:22:26Z\", #>     \"updated_at\": \"2022-12-31T01:27:52Z\", #>     \"pushed_at\": \"2015-08-10T20:29:10Z\", #>     \"git_url\": \"git://github.com/hadley/15-state-of-the-union.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-state-of-the-union.git\", #>     \"clone_url\": \"https://github.com/hadley/15-state-of-the-union.git\", #>     \"svn_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"homepage\": {}, #>     \"size\": 4519, #>     \"stargazers_count\": 22, #>     \"watchers_count\": 22, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 7, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 7, #>     \"open_issues\": 0, #>     \"watchers\": 22, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 40544418, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDU0NDQxOA==\", #>     \"name\": \"15-student-papers\", #>     \"full_name\": \"hadley/15-student-papers\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-student-papers\", #>     \"description\": \"Graphics & computing student paper winners @ JSM 2015\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-student-papers\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-student-papers/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-student-papers/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-student-papers/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-student-papers/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-student-papers/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-student-papers/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-student-papers/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-student-papers/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-student-papers/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-student-papers/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-student-papers/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-student-papers/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-student-papers/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-student-papers/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-student-papers/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-student-papers/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-student-papers/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-student-papers/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-student-papers/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-student-papers/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-student-papers/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-student-papers/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-student-papers/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-student-papers/deployments\", #>     \"created_at\": \"2015-08-11T13:51:29Z\", #>     \"updated_at\": \"2019-08-18T16:49:40Z\", #>     \"pushed_at\": \"2015-08-21T15:27:51Z\", #>     \"git_url\": \"git://github.com/hadley/15-student-papers.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-student-papers.git\", #>     \"clone_url\": \"https://github.com/hadley/15-student-papers.git\", #>     \"svn_url\": \"https://github.com/hadley/15-student-papers\", #>     \"homepage\": {}, #>     \"size\": 2956, #>     \"stargazers_count\": 14, #>     \"watchers_count\": 14, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 0, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 0, #>     \"open_issues\": 0, #>     \"watchers\": 14, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]   ## Starred repositories of a user gh(\"/users/hadley/starred\", .limit = 2) #> [ #>   { #>     \"id\": 390115983, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkzOTAxMTU5ODM=\", #>     \"name\": \"py-shiny\", #>     \"full_name\": \"rstudio/py-shiny\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"rstudio\", #>       \"id\": 513560, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjUxMzU2MA==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/513560?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/rstudio\", #>       \"html_url\": \"https://github.com/rstudio\", #>       \"followers_url\": \"https://api.github.com/users/rstudio/followers\", #>       \"following_url\": \"https://api.github.com/users/rstudio/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/rstudio/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/rstudio/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/rstudio/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/rstudio/orgs\", #>       \"repos_url\": \"https://api.github.com/users/rstudio/repos\", #>       \"events_url\": \"https://api.github.com/users/rstudio/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/rstudio/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/rstudio/py-shiny\", #>     \"description\": \"Shiny for Python\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/rstudio/py-shiny\", #>     \"forks_url\": \"https://api.github.com/repos/rstudio/py-shiny/forks\", #>     \"keys_url\": \"https://api.github.com/repos/rstudio/py-shiny/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/rstudio/py-shiny/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/rstudio/py-shiny/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/rstudio/py-shiny/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/rstudio/py-shiny/events\", #>     \"assignees_url\": \"https://api.github.com/repos/rstudio/py-shiny/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/rstudio/py-shiny/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/rstudio/py-shiny/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/rstudio/py-shiny/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/rstudio/py-shiny/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/rstudio/py-shiny/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/rstudio/py-shiny/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/rstudio/py-shiny/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/rstudio/py-shiny/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/rstudio/py-shiny/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/rstudio/py-shiny/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/rstudio/py-shiny/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/rstudio/py-shiny/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/rstudio/py-shiny/merges\", #>     \"archive_url\": \"https://api.github.com/repos/rstudio/py-shiny/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/rstudio/py-shiny/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/rstudio/py-shiny/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/rstudio/py-shiny/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/rstudio/py-shiny/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/rstudio/py-shiny/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/rstudio/py-shiny/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/rstudio/py-shiny/deployments\", #>     \"created_at\": \"2021-07-27T20:19:49Z\", #>     \"updated_at\": \"2023-07-20T08:23:16Z\", #>     \"pushed_at\": \"2023-07-20T19:55:46Z\", #>     \"git_url\": \"git://github.com/rstudio/py-shiny.git\", #>     \"ssh_url\": \"git@github.com:rstudio/py-shiny.git\", #>     \"clone_url\": \"https://github.com/rstudio/py-shiny.git\", #>     \"svn_url\": \"https://github.com/rstudio/py-shiny\", #>     \"homepage\": \"https://shiny.posit.co/py/\", #>     \"size\": 11703, #>     \"stargazers_count\": 552, #>     \"watchers_count\": 552, #>     \"language\": \"Python\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 34, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 171, #>     \"license\": { #>       \"key\": \"mit\", #>       \"name\": \"MIT License\", #>       \"spdx_id\": \"MIT\", #>       \"url\": \"https://api.github.com/licenses/mit\", #>       \"node_id\": \"MDc6TGljZW5zZTEz\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 34, #>     \"open_issues\": 171, #>     \"watchers\": 552, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 10221246, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMDIyMTI0Ng==\", #>     \"name\": \"bigrquery\", #>     \"full_name\": \"r-dbi/bigrquery\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"r-dbi\", #>       \"id\": 5695665, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjU2OTU2NjU=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5695665?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/r-dbi\", #>       \"html_url\": \"https://github.com/r-dbi\", #>       \"followers_url\": \"https://api.github.com/users/r-dbi/followers\", #>       \"following_url\": \"https://api.github.com/users/r-dbi/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/r-dbi/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/r-dbi/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/r-dbi/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/r-dbi/orgs\", #>       \"repos_url\": \"https://api.github.com/users/r-dbi/repos\", #>       \"events_url\": \"https://api.github.com/users/r-dbi/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/r-dbi/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"description\": \"An interface to Google's BigQuery from R.\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/r-dbi/bigrquery\", #>     \"forks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/forks\", #>     \"keys_url\": \"https://api.github.com/repos/r-dbi/bigrquery/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/r-dbi/bigrquery/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/r-dbi/bigrquery/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/events\", #>     \"assignees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/r-dbi/bigrquery/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/r-dbi/bigrquery/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/r-dbi/bigrquery/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/r-dbi/bigrquery/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/r-dbi/bigrquery/merges\", #>     \"archive_url\": \"https://api.github.com/repos/r-dbi/bigrquery/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/r-dbi/bigrquery/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/r-dbi/bigrquery/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/r-dbi/bigrquery/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/r-dbi/bigrquery/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/r-dbi/bigrquery/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/r-dbi/bigrquery/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/deployments\", #>     \"created_at\": \"2013-05-22T14:04:16Z\", #>     \"updated_at\": \"2023-07-13T05:53:58Z\", #>     \"pushed_at\": \"2023-07-08T17:32:26Z\", #>     \"git_url\": \"git://github.com/r-dbi/bigrquery.git\", #>     \"ssh_url\": \"git@github.com:r-dbi/bigrquery.git\", #>     \"clone_url\": \"https://github.com/r-dbi/bigrquery.git\", #>     \"svn_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"homepage\": \"https://bigrquery.r-dbi.org\", #>     \"size\": 1757, #>     \"stargazers_count\": 492, #>     \"watchers_count\": 492, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": false, #>     \"has_downloads\": true, #>     \"has_wiki\": false, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 179, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 84, #>     \"license\": { #>       \"key\": \"gpl-3.0\", #>       \"name\": \"GNU General Public License v3.0\", #>       \"spdx_id\": \"GPL-3.0\", #>       \"url\": \"https://api.github.com/licenses/gpl-3.0\", #>       \"node_id\": \"MDc6TGljZW5zZTk=\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [ #>       \"bigquery\", #>       \"database\", #>       \"r\" #>     ], #>     \"visibility\": \"public\", #>     \"forks\": 179, #>     \"open_issues\": 84, #>     \"watchers\": 492, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  gh(\"/users/{username}/starred\", username = \"hadley\", .limit = 2) #> [ #>   { #>     \"id\": 390115983, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkzOTAxMTU5ODM=\", #>     \"name\": \"py-shiny\", #>     \"full_name\": \"rstudio/py-shiny\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"rstudio\", #>       \"id\": 513560, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjUxMzU2MA==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/513560?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/rstudio\", #>       \"html_url\": \"https://github.com/rstudio\", #>       \"followers_url\": \"https://api.github.com/users/rstudio/followers\", #>       \"following_url\": \"https://api.github.com/users/rstudio/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/rstudio/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/rstudio/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/rstudio/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/rstudio/orgs\", #>       \"repos_url\": \"https://api.github.com/users/rstudio/repos\", #>       \"events_url\": \"https://api.github.com/users/rstudio/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/rstudio/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/rstudio/py-shiny\", #>     \"description\": \"Shiny for Python\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/rstudio/py-shiny\", #>     \"forks_url\": \"https://api.github.com/repos/rstudio/py-shiny/forks\", #>     \"keys_url\": \"https://api.github.com/repos/rstudio/py-shiny/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/rstudio/py-shiny/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/rstudio/py-shiny/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/rstudio/py-shiny/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/rstudio/py-shiny/events\", #>     \"assignees_url\": \"https://api.github.com/repos/rstudio/py-shiny/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/rstudio/py-shiny/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/rstudio/py-shiny/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/rstudio/py-shiny/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/rstudio/py-shiny/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/rstudio/py-shiny/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/rstudio/py-shiny/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/rstudio/py-shiny/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/rstudio/py-shiny/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/rstudio/py-shiny/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/rstudio/py-shiny/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/rstudio/py-shiny/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/rstudio/py-shiny/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/rstudio/py-shiny/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/rstudio/py-shiny/merges\", #>     \"archive_url\": \"https://api.github.com/repos/rstudio/py-shiny/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/rstudio/py-shiny/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/rstudio/py-shiny/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/rstudio/py-shiny/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/rstudio/py-shiny/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/rstudio/py-shiny/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/rstudio/py-shiny/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/rstudio/py-shiny/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/rstudio/py-shiny/deployments\", #>     \"created_at\": \"2021-07-27T20:19:49Z\", #>     \"updated_at\": \"2023-07-20T08:23:16Z\", #>     \"pushed_at\": \"2023-07-20T19:55:46Z\", #>     \"git_url\": \"git://github.com/rstudio/py-shiny.git\", #>     \"ssh_url\": \"git@github.com:rstudio/py-shiny.git\", #>     \"clone_url\": \"https://github.com/rstudio/py-shiny.git\", #>     \"svn_url\": \"https://github.com/rstudio/py-shiny\", #>     \"homepage\": \"https://shiny.posit.co/py/\", #>     \"size\": 11703, #>     \"stargazers_count\": 552, #>     \"watchers_count\": 552, #>     \"language\": \"Python\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 34, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 171, #>     \"license\": { #>       \"key\": \"mit\", #>       \"name\": \"MIT License\", #>       \"spdx_id\": \"MIT\", #>       \"url\": \"https://api.github.com/licenses/mit\", #>       \"node_id\": \"MDc6TGljZW5zZTEz\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 34, #>     \"open_issues\": 171, #>     \"watchers\": 552, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 10221246, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMDIyMTI0Ng==\", #>     \"name\": \"bigrquery\", #>     \"full_name\": \"r-dbi/bigrquery\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"r-dbi\", #>       \"id\": 5695665, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjU2OTU2NjU=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5695665?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/r-dbi\", #>       \"html_url\": \"https://github.com/r-dbi\", #>       \"followers_url\": \"https://api.github.com/users/r-dbi/followers\", #>       \"following_url\": \"https://api.github.com/users/r-dbi/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/r-dbi/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/r-dbi/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/r-dbi/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/r-dbi/orgs\", #>       \"repos_url\": \"https://api.github.com/users/r-dbi/repos\", #>       \"events_url\": \"https://api.github.com/users/r-dbi/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/r-dbi/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"description\": \"An interface to Google's BigQuery from R.\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/r-dbi/bigrquery\", #>     \"forks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/forks\", #>     \"keys_url\": \"https://api.github.com/repos/r-dbi/bigrquery/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/r-dbi/bigrquery/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/r-dbi/bigrquery/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/events\", #>     \"assignees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/r-dbi/bigrquery/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/r-dbi/bigrquery/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/r-dbi/bigrquery/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/r-dbi/bigrquery/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/r-dbi/bigrquery/merges\", #>     \"archive_url\": \"https://api.github.com/repos/r-dbi/bigrquery/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/r-dbi/bigrquery/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/r-dbi/bigrquery/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/r-dbi/bigrquery/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/r-dbi/bigrquery/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/r-dbi/bigrquery/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/r-dbi/bigrquery/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/deployments\", #>     \"created_at\": \"2013-05-22T14:04:16Z\", #>     \"updated_at\": \"2023-07-13T05:53:58Z\", #>     \"pushed_at\": \"2023-07-08T17:32:26Z\", #>     \"git_url\": \"git://github.com/r-dbi/bigrquery.git\", #>     \"ssh_url\": \"git@github.com:r-dbi/bigrquery.git\", #>     \"clone_url\": \"https://github.com/r-dbi/bigrquery.git\", #>     \"svn_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"homepage\": \"https://bigrquery.r-dbi.org\", #>     \"size\": 1757, #>     \"stargazers_count\": 492, #>     \"watchers_count\": 492, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": false, #>     \"has_downloads\": true, #>     \"has_wiki\": false, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 179, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 84, #>     \"license\": { #>       \"key\": \"gpl-3.0\", #>       \"name\": \"GNU General Public License v3.0\", #>       \"spdx_id\": \"GPL-3.0\", #>       \"url\": \"https://api.github.com/licenses/gpl-3.0\", #>       \"node_id\": \"MDc6TGljZW5zZTk=\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [ #>       \"bigquery\", #>       \"database\", #>       \"r\" #>     ], #>     \"visibility\": \"public\", #>     \"forks\": 179, #>     \"open_issues\": 84, #>     \"watchers\": 492, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  if (FALSE) { ## Create a repository, needs a token in GITHUB_PAT (or GITHUB_TOKEN) ## environment variable gh(\"POST /user/repos\", name = \"foobar\") } ## Issues of a repository gh(\"/repos/hadley/dplyr/issues\") #> [ #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6885\", #>     \"id\": 1812200827, #>     \"node_id\": \"I_kwDOAGIUpc5sA_17\", #>     \"number\": 6885, #>     \"title\": \"Unexpected behavior in `filter()` when column name matches an environment variable\", #>     \"user\": { #>       \"login\": \"bzbradford\", #>       \"id\": 12737774, #>       \"node_id\": \"MDQ6VXNlcjEyNzM3Nzc0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/12737774?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/bzbradford\", #>       \"html_url\": \"https://github.com/bzbradford\", #>       \"followers_url\": \"https://api.github.com/users/bzbradford/followers\", #>       \"following_url\": \"https://api.github.com/users/bzbradford/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/bzbradford/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/bzbradford/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/bzbradford/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/bzbradford/orgs\", #>       \"repos_url\": \"https://api.github.com/users/bzbradford/repos\", #>       \"events_url\": \"https://api.github.com/users/bzbradford/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/bzbradford/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-19T15:29:58Z\", #>     \"updated_at\": \"2023-07-19T15:29:58Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"A friend and I have both encountered unexpected behavior from `filter()` and struggled to debug it until realizing that `filter()` was comparing a column against itself, instead of against a variable of the same name that had been defined elsewhere in the environment (for example, as a function argument).\\r\\n\\r\\n```r\\r\\nlibrary(dplyr)\\r\\n\\r\\n# mtcars has 32 rows originally\\r\\nnrow(mtcars)\\r\\n# > [1] 32\\r\\n\\r\\n# should show that 11 cars have 4 cylinders\\r\\nmtcars |> filter(cyl == 4) |> nrow()\\r\\n# > [1] 11\\r\\n\\r\\n# should also show that 11 cars have 4 cylinders\\r\\ncyl <- 4\\r\\nmtcars |> filter(cyl == cyl) |> nrow()\\r\\n# > [1] 32\\r\\n```\\r\\n\\r\\nPossible solutions:\\r\\n\\r\\n- `filter()` warns when comparing a column against itself (which would return all rows), much like it warns when using a single `=` instead of double equal `==`\\r\\n- `filter()` first looks to the environment for a defined variable of the same name as the column when a column is possibly compared against itself\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6876\", #>     \"id\": 1781513615, #>     \"node_id\": \"PR_kwDOAGIUpc5URz0T\", #>     \"number\": 6876, #>     \"title\": \"Update slice.R\", #>     \"user\": { #>       \"login\": \"scarioscia\", #>       \"id\": 54126393, #>       \"node_id\": \"MDQ6VXNlcjU0MTI2Mzkz\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/54126393?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/scarioscia\", #>       \"html_url\": \"https://github.com/scarioscia\", #>       \"followers_url\": \"https://api.github.com/users/scarioscia/followers\", #>       \"following_url\": \"https://api.github.com/users/scarioscia/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/scarioscia/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/scarioscia/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/scarioscia/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/scarioscia/orgs\", #>       \"repos_url\": \"https://api.github.com/users/scarioscia/repos\", #>       \"events_url\": \"https://api.github.com/users/scarioscia/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/scarioscia/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-29T21:04:27Z\", #>     \"updated_at\": \"2023-06-29T21:04:27Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6876\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6876\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6876.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6876.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"switched highest/lowest for slice_min and slice_max to improve clarity\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6875\", #>     \"id\": 1780932366, #>     \"node_id\": \"PR_kwDOAGIUpc5UP25J\", #>     \"number\": 6875, #>     \"title\": \"Fix typos plus minor tweaks\", #>     \"user\": { #>       \"login\": \"salim-b\", #>       \"id\": 20040931, #>       \"node_id\": \"MDQ6VXNlcjIwMDQwOTMx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/20040931?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/salim-b\", #>       \"html_url\": \"https://github.com/salim-b\", #>       \"followers_url\": \"https://api.github.com/users/salim-b/followers\", #>       \"following_url\": \"https://api.github.com/users/salim-b/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/salim-b/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/salim-b/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/salim-b/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/salim-b/orgs\", #>       \"repos_url\": \"https://api.github.com/users/salim-b/repos\", #>       \"events_url\": \"https://api.github.com/users/salim-b/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/salim-b/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-29T14:20:03Z\", #>     \"updated_at\": \"2023-06-29T14:20:03Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6875\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6875\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6875.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6875.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": {}, #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6870\", #>     \"id\": 1772889820, #>     \"node_id\": \"I_kwDOAGIUpc5prCbc\", #>     \"number\": 6870, #>     \"title\": \"Unexpected interaction between rowwise and group_modify\", #>     \"user\": { #>       \"login\": \"banbh\", #>       \"id\": 5741, #>       \"node_id\": \"MDQ6VXNlcjU3NDE=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5741?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/banbh\", #>       \"html_url\": \"https://github.com/banbh\", #>       \"followers_url\": \"https://api.github.com/users/banbh/followers\", #>       \"following_url\": \"https://api.github.com/users/banbh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/banbh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/banbh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/banbh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/banbh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/banbh/repos\", #>       \"events_url\": \"https://api.github.com/users/banbh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/banbh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 1728164976, #>         \"node_id\": \"MDU6TGFiZWwxNzI4MTY0OTc2\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/grouping%20:family_man_woman_girl_boy:\", #>         \"name\": \"grouping :family_man_woman_girl_boy:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-06-24T19:49:55Z\", #>     \"updated_at\": \"2023-07-17T13:03:47Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It appears that after an application of `rowwise` the behavior of `group_modify` differs from that of `group_walk` and `group_map`; the latter two behave as expected. For example, I expected all three pipelines to print two \\\"hello\\\"s, but the `group_modify` one only prints one.\\r\\n\\r\\n```r\\r\\nlibrary(dplyr) # dplyr_1.1.2\\r\\n\\r\\nX <- tibble(a = 1:2)\\r\\n\\r\\nf <- \\\\(...) {\\r\\n  print('hello')\\r\\n  tibble(x = runif(3))\\r\\n}\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_walk(f) # two hellos\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_map(f) |> # two hellos\\r\\n  invisible()\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_modify(f) |> # one hello ???\\r\\n  invisible()\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6868\", #>     \"id\": 1757231728, #>     \"node_id\": \"I_kwDOAGIUpc5ovTpw\", #>     \"number\": 6868, #>     \"title\": \"trailing comma in `across()` gives an unhelpful message\", #>     \"user\": { #>       \"login\": \"olivroy\", #>       \"id\": 52606734, #>       \"node_id\": \"MDQ6VXNlcjUyNjA2NzM0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/52606734?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/olivroy\", #>       \"html_url\": \"https://github.com/olivroy\", #>       \"followers_url\": \"https://api.github.com/users/olivroy/followers\", #>       \"following_url\": \"https://api.github.com/users/olivroy/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/olivroy/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/olivroy/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/olivroy/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/olivroy/orgs\", #>       \"repos_url\": \"https://api.github.com/users/olivroy/repos\", #>       \"events_url\": \"https://api.github.com/users/olivroy/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/olivroy/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 1880639897, #>         \"node_id\": \"MDU6TGFiZWwxODgwNjM5ODk3\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/each-col%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"each-col ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-14T16:04:55Z\", #>     \"updated_at\": \"2023-06-28T12:22:24Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It took me a while to figure out the error, hence why I'm filing an issue (feel free to close).\\r\\n\\r\\nIt is just that with many functions, a trailing comma doesn't matter.\\r\\n\\r\\n---\\r\\n\\r\\nI forgot a trailing comma and it lead to a unhelpful error message. \\r\\nWould it be possible to improve this error message, (or not get error, like with `mutate()`, `summarise()` etc.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\nmtcars |> mutate(across(vs, \\\\(x) x +1, .names = \\\"x\\\")) # works fine, if you write the code correctly\\r\\nmtcars |> mutate(across(vs, \\\\(x) x +1, .names = \\\"x\\\",)) # gives a hard to understand error message.\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(vs, function(x) x + 1, .names = \\\"x\\\", )`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `x`.\\r\\n#> Caused by error in `fn()`:\\r\\n#> ! Unused argument (alist())\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::mutate(...)\\r\\n#>   2. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   3. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   4. │   ├─base::withCallingHandlers(...)\\r\\n#>   5. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   6. │     └─mask$eval_all_mutate(quo)\\r\\n#>   7. │       └─dplyr (local) eval()\\r\\n#>   8. ├─dplyr::across(vs, function(x) x + 1, .names = \\\"x\\\", )\\r\\n#>   9. │ └─base::withCallingHandlers(...)\\r\\n#>  10. └─base::.handleSimpleError(...)\\r\\n#>  11.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  12.     └─rlang::abort(bullets, call = error_call, parent = cnd)\\r\\n栀Ƭ\\r\\n#> Error in eval(expr, envir, enclos): object'栀Ƭ' not found\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-06-14 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nFor reference, the `if_all()` error message is a bit better\\r\\n\\r\\n```r\\r\\nmtcars |> filter(if_all(vs, is.na, ))\\r\\nError in `filter()`:\\r\\nℹ In argument: `if_all(vs, is.na, )`.\\r\\nCaused by error in `if_all()`:\\r\\n! Can't compute column `vs`.\\r\\nCaused by error in `withCallingHandlers()`:\\r\\n! argument is missing, with no default\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6864\", #>     \"id\": 1743154315, #>     \"node_id\": \"I_kwDOAGIUpc5n5myL\", #>     \"number\": 6864, #>     \"title\": \"Improve documentation for `rows_insert()` vs `rows_append()`\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 674867158, #>         \"node_id\": \"MDU6TGFiZWw2NzQ4NjcxNTg=\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/documentation\", #>         \"name\": \"documentation\", #>         \"color\": \"CBBAB8\", #>         \"default\": true, #>         \"description\": \"\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-06-06T06:10:33Z\", #>     \"updated_at\": \"2023-06-28T12:23:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It seems that people easily confuse what `rows_insert()` is for and use it when they actually need `rows_append()` (e.g. tidyverse/dbplyr#1297 or tidyverse/dbplyr#1149). It would be nice to improve the documentation (or maybe even the names) of `rows_insert()` and `rows_append()` to make it more clear when to use which function.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6862\", #>     \"id\": 1732939973, #>     \"node_id\": \"I_kwDOAGIUpc5nSpDF\", #>     \"number\": 6862, #>     \"title\": \"case_when gives confusing and inconsistent error messages when conditions are matrices\", #>     \"user\": { #>       \"login\": \"DarwinAwardWinner\", #>       \"id\": 228145, #>       \"node_id\": \"MDQ6VXNlcjIyODE0NQ==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/228145?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DarwinAwardWinner\", #>       \"html_url\": \"https://github.com/DarwinAwardWinner\", #>       \"followers_url\": \"https://api.github.com/users/DarwinAwardWinner/followers\", #>       \"following_url\": \"https://api.github.com/users/DarwinAwardWinner/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DarwinAwardWinner/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DarwinAwardWinner/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DarwinAwardWinner/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DarwinAwardWinner/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DarwinAwardWinner/repos\", #>       \"events_url\": \"https://api.github.com/users/DarwinAwardWinner/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DarwinAwardWinner/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-30T20:19:09Z\", #>     \"updated_at\": \"2023-05-31T14:43:28Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Please briefly describe your problem and what output you expect. If you have a question, please don't use this form. Instead, ask on <https://stackoverflow.com/> or <https://community.rstudio.com/>.\\r\\n\\r\\nPlease include a minimal reproducible example (AKA a reprex). If you've never heard of a [reprex](http://reprex.tidyverse.org/) before, start by reading <https://www.tidyverse.org/help/#reprex>.\\r\\n\\r\\n---\\r\\n\\r\\nI had some code that was passing matrices as the conditions to a `case_when` statement. Previously, `case_when` would implicitly convert these matrices to vectors, but at some point it stopped doing that. However, I don't think this was an intentional behavior change, because depending on how exactly one calls `case_when` on matrix conditions, it can produce one of several different error messages or return a value of the wrong length (see reprex below demonstrating 3 different behaviors). None of the error messages hint at the underlying problem, which made debugging this issue after a package update very difficult.\\r\\n\\r\\nIf passing matrices as the conditions to `case_when` is not an intended usage, I would expect it to produce an interpretable error message to that effect.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\nlibrary(assertthat)\\r\\n\\r\\nx <- matrix(rnorm(36), ncol = 6)\\r\\n\\r\\n## Each of the following generates a different error\\r\\n{\\r\\n  y1 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    .default = \\\"Default\\\"\\r\\n  )\\r\\n  assert_that(length(y1) == length(x))\\r\\n}\\r\\n#> Error: length(y1) not equal to length(x)\\r\\n\\r\\n{\\r\\n  y2 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    x < 0 ~ \\\"Negative\\\",\\r\\n    .default = \\\"Default\\\"\\r\\n  )\\r\\n  assert_that(length(y2) == length(x))\\r\\n}\\r\\n#> Error in `vec_slice()`:\\r\\n#> ! Can't subset elements past the end.\\r\\n#> ℹ Locations 8, 10, 13, …, 35, and 36 don't exist.\\r\\n#> ℹ There are only 6 elements.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. ├─dplyr::case_when(...)\\r\\n#>  2. │ └─dplyr:::vec_case_when(...)\\r\\n#>  3. │   └─vctrs::vec_slice(value, loc)\\r\\n#>  4. └─vctrs (local) `<fn>`()\\r\\n#>  5.   └─vctrs:::stop_subscript_oob(...)\\r\\n#>  6.     └─vctrs:::stop_subscript(...)\\r\\n#>  7.       └─rlang::abort(...)\\r\\n\\r\\n{\\r\\n  y3 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    x < 0 ~ \\\"Negative\\\",\\r\\n    x > 0 ~ \\\"Positive\\\",\\r\\n    x == 0 ~ \\\"Zero\\\"\\r\\n  )\\r\\n  assert_that(length(y3) == length(x))\\r\\n}\\r\\n#> Error in if (!any(are_unused)) {: missing value where TRUE/FALSE needed\\r\\n\\r\\n## Everything works fine if you convert x to a vector\\r\\n{\\r\\n  xvec <- as.vector(x)\\r\\n  yvec <- case_when(\\r\\n    !is.finite(xvec) ~ \\\"Invalid\\\",\\r\\n    xvec < 0 ~ \\\"Negative\\\",\\r\\n    xvec > 0 ~ \\\"Positive\\\",\\r\\n    xvec == 0 ~ \\\"Zero\\\"\\r\\n  )\\r\\n  assert_that(length(yvec) == length(xvec))\\r\\n}\\r\\n#> [1] TRUE\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-30 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6861\", #>     \"id\": 1732916405, #>     \"node_id\": \"I_kwDOAGIUpc5nSjS1\", #>     \"number\": 6861, #>     \"title\": \"`mutate` superseding `transmute` should allow ordering columns\", #>     \"user\": { #>       \"login\": \"epruesse\", #>       \"id\": 2774474, #>       \"node_id\": \"MDQ6VXNlcjI3NzQ0NzQ=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2774474?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/epruesse\", #>       \"html_url\": \"https://github.com/epruesse\", #>       \"followers_url\": \"https://api.github.com/users/epruesse/followers\", #>       \"following_url\": \"https://api.github.com/users/epruesse/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/epruesse/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/epruesse/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/epruesse/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/epruesse/orgs\", #>       \"repos_url\": \"https://api.github.com/users/epruesse/repos\", #>       \"events_url\": \"https://api.github.com/users/epruesse/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/epruesse/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 3407329987, #>         \"node_id\": \"LA_kwDOAGIUpc7LF7rD\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/columns%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"columns ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on columns: mutate(), select(),  rename(), relocate()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-05-30T20:02:59Z\", #>     \"updated_at\": \"2023-07-17T13:54:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I recently noticed that `transmute` has been marked as superseded by `mutate(.keep=\\\"none\\\")`. However, it turned out that `mutate` doesn't replicate column ordering behavior of `transmute`, but does something odd:\\r\\n\\r\\n```r\\r\\n> data.frame(a=1, b=2) %>% transmute(a, x=b*2, b)\\r\\n  a x b\\r\\n1 1 4 2\\r\\n> data.frame(a=1, b=2) %>% mutate(a, x=b*2, b, .keep=\\\"none\\\")\\r\\n  a b x\\r\\n1 1 2 4\\r\\n```\\r\\nWith more complex examples, the ordering becomes pretty confusing and difficult to explain. I'm guessing this may have to do with the `.keep = \\\"used\\\"` use case resorting things. For `.keep = \\\"none\\\"`, explicit column ordering as given, replicating or approximating `transmute` behavior,  would be much more useful (e.g. order of first LHS mention or last LHS mention).\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/reactions\", #>       \"total_count\": 3, #>       \"+1\": 3, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6860\", #>     \"id\": 1730019861, #>     \"node_id\": \"PR_kwDOAGIUpc5RkSaK\", #>     \"number\": 6860, #>     \"title\": \"WIP: Shortcut for count()\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-29T04:26:58Z\", #>     \"updated_at\": \"2023-05-29T04:35:14Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6860\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6860\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6860.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6860.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"This is an attempt to improve the run time of TPCH-21 which uses `count()` over a large table with many groups. Gives a speedup of up to 3. A slippery slope, but might be worthwhile because the vast majority of summaries are simple counts?\\r\\n\\r\\n## This PR\\r\\n\\r\\n``` r\\r\\noptions(conflicts.policy = list(warn = FALSE))\\r\\nlibrary(tidyverse)\\r\\n\\r\\nset.seed(20230529)\\r\\n\\r\\nget_data <- function(N) {\\r\\n  distr <- (trunc(rexp(N, 3)) + 1)\\r\\n  id <- rep(seq_along(distr), distr)\\r\\n  sec <- as.integer(trunc(runif(length(id), 1, 3)))\\r\\n  tibble(id, sec)\\r\\n}\\r\\n\\r\\ndata <- get_data(1e4)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.021   0.001   0.022\\r\\ndata <- get_data(1e5)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.107   0.006   0.113\\r\\ndata <- get_data(1e6)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   1.418   0.050   1.469\\r\\ndata <- get_data(1e7)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>  13.391   0.367  13.763\\r\\n\\r\\nget_data(40) |>\\r\\n  filter(id >= 30)\\r\\n#> # A tibble: 15 × 2\\r\\n#>       id   sec\\r\\n#>    <int> <int>\\r\\n#>  1    30     2\\r\\n#>  2    31     2\\r\\n#>  3    32     1\\r\\n#>  4    32     1\\r\\n#>  5    33     2\\r\\n#>  6    34     2\\r\\n#>  7    35     2\\r\\n#>  8    35     2\\r\\n#>  9    35     1\\r\\n#> 10    36     2\\r\\n#> 11    37     2\\r\\n#> 12    38     2\\r\\n#> 13    38     1\\r\\n#> 14    39     1\\r\\n#> 15    40     2\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-29 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\n## v1.1.2\\r\\n\\r\\n``` r\\r\\noptions(conflicts.policy = list(warn = FALSE))\\r\\nlibrary(tidyverse)\\r\\n\\r\\nset.seed(20230529)\\r\\n\\r\\nget_data <- function(N) {\\r\\n  distr <- (trunc(rexp(N, 3)) + 1)\\r\\n  id <- rep(seq_along(distr), distr)\\r\\n  sec <- as.integer(trunc(runif(length(id), 1, 3)))\\r\\n  tibble(id, sec)\\r\\n}\\r\\n\\r\\ndata <- get_data(1e4)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.034   0.002   0.036\\r\\ndata <- get_data(1e5)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.276   0.007   0.283\\r\\ndata <- get_data(1e6)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   3.486   0.085   3.576\\r\\ndata <- get_data(1e7)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>  38.666   0.708  39.530\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-29 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6858\", #>     \"id\": 1725001572, #>     \"node_id\": \"PR_kwDOAGIUpc5RTTr7\", #>     \"number\": 6858, #>     \"title\": \"trivial change to dataset documentation\", #>     \"user\": { #>       \"login\": \"UmbertoFasci\", #>       \"id\": 48659857, #>       \"node_id\": \"MDQ6VXNlcjQ4NjU5ODU3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/48659857?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/UmbertoFasci\", #>       \"html_url\": \"https://github.com/UmbertoFasci\", #>       \"followers_url\": \"https://api.github.com/users/UmbertoFasci/followers\", #>       \"following_url\": \"https://api.github.com/users/UmbertoFasci/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/UmbertoFasci/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/UmbertoFasci/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/UmbertoFasci/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/UmbertoFasci/orgs\", #>       \"repos_url\": \"https://api.github.com/users/UmbertoFasci/repos\", #>       \"events_url\": \"https://api.github.com/users/UmbertoFasci/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/UmbertoFasci/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-25T02:59:51Z\", #>     \"updated_at\": \"2023-05-25T02:59:51Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6858\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6858\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6858.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6858.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"The following is an edit on the starwars.R dataset source file which amends a trivial issue to improve readability.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6856\", #>     \"id\": 1722432895, #>     \"node_id\": \"I_kwDOAGIUpc5mqj1_\", #>     \"number\": 6856, #>     \"title\": \"Adjusting to different behaviour between `case_match` and `recode`\", #>     \"user\": { #>       \"login\": \"manhnguyen48\", #>       \"id\": 24793324, #>       \"node_id\": \"MDQ6VXNlcjI0NzkzMzI0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/24793324?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/manhnguyen48\", #>       \"html_url\": \"https://github.com/manhnguyen48\", #>       \"followers_url\": \"https://api.github.com/users/manhnguyen48/followers\", #>       \"following_url\": \"https://api.github.com/users/manhnguyen48/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/manhnguyen48/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/manhnguyen48/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/manhnguyen48/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/manhnguyen48/orgs\", #>       \"repos_url\": \"https://api.github.com/users/manhnguyen48/repos\", #>       \"events_url\": \"https://api.github.com/users/manhnguyen48/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/manhnguyen48/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-23T16:33:23Z\", #>     \"updated_at\": \"2023-07-10T16:15:40Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Since `recode` is being superseded, I'm looking at changing to `case_match`. I usually use it to reverse code an integer vector (e.g. 1 -> 5,  5 -> 1, etc.) and have found named list/vector useful but `case_match` doesn't accept the same. \\r\\nThe named list approach is useful to include `recode` in other functions as named list are more straightforward to produce. \\r\\nHow should I adapt here? \\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\nx <- rep(1:5, 5)\\r\\n#This still works\\r\\ndplyr::recode(x, !!!setNames(1:5, 5:1))\\r\\n#>  [1] 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1\\r\\n#This does not work\\r\\ndplyr::case_match(x, !!!setNames(1:5, 5:1))\\r\\n#> Error in `dplyr::case_match()`:\\r\\n#> ! Case 1 (`!!!setNames(1:5, 5:1)`) must be a two-sided formula, not the\\r\\n#>   number 1.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::case_match(x, !!!setNames(1:5, 5:1))\\r\\n#>  2.   └─dplyr:::case_formula_evaluate(...)\\r\\n#>  3.     └─dplyr:::map2(...)\\r\\n#>  4.       └─base::mapply(.f, .x, .y, MoreArgs = list(...), SIMPLIFY = FALSE)\\r\\n#>  5.         └─dplyr (local) `<fn>`(dots[[1L]][[1L]], dots[[2L]][[1L]])\\r\\n#>  6.           └─dplyr:::validate_and_split_formula(...)\\r\\n#>  7.             └─rlang::abort(message, call = error_call)\\r\\n#Instead we have to do this\\r\\ndplyr::case_match(x, 1~5, 2~4, 3~3, 4~2, 5~1)\\r\\n#>  [1] 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-23 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/reactions\", #>       \"total_count\": 5, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 4 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6853\", #>     \"id\": 1720956991, #>     \"node_id\": \"I_kwDOAGIUpc5mk7g_\", #>     \"number\": 6853, #>     \"title\": \"Possible regression re. use of glue in dplyr::across\", #>     \"user\": { #>       \"login\": \"jimjam-slam\", #>       \"id\": 6520659, #>       \"node_id\": \"MDQ6VXNlcjY1MjA2NTk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/6520659?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/jimjam-slam\", #>       \"html_url\": \"https://github.com/jimjam-slam\", #>       \"followers_url\": \"https://api.github.com/users/jimjam-slam/followers\", #>       \"following_url\": \"https://api.github.com/users/jimjam-slam/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/jimjam-slam/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/jimjam-slam/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/jimjam-slam/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/jimjam-slam/orgs\", #>       \"repos_url\": \"https://api.github.com/users/jimjam-slam/repos\", #>       \"events_url\": \"https://api.github.com/users/jimjam-slam/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/jimjam-slam/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-05-23T01:07:16Z\", #>     \"updated_at\": \"2023-06-07T11:01:37Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"body\": \"This is discussed in https://twitter.com/mjskay/status/1660770865087148032\\r\\n\\r\\nEssentially, users are reporting errors when using `glue` inside an anonymous function given to `dplyr::across()`. This error did not previously exist.\\r\\n\\r\\nOn [my setup](https://twitter.com/jimjam_slam/status/1659392114994839553?s=20), with R 4.2.2 on macOS, and with dplyr 1.0.10 and glue 1.6.2, the following works to modify two columns:\\r\\n\\r\\n```r\\r\\nlibrary(dplyr)\\r\\nlibrary(glue)\\r\\nmtcars |> mutate(across(c(mpg, cyl), \\\\(x) glue(\\\"Oh hai {x}\\\")))\\r\\n```\\r\\n\\r\\n![image](https://github.com/tidyverse/glue/assets/6520659/2843bd11-13a7-408a-b100-1769c79529d9)\\r\\n\\r\\nBut [Matthew Kay reports](https://twitter.com/mjskay/status/1659381134273150977?s=20) that they get an error, unless they add dots to the anonymous function or save it to a variable before passing it to `across`:\\r\\n\\r\\n![image](https://github.com/tidyverse/dplyr/assets/6520659/f33ce5ec-a5f5-4cb9-bf2e-94e049bcba39)\\r\\n\\r\\n[Cameron Patrick](https://twitter.com/camjpatrick/status/1659376009375027200?s=20) also gets an error on R 4.2.3 for Windows with dplyr 1.1.1 and glue 1.6.2 (the same version of glue as me). They get this using the purrr anonymous function syntax:\\r\\n\\r\\n![image](https://github.com/tidyverse/dplyr/assets/6520659/83c6b1c8-65d2-4b76-9801-ff93273e077c)\\r\\n\\r\\n\\r\\nI'm not sure whether this is a problem with glue, dplyr or an interaction between the two, but as the version of glue between my successful reprex and Cameron's unsuccessful one isn't changed, I've chosen to file here.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/reactions\", #>       \"total_count\": 3, #>       \"+1\": 3, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6848\", #>     \"id\": 1708211113, #>     \"node_id\": \"I_kwDOAGIUpc5l0Tup\", #>     \"number\": 6848, #>     \"title\": \"slice_sample() uses statistically incorrect sampling algorithms\", #>     \"user\": { #>       \"login\": \"skolenik\", #>       \"id\": 20828835, #>       \"node_id\": \"MDQ6VXNlcjIwODI4ODM1\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/20828835?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/skolenik\", #>       \"html_url\": \"https://github.com/skolenik\", #>       \"followers_url\": \"https://api.github.com/users/skolenik/followers\", #>       \"following_url\": \"https://api.github.com/users/skolenik/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/skolenik/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/skolenik/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/skolenik/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/skolenik/orgs\", #>       \"repos_url\": \"https://api.github.com/users/skolenik/repos\", #>       \"events_url\": \"https://api.github.com/users/skolenik/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/skolenik/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-12T21:05:01Z\", #>     \"updated_at\": \"2023-05-15T14:33:56Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"`slice_sample()` relies on `base::sample.int()` which in turn relies on incorrect sampling algorithms. The difficulty of obtaining appropriate unequal probability samples is obscure and is not known outside of survey statistics. I don't want to go into base R code although they have to fix that, too (somewhat more surprising given that Thomas Lumley, one of the core R people, is a survey statistician, at least part time). The appropriate algorithms are implemented in `sampling::UPmaxentropy()`.\\r\\n\\r\\n```r\\r\\n# example from Tille (2006)\\r\\nset.seed(25)\\r\\nuneq_p = c(0.07,0.17,0.41,0.61,0.83,0.91)\\r\\nsim_uneq_p <- as.data.frame(matrix(rep(0,6*20000),ncol=6))\\r\\nfor (k in 1:nrow(sim_uneq_p)) {\\r\\n  this <- sample.int(n=length(uneq_p),size=sum(uneq_p),prob=uneq_p)\\r\\n  sim_uneq_p[k,this] <- 1\\r\\n}\\r\\ncolSums(sim_uneq_p)/nrow(sim_uneq_p)\\r\\nuneq_p\\r\\n# done right\\r\\nsim_uneq_p_done_right <- as.data.frame(matrix(rep(0,6*20000),ncol=6))\\r\\nfor (k in 1:nrow(sim_uneq_p_done_right)) {\\r\\n   sim_uneq_p_done_right[k,] <- sampling::UPmaxentropy(uneq_p)\\r\\n}\\r\\ncolSums(sim_uneq_p_done_right)/nrow(sim_uneq_p_done_right)\\r\\nuneq_p\\r\\n```\\r\\n\\r\\n@krlmlr @DavisVaughan \\r\\n\\r\\nCode in `sampling` is (kinda) ugly, and the development most likely does not satisfy the `tidyverse` standards. I don't know if you want to rely on this as a dependency. Relevant parts may need to be taken over and internalized. (I have written the unequal probability sampling code from scratch in Stata, so I am closely familiar with the methodology and what it takes to code it.)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6840\", #>     \"id\": 1696095377, #>     \"node_id\": \"PR_kwDOAGIUpc5PyELK\", #>     \"number\": 6840, #>     \"title\": \"Update starwars.csv\", #>     \"user\": { #>       \"login\": \"robcreel\", #>       \"id\": 5250939, #>       \"node_id\": \"MDQ6VXNlcjUyNTA5Mzk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5250939?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/robcreel\", #>       \"html_url\": \"https://github.com/robcreel\", #>       \"followers_url\": \"https://api.github.com/users/robcreel/followers\", #>       \"following_url\": \"https://api.github.com/users/robcreel/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/robcreel/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/robcreel/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/robcreel/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/robcreel/orgs\", #>       \"repos_url\": \"https://api.github.com/users/robcreel/repos\", #>       \"events_url\": \"https://api.github.com/users/robcreel/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/robcreel/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-05-04T14:05:23Z\", #>     \"updated_at\": \"2023-05-04T14:27:29Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6840\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6840\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6840.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6840.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Correct the capitalization of Beru's last name from \\\"lars\\\" to \\\"Lars\\\".\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6839\", #>     \"id\": 1693905728, #>     \"node_id\": \"I_kwDOAGIUpc5k9vNA\", #>     \"number\": 6839, #>     \"title\": \"Performance regression for dplyr::rowwise() introduced in version 1.1.0\", #>     \"user\": { #>       \"login\": \"shaneh2\", #>       \"id\": 5721999, #>       \"node_id\": \"MDQ6VXNlcjU3MjE5OTk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5721999?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/shaneh2\", #>       \"html_url\": \"https://github.com/shaneh2\", #>       \"followers_url\": \"https://api.github.com/users/shaneh2/followers\", #>       \"following_url\": \"https://api.github.com/users/shaneh2/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/shaneh2/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/shaneh2/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/shaneh2/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/shaneh2/orgs\", #>       \"repos_url\": \"https://api.github.com/users/shaneh2/repos\", #>       \"events_url\": \"https://api.github.com/users/shaneh2/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/shaneh2/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-03T11:39:37Z\", #>     \"updated_at\": \"2023-05-03T12:24:53Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It seems that a performance regression has been introduced for `dplyr::rowwise()` in `{dplyr}` version 1.1.0.\\r\\n\\r\\nI give some reprexes below illustrating large differences in execution time when using this on v1.1 compared to v1.0.10.\\r\\n * A: Execution of the function `test_code`, which uses `dplyr::rowwise()`, is fast in v1.0.10: **1.86 seconds**.\\r\\n * B: The same example is much slower in v1.1.0: **51.5 seconds**.\\r\\n   * B2: Execution time of a function called `test_code_without_rowwise`, which is modified not to use `dplyr::rowwise()` doesn't suffer these slowdowns: **0.337 seconds**.\\r\\n * C: Execution of the function `test_code`, which uses `dplyr::rowwise()`, is a similar duration in v1.1.1: **52.2 seconds**.\\r\\n\\r\\nThese seem to indicate that usage in `dplyr::rowwise` in v1.1.0+ is much slower than previous versions.\\r\\n\\r\\n*Note that we are using collapsable sections to improve readability of the code below. The functions in the collapsable sections are part of the reprexes.*\\r\\n\\r\\nA: Using `dplyr::rowwise()` in v1.0.10\\r\\n---\\r\\nExecution of the function `test_code`, which uses `dplyr::rowwise()`, is fast in v1.0.10: **1.86 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>**Click to show definitions of functions which are part of this reprex**<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.0.10\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.0.10 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 1.861705 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nB: Using `dplyr::rowwise()` in v1.1.0\\r\\n---\\r\\nThe same example is much slower in v1.1.0: **51.5 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as defined above are part of this reprex (Click to show)<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.0\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.0 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 51.51825 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n### B2: Avoiding use of `dplyr::rowwise()` in v1.1.0\\r\\n\\r\\nThis time difference doesn't appear in v1.1.0 when `dplyr::rowwise()` isn't used, indicating that `rowwise()` is what's causing the slowdown.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as above are included in this reprex, apart from `test_code` is replaced with `test_code_without_rowwise`<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code_without_rowwise = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    # rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code_without_rowwise()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.0\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.0 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 0.3373294 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nC: Using `dplyr::rowwise()` in v1.1.1\\r\\n---\\r\\nExecution of the same function `test_code` is a similar duration in v1.1.1: **52.2 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as defined above are part of this reprex (Click to show)<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n``` r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.1\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.1 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 52.21882 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6838\", #>     \"id\": 1691849841, #>     \"node_id\": \"I_kwDOAGIUpc5k15Rx\", #>     \"number\": 6838, #>     \"title\": \"Unhelpful error message when using `dplyr::between()` in `join_by()`\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-05-02T06:27:40Z\", #>     \"updated_at\": \"2023-05-02T14:01:49Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I accidentally used `dplyr::between()` instead of `between()` in `join_by()`. Not sure whether you want to accept it with a namespace or not but the error message isn't very helpful.\\r\\n\\r\\n``` r\\r\\ndplyr::join_by(dplyr::between(y, a, b))\\r\\n#> Error in `as_string()`:\\r\\n#> ! Can't convert a call to a string.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::join_by(dplyr::between(y, a, b))\\r\\n#>  2.   └─dplyr:::parse_join_by_expr(exprs[[i]], i, error_call = error_call)\\r\\n#>  3.     └─rlang::as_string(expr[[1]])\\r\\n#>  4.       └─rlang:::abort_coercion(x, \\\"a string\\\")\\r\\n#>  5.         └─rlang::abort(msg, call = call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-02 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/reactions\", #>       \"total_count\": 2, #>       \"+1\": 2, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6822\", #>     \"id\": 1666351494, #>     \"node_id\": \"I_kwDOAGIUpc5jUoGG\", #>     \"number\": 6822, #>     \"title\": \"Consider allowing `.env$` in `join_by()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-04-13T12:45:15Z\", #>     \"updated_at\": \"2023-04-13T13:06:14Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Motivated by https://github.com/tidyverse/dplyr/issues/6821\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf1 <- tibble(\\r\\n  X1 = c(\\\"chr1\\\", \\\"chr2\\\"),\\r\\n  a = c(1, 2)\\r\\n)\\r\\n\\r\\ndf2 <- tibble(\\r\\n  X2 = c(\\\"chr2\\\", \\\"chr3\\\"),\\r\\n  b = c(3, 4)\\r\\n)\\r\\n\\r\\nby.1 <- \\\"X1\\\"\\r\\nby.2 <- \\\"X2\\\"\\r\\n\\r\\n# The \\\"old\\\" way\\r\\n# inner_join(df1, df2, by = setNames(by.2, by.1))\\r\\n\\r\\n# This works but we don't typically encourage using `!!` in high level APIs\\r\\ninner_join(df1, df2, by = join_by(!!by.1 == !!by.2))\\r\\n#> # A tibble: 1 × 3\\r\\n#>   X1        a     b\\r\\n#>   <chr> <dbl> <dbl>\\r\\n#> 1 chr2      2     3\\r\\n \\r\\n# It might be nice to be able to do this, but it currently errors\\r\\ninner_join(df1, df2, by = join_by(.env$by.1 == .env$by.2))\\r\\n#> Error in `join_by()`:\\r\\n#> ! The left-hand side of a `$` expression must be either `x$` or `y$`.\\r\\n#> ℹ Expression 1 contains `.env$by.1`.\\r\\n```\\r\\n\\r\\nSome notes from talking with @lionel-:\\r\\n- We have an equivalent-ish to `.data$` already with `x$` and `y$`. They don't have a `.` prefix because I attempted to match the original argument names\\r\\n- So it seems like we are missing an equivalent to the `.env$` pronoun, and we may as well call it `.env$` here too\\r\\n- It would look up in the `caller_env()` of `join_by()`, and I don't think `join_by()` would get an `env = caller_env()` argument to \\\"pass the env through\\\" unlike what is done in `glue()`.\\r\\n- It would look up using `inherits = TRUE`, because it seems like tidy eval does this too, and we generally think that makes sense\\r\\n- It would require the result to be a single string, or die trying. i.e. you can only use this to inject a single name from the environment, not to inject an entire expression\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6817\", #>     \"id\": 1658192233, #>     \"node_id\": \"PR_kwDOAGIUpc5Nzt-8\", #>     \"number\": 6817, #>     \"title\": \"replace as_tibble with new_tibble in ungroup()\", #>     \"user\": { #>       \"login\": \"mkoohafkan\", #>       \"id\": 4790348, #>       \"node_id\": \"MDQ6VXNlcjQ3OTAzNDg=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4790348?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mkoohafkan\", #>       \"html_url\": \"https://github.com/mkoohafkan\", #>       \"followers_url\": \"https://api.github.com/users/mkoohafkan/followers\", #>       \"following_url\": \"https://api.github.com/users/mkoohafkan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mkoohafkan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mkoohafkan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mkoohafkan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mkoohafkan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mkoohafkan/repos\", #>       \"events_url\": \"https://api.github.com/users/mkoohafkan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mkoohafkan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-04-07T00:16:16Z\", #>     \"updated_at\": \"2023-04-07T04:56:49Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6817\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6817\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6817.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6817.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Make `ungroup()` handle attributes in a way that is consistent with other `dplyr` functions by using `new_tibble()` instead of `as_tibble()`.\\r\\n\\r\\nThis is also future-proof if it is later decided that `new_tibble()` should drop attributes.\\r\\n\\r\\nFixes https://github.com/tidyverse/dplyr/issues/6774 without affecting discussion in https://github.com/tidyverse/tibble/pull/769\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6809\", #>     \"id\": 1642598757, #>     \"node_id\": \"I_kwDOAGIUpc5h6BFl\", #>     \"number\": 6809, #>     \"title\": \"How to adjust to different behavior of across .fn argument passing in dplyr 1.1.1 vs. 1.0.10?\", #>     \"user\": { #>       \"login\": \"eipi10\", #>       \"id\": 436817, #>       \"node_id\": \"MDQ6VXNlcjQzNjgxNw==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/436817?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/eipi10\", #>       \"html_url\": \"https://github.com/eipi10\", #>       \"followers_url\": \"https://api.github.com/users/eipi10/followers\", #>       \"following_url\": \"https://api.github.com/users/eipi10/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/eipi10/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/eipi10/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/eipi10/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/eipi10/orgs\", #>       \"repos_url\": \"https://api.github.com/users/eipi10/repos\", #>       \"events_url\": \"https://api.github.com/users/eipi10/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/eipi10/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 11, #>     \"created_at\": \"2023-03-27T18:26:04Z\", #>     \"updated_at\": \"2023-04-07T22:20:48Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I have a summarizing function that's similar to the function below. It allows the user to pass grouping variables, summary variables and any number of summary functions as arguments. \\r\\n\\r\\n```\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n```\\r\\n\\r\\nI often use `weighted.mean` as a summary function in the `FUNS` argument, which requires a weighting variable, which I pass with the bare column name, like this:\\r\\n\\r\\n```\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n``` \\r\\n\\r\\nThis approach worked in `dplyr 1.0.10` and previous versions, but is failing in `dplyr 1.1.1`. Reproducible examples are below, first with 1.0.10 then with 1.1.1. \\r\\n\\r\\nHow can I update my function so that it will work properly with `dplyr 1.1.1`? I've never been happy with hard-coding the `w` argument anyway. Is there some tidyeval way that I should be passing the `w` argument into the summary function?\\r\\n\\r\\n### Example with `dplyr 1.0.10`\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n\\r\\n# These work in both 1.0.10 and 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp))\\r\\n#> # A tibble: 1 × 3\\r\\n#>       n mpg_mean hp_mean\\r\\n#>   <int>    <dbl>   <dbl>\\r\\n#> 1    32     20.1    147.\\r\\n\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 5\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean hp_mean\\r\\n#>   <dbl> <dbl> <int>    <dbl>   <dbl>\\r\\n#> 1     0     0    12     15.0   194. \\r\\n#> 2     0     1     6     19.8   181. \\r\\n#> 3     1     0     7     20.7   102. \\r\\n#> 4     1     1     7     28.4    80.6\\r\\n\\r\\n# Passing a weighting variable as the w argument in weighted.mean works in dplyr 1.0.10 but fails in dplyr 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 7\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean mpg_mean.wted hp_mean hp_mean.wted\\r\\n#>   <dbl> <dbl> <int>    <dbl>         <dbl>   <dbl>        <dbl>\\r\\n#> 1     0     0    12     15.0          15.1   194.         194. \\r\\n#> 2     0     1     6     19.8          19.0   181.         198. \\r\\n#> 3     1     0     7     20.7          20.4   102.         105. \\r\\n#> 4     1     1     7     28.4          28.4    80.6         80.6\\r\\n\\r\\nsessionInfo()\\r\\n#> R version 4.2.2 (2022-10-31)\\r\\n#> Platform: aarch64-apple-darwin20 (64-bit)\\r\\n#> Running under: macOS Ventura 13.2.1\\r\\n#> \\r\\n#> Matrix products: default\\r\\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\\r\\n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\\r\\n#> \\r\\n#> locale:\\r\\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\\r\\n#> \\r\\n#> attached base packages:\\r\\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n#> \\r\\n#> other attached packages:\\r\\n#> [1] dplyr_1.0.10\\r\\n#> \\r\\n#> loaded via a namespace (and not attached):\\r\\n#>  [1] rstudioapi_0.14   knitr_1.42        magrittr_2.0.3    tidyselect_1.2.0 \\r\\n#>  [5] R.cache_0.16.0    R6_2.5.1          rlang_1.1.0.9000  fastmap_1.1.1    \\r\\n#>  [9] fansi_1.0.4       styler_1.9.1      tools_4.2.2       xfun_0.37        \\r\\n#> [13] R.oo_1.25.0       utf8_1.2.3        DBI_1.1.3         cli_3.6.1        \\r\\n#> [17] withr_2.5.0       htmltools_0.5.4   yaml_2.3.7        digest_0.6.31    \\r\\n#> [21] tibble_3.2.1      lifecycle_1.0.3   purrr_1.0.1       vctrs_0.6.0.9000 \\r\\n#> [25] R.utils_2.12.2    fs_1.6.1          glue_1.6.2        evaluate_0.20    \\r\\n#> [29] rmarkdown_2.20    reprex_2.0.2      compiler_4.2.2    pillar_1.8.1     \\r\\n#> [33] generics_0.1.3    R.methodsS3_1.8.2 pkgconfig_2.0.3\\r\\n```\\r\\n\\r\\n### Same example, but with `dplyr 1.1.1`\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n\\r\\n# These work in both 1.0.10 and 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp))\\r\\n#> # A tibble: 1 × 3\\r\\n#>       n mpg_mean hp_mean\\r\\n#>   <int>    <dbl>   <dbl>\\r\\n#> 1    32     20.1    147.\\r\\n\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 5\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean hp_mean\\r\\n#>   <dbl> <dbl> <int>    <dbl>   <dbl>\\r\\n#> 1     0     0    12     15.0   194. \\r\\n#> 2     0     1     6     19.8   181. \\r\\n#> 3     1     0     7     20.7   102. \\r\\n#> 4     1     1     7     28.4    80.6\\r\\n\\r\\n# Passing a weighting variable as the w argument in weighted.mean works in dplyr 1.0.10 but fails in dplyr 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n#> Error in `summarise()`:\\r\\n#> ℹ In argument: `across(c(mpg, hp), .fn = FUNS, .names =\\r\\n#>   \\\"{.col}_{.fn}\\\")`.\\r\\n#> ℹ In group 1: `vs = 0`, `am = 0`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `mpg_mean.wted`.\\r\\n#> Caused by error in `weighted.mean.default()`:\\r\\n#> ! object 'cyl' not found\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─mtcars %>% ...\\r\\n#>   2. ├─global fnc(...)\\r\\n#>   3. │ └─data %>% group_by(across({{ group.vars }})) %>% ...\\r\\n#>   4. ├─dplyr::summarise(...)\\r\\n#>   5. ├─dplyr:::summarise.grouped_df(...)\\r\\n#>   6. │ └─dplyr:::summarise_cols(.data, dplyr_quosures(...), by, \\\"summarise\\\")\\r\\n#>   7. │   ├─base::withCallingHandlers(...)\\r\\n#>   8. │   └─dplyr:::map(quosures, summarise_eval_one, mask = mask)\\r\\n#>   9. │     └─base::lapply(.x, .f, ...)\\r\\n#>  10. │       └─dplyr (local) FUN(X[[i]], ...)\\r\\n#>  11. │         ├─base::withCallingHandlers(...)\\r\\n#>  12. │         └─mask$eval_all_summarise(quo)\\r\\n#>  13. │           └─dplyr (local) eval()\\r\\n#>  14. ├─`<rlng_lm_>`(mpg)\\r\\n#>  15. │ ├─stats::weighted.mean(., w = cyl, na.rm = TRUE)\\r\\n#>  16. │ └─stats:::weighted.mean.default(., w = cyl, na.rm = TRUE)\\r\\n#>  17. └─base::.handleSimpleError(...)\\r\\n#>  18.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  19.     └─rlang::abort(msg, call = call(\\\"across\\\"), parent = cnd)\\r\\n\\r\\nsessionInfo()\\r\\n#> R version 4.2.2 (2022-10-31)\\r\\n#> Platform: aarch64-apple-darwin20 (64-bit)\\r\\n#> Running under: macOS Ventura 13.2.1\\r\\n#> \\r\\n#> Matrix products: default\\r\\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\\r\\n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\\r\\n#> \\r\\n#> locale:\\r\\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\\r\\n#> \\r\\n#> attached base packages:\\r\\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n#> \\r\\n#> other attached packages:\\r\\n#> [1] dplyr_1.1.1\\r\\n#> \\r\\n#> loaded via a namespace (and not attached):\\r\\n#>  [1] rstudioapi_0.14   knitr_1.42        magrittr_2.0.3    tidyselect_1.2.0 \\r\\n#>  [5] R.cache_0.16.0    R6_2.5.1          rlang_1.1.0.9000  fastmap_1.1.1    \\r\\n#>  [9] fansi_1.0.4       styler_1.9.1      tools_4.2.2       xfun_0.37        \\r\\n#> [13] R.oo_1.25.0       utf8_1.2.3        cli_3.6.0         withr_2.5.0      \\r\\n#> [17] htmltools_0.5.4   yaml_2.3.7        digest_0.6.31     tibble_3.2.1     \\r\\n#> [21] lifecycle_1.0.3   purrr_1.0.1       vctrs_0.6.0.9000  R.utils_2.12.2   \\r\\n#> [25] fs_1.6.1          glue_1.6.2        evaluate_0.20     rmarkdown_2.20   \\r\\n#> [29] reprex_2.0.2      compiler_4.2.2    pillar_1.8.1      generics_0.1.3   \\r\\n#> [33] R.methodsS3_1.8.2 pkgconfig_2.0.3\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6806\", #>     \"id\": 1637564725, #>     \"node_id\": \"I_kwDOAGIUpc5hm0E1\", #>     \"number\": 6806, #>     \"title\": \"`count()` and `add_count()` could be much faster\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-03-23T13:38:59Z\", #>     \"updated_at\": \"2023-03-23T13:44:59Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Right now these eventually just do `summarise(n = n())` or `mutate(n = n())` at some point, but that can be very slow with many groups. We already have `vec_count()`, which should be much much faster than `count()` with many groups. We could also add some kind of vctrs primitive that works like a windowed count for `add_count()`, or just build on top of `vec_count()`'s result plus an additional call to `vec_match()`.\\r\\n\\r\\nWe'd have to think through how weighted counts would work, maybe `vec_count()` needs support for a weight argument (a double vector).\\r\\n\\r\\nMotivation is something like this, and flights isn't even that big. Roughly 55k groups here.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\nlibrary(nycflights13)\\r\\n\\r\\nbench::mark(\\r\\n  count(flights, dep_time, dep_delay),\\r\\n  vctrs::vec_count(flights[c(\\\"dep_time\\\", \\\"dep_delay\\\")]),\\r\\n  check = FALSE\\r\\n)\\r\\n#> Warning: Some expressions had a GC in every iteration; so filtering is\\r\\n#> disabled.\\r\\n#> # A tibble: 2 × 6\\r\\n#>   expression                                                 min  median itr/s…¹\\r\\n#>   <bch:expr>                                            <bch:tm> <bch:t>   <dbl>\\r\\n#> 1 count(flights, dep_time, dep_delay)                    419.6ms 441.4ms    2.27\\r\\n#> 2 vctrs::vec_count(flights[c(\\\"dep_time\\\", \\\"dep_delay\\\")])   17.3ms  21.5ms   42.7 \\r\\n#> # … with 2 more variables: mem_alloc <bch:byt>, `gc/sec` <dbl>, and abbreviated\\r\\n#> #   variable name ¹​`itr/sec`\\r\\n```\\r\\n\\r\\nAlso need to handle the fact that `...` and `wt` are data-masking, probably with `add_computed_columns()` like `distinct()`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6802\", #>     \"id\": 1634653405, #>     \"node_id\": \"I_kwDOAGIUpc5hbtTd\", #>     \"number\": 6802, #>     \"title\": \"Reconsider re-exports from rlang\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-03-21T20:35:59Z\", #>     \"updated_at\": \"2023-03-21T20:36:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Can we start to un-export any of these https://github.com/tidyverse/dplyr/blob/main/R/utils-tidy-eval.R?\\r\\n\\r\\nAlso, should we un-export `.data`? It doesn't belong on that help page, as noted in https://github.com/tidyverse/dplyr/pull/6801. We also don't export `.env` from dplyr, but those two are very closely related, and right now you can do `?dplyr::.data` but not `?dplyr::.env`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6795\", #>     \"id\": 1631415133, #>     \"node_id\": \"I_kwDOAGIUpc5hPWtd\", #>     \"number\": 6795, #>     \"title\": \"`filter()` error for matrices doesn't give hint per NEWS for 1.0.8\", #>     \"user\": { #>       \"login\": \"mine-cetinkaya-rundel\", #>       \"id\": 5965649, #>       \"node_id\": \"MDQ6VXNlcjU5NjU2NDk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5965649?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mine-cetinkaya-rundel\", #>       \"html_url\": \"https://github.com/mine-cetinkaya-rundel\", #>       \"followers_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/followers\", #>       \"following_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/repos\", #>       \"events_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 5, #>     \"created_at\": \"2023-03-20T05:31:15Z\", #>     \"updated_at\": \"2023-03-20T20:09:57Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Between 1.0.7 and 1.1.0 `filter()` stopped taking matrices, per #5973. [NEWS for dplyr 1.0.8](https://github.com/tidyverse/dplyr/blob/main/NEWS.md#dplyr-108) reflects this change, but it also says there should be an informative message:\\r\\n\\r\\n> - `filter()` forbids matrix results (#5973) and warns about data frame results, especially data frames created from `across()` with a hint to use `if_any()` or `if_all()`.\\r\\n\\r\\nSee reprex below:\\r\\n\\r\\nGoal: Drop rows where _all_ columns other than `id` are `NA`s.\\r\\n\\r\\n```r\\r\\n# create df ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nlibrary(tibble)\\r\\n\\r\\ndf <- tribble(\\r\\n  ~id, ~x,  ~y,\\r\\n  1,   NA, \\\"a\\\",\\r\\n  2,  \\\"b\\\",  NA,\\r\\n  3,   NA,  NA,\\r\\n  4,  \\\"c\\\", \\\"d\\\",\\r\\n)\\r\\n\\r\\n# new dplyr - 1.1.0 ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nsuppressMessages(library(dplyr))\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n#> [1] '1.1.0'\\r\\n\\r\\n# works\\r\\ndf |>\\r\\n  filter(if_any(!id, ~!is.na(.)))\\r\\n#> # A tibble: 3 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     1 <NA>  a    \\r\\n#> 2     2 b     <NA> \\r\\n#> 3     4 c     d\\r\\n\\r\\n# doesn't work\\r\\ndf |>\\r\\n  filter(!across(-id, is.na))\\r\\n#> Error in `filter()`:\\r\\n#> ℹ In argument: `!across(-id, is.na)`.\\r\\n#> Caused by error:\\r\\n#> ! `..1` must be a logical vector, not a logical matrix.\\r\\n\\r\\n# old dplyr - 1.0.7 ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nunloadNamespace(\\\"dplyr\\\")\\r\\nnew_lib <- tempfile()\\r\\ndir.create(new_lib)\\r\\nwithr::with_libpaths(new = new_lib, remotes::install_version(\\\"dplyr\\\", \\\"1.0.7\\\"))\\r\\nsuppressMessages(library(dplyr, lib.loc = new_lib))\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n#> [1] '1.0.7'\\r\\n\\r\\n# works\\r\\ndf |>\\r\\n  filter(if_any(!id, ~!is.na(.)))\\r\\n#> # A tibble: 3 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     1 <NA>  a    \\r\\n#> 2     2 b     <NA> \\r\\n#> 3     4 c     d\\r\\n\\r\\n# also works, but gives a different answer\\r\\ndf |>\\r\\n  filter(!across(-id, is.na))\\r\\n#> # A tibble: 2 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     2 b     <NA> \\r\\n#> 2     4 c     d\\r\\n\\r\\nunlink(new_lib, recursive = TRUE)\\r\\n```\\r\\n\\r\\nI believe, per the NEWS item, the message should be improved. I had a hard time deciphering the error given by 1.1.0 above, hence went the rabbit hole of trying to figure out what changed between the sessions.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6783\", #>     \"id\": 1615008309, #>     \"node_id\": \"I_kwDOAGIUpc5gQxI1\", #>     \"number\": 6783, #>     \"title\": \"`slice_max()` is quite slow for a big number of groups\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-03-08T10:09:01Z\", #>     \"updated_at\": \"2023-03-08T16:16:31Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It has gotten better after installing the dev version of dplyr (before a lot of time was wasted in `arg_match()`). But it has still a big overhead.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\nset.seed(1)\\r\\nn <- 10e3\\r\\ndf <- tibble(\\r\\n  id = sample(n, n, replace = TRUE),\\r\\n  x = runif(n)\\r\\n)\\r\\n\\r\\nbench::mark(\\r\\n  slice_max = df |> \\r\\n    slice_max(x, n = 1, with_ties = FALSE, by = id),\\r\\n  arrange_slice = df |>\\r\\n    arrange(desc(x)) |> \\r\\n    slice(1, .by = id),\\r\\n  row_number = df |>\\r\\n    filter(row_number(x) == n(), .by = id),\\r\\n  # can't check because the order is different\\r\\n  check = FALSE\\r\\n)\\r\\n#> Warning: Some expressions had a GC in every iteration; so filtering is\\r\\n#> disabled.\\r\\n#> # A tibble: 3 × 6\\r\\n#>   expression         min   median `itr/sec` mem_alloc `gc/sec`\\r\\n#>   <bch:expr>    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\\r\\n#> 1 slice_max      803.7ms  803.7ms      1.24    7.57MB     23.6\\r\\n#> 2 arrange_slice  272.3ms  290.5ms      3.44    1.86MB     22.4\\r\\n#> 3 row_number      91.3ms   96.5ms     10.4     4.04MB     22.4\\r\\n\\r\\n# just make sure that the three approaches give the same results\\r\\na1 <- df |> \\r\\n  slice_max(x, n = 1, with_ties = FALSE, by = id) |> \\r\\n  arrange(id)\\r\\na2 <- df |>\\r\\n  arrange(desc(x)) |> \\r\\n  slice(1, .by = id) |> \\r\\n  arrange(id)\\r\\na3 <- df |>\\r\\n  filter(row_number(x) == n(), .by = id) |> \\r\\n  arrange(id)\\r\\n\\r\\nidentical(a1, a2)\\r\\n#> [1] TRUE\\r\\nidentical(a1, a3)\\r\\n#> [1] TRUE\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-03-08 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n<details style=\\\"margin-bottom:10px;\\\">\\r\\n<summary>\\r\\nSession info\\r\\n<\\/summary>\\r\\n\\r\\n``` r\\r\\nsessioninfo::session_info()\\r\\n#> ─ Session info ───────────────────────────────────────────────────────────────\\r\\n#>  setting  value\\r\\n#>  version  R version 4.2.0 (2022-04-22)\\r\\n#>  os       macOS Big Sur/Monterey 10.16\\r\\n#>  system   x86_64, darwin17.0\\r\\n#>  ui       X11\\r\\n#>  language (EN)\\r\\n#>  collate  en_US.UTF-8\\r\\n#>  ctype    en_US.UTF-8\\r\\n#>  tz       UTC\\r\\n#>  date     2023-03-08\\r\\n#>  pandoc   2.19.2 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\\r\\n#> \\r\\n#> ─ Packages ───────────────────────────────────────────────────────────────────\\r\\n#>  package     * version    date (UTC) lib source\\r\\n#>  bench         1.1.2      2021-11-30 [1] CRAN (R 4.2.0)\\r\\n#>  cli           3.6.0      2023-01-09 [1] CRAN (R 4.2.0)\\r\\n#>  digest        0.6.31     2022-12-11 [1] CRAN (R 4.2.0)\\r\\n#>  dplyr       * 1.1.0.9000 2023-03-08 [1] Github (tidyverse/dplyr@2222d43)\\r\\n#>  evaluate      0.20       2023-01-17 [1] CRAN (R 4.2.0)\\r\\n#>  fansi         1.0.4      2023-01-22 [1] CRAN (R 4.2.0)\\r\\n#>  fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.2.0)\\r\\n#>  fs            1.6.1      2023-02-06 [1] CRAN (R 4.2.0)\\r\\n#>  generics      0.1.3      2022-07-05 [1] CRAN (R 4.2.0)\\r\\n#>  glue          1.6.2      2022-02-24 [1] CRAN (R 4.2.0)\\r\\n#>  htmltools     0.5.4      2022-12-07 [1] CRAN (R 4.2.0)\\r\\n#>  knitr         1.42       2023-01-25 [1] CRAN (R 4.2.0)\\r\\n#>  lifecycle     1.0.3.9000 2022-10-10 [1] Github (r-lib/lifecycle@80a1e52)\\r\\n#>  magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.2.0)\\r\\n#>  pillar        1.8.1      2022-08-19 [1] CRAN (R 4.2.0)\\r\\n#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.2.0)\\r\\n#>  profmem       0.6.0      2020-12-13 [1] CRAN (R 4.2.0)\\r\\n#>  purrr         1.0.1      2023-01-10 [1] CRAN (R 4.2.0)\\r\\n#>  R.cache       0.16.0     2022-07-21 [1] CRAN (R 4.2.0)\\r\\n#>  R.methodsS3   1.8.2      2022-06-13 [1] CRAN (R 4.2.0)\\r\\n#>  R.oo          1.25.0     2022-06-12 [1] CRAN (R 4.2.0)\\r\\n#>  R.utils       2.12.2     2022-11-11 [1] CRAN (R 4.2.0)\\r\\n#>  R6            2.5.1      2021-08-19 [1] CRAN (R 4.2.0)\\r\\n#>  reprex        2.0.2      2022-08-17 [1] CRAN (R 4.2.0)\\r\\n#>  rlang         1.1.0      2023-03-07 [1] Github (r-lib/rlang@60159c7)\\r\\n#>  rmarkdown     2.20       2023-01-19 [1] CRAN (R 4.2.0)\\r\\n#>  rstudioapi    0.14       2022-08-22 [1] CRAN (R 4.2.0)\\r\\n#>  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.2.0)\\r\\n#>  styler        1.9.1      2023-03-04 [1] CRAN (R 4.2.0)\\r\\n#>  tibble        3.1.8      2022-07-22 [1] CRAN (R 4.2.0)\\r\\n#>  tidyselect    1.2.0      2022-10-10 [1] CRAN (R 4.2.0)\\r\\n#>  utf8          1.2.3      2023-01-31 [1] CRAN (R 4.2.0)\\r\\n#>  vctrs         0.5.2.9000 2023-03-08 [1] Github (r-lib/vctrs@bdea1ce)\\r\\n#>  withr         2.5.0      2022-03-03 [1] CRAN (R 4.2.0)\\r\\n#>  xfun          0.37       2023-01-31 [1] CRAN (R 4.2.0)\\r\\n#>  yaml          2.3.7      2023-01-23 [1] CRAN (R 4.2.0)\\r\\n#> \\r\\n#>  [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\\r\\n#> \\r\\n#> ──────────────────────────────────────────────────────────────────────────────\\r\\n```\\r\\n\\r\\n<\\/details>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6774\", #>     \"id\": 1609648276, #>     \"node_id\": \"I_kwDOAGIUpc5f8UiU\", #>     \"number\": 6774, #>     \"title\": \"`ungroup()` drops data frame attributes\", #>     \"user\": { #>       \"login\": \"mkoohafkan\", #>       \"id\": 4790348, #>       \"node_id\": \"MDQ6VXNlcjQ3OTAzNDg=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4790348?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mkoohafkan\", #>       \"html_url\": \"https://github.com/mkoohafkan\", #>       \"followers_url\": \"https://api.github.com/users/mkoohafkan/followers\", #>       \"following_url\": \"https://api.github.com/users/mkoohafkan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mkoohafkan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mkoohafkan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mkoohafkan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mkoohafkan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mkoohafkan/repos\", #>       \"events_url\": \"https://api.github.com/users/mkoohafkan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mkoohafkan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-03-04T07:05:33Z\", #>     \"updated_at\": \"2023-03-23T15:56:06Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"This is referring to **dataframe/tibble** attributes, not tibble *column* attributes. The CRAN install of dplyr 1.1.0 sometimes drops attributes:\\r\\n\\r\\n```r\\r\\nd = mtcars\\r\\nattr(d, \\\"foo\\\") = \\\"bar\\\"\\r\\nattr(d, \\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\n\\r\\n## preserved\\r\\nd |> select(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> rename(cyl2 = cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> arrange(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> group_by(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> mutate(mpg2 = mpg) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> transmute(mpg2 = mpg) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> filter(cyl == 1L) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> count(cyl) |> attr(\\\"foo\\\") \\r\\n#> [1] \\\"bar\\\"\\r\\nd |> bind_rows(d) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> bind_cols(select(d, cyl2 = cyl)) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\n\\r\\n\\r\\n## dropped\\r\\nd |> group_by(cyl) |> ungroup() |> attr(\\\"foo\\\")\\r\\n#> NULL\\r\\nd |> summarize(mpg = max(mpg)) |> attr(\\\"foo\\\")\\r\\n#> NULL\\r\\n```\\r\\n\\r\\nI can understand why it might make sense for `summarize()` to drop attributes (but then why does `count()` preserve them?), but I don't see why `ungroup(group_by(...))` should drop attributes unilaterally. Given that almost all `dplyr` verbs preserve the attribute, I'm wondering if this is a bug/regression.\\r\\n\\r\\nThere are a variety of issues regarding attributes but they are all closed.\\r\\n\\r\\n- https://github.com/tidyverse/dplyr/issues/2432\\r\\n- https://github.com/tidyverse/dplyr/issues/5132\\r\\n- https://github.com/tidyverse/dplyr/issues/3429\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6712\", #>     \"id\": 1580234527, #>     \"node_id\": \"I_kwDOAGIUpc5eMHcf\", #>     \"number\": 6712, #>     \"title\": \"Can we improve on this `across()` error?\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-02-10T19:48:08Z\", #>     \"updated_at\": \"2023-02-10T19:48:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\ndf <- tibble(x = 1:2, y = 3:4)\\r\\n\\r\\nfn <- function(col) {\\r\\n  stop(\\\"oh no\\\")\\r\\n}\\r\\n\\r\\nmutate(df, across(y, fn))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(y, fn)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `y`.\\r\\n#> Caused by error:\\r\\n#> ! oh no\\r\\n```\\r\\n\\r\\nIt can probably just be:\\r\\n\\r\\n```r\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(y, fn)`.\\r\\n#> ℹ In column: `y`.\\r\\n#> Caused by error:\\r\\n#> ! oh no\\r\\n```\\r\\n\\r\\nAs mentioned here https://github.com/tidyverse/dplyr/pull/6704#discussion_r1102408064\\r\\n\\r\\nThrown from here, so seems plausible that we could improve on this\\r\\nhttps://github.com/tidyverse/dplyr/blob/49b39af5ebd79bf06bb809c8fdf3bd955d8f9ad8/R/mutate.R#L382-L388\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6676\", #>     \"id\": 1566600644, #>     \"node_id\": \"I_kwDOAGIUpc5dYG3E\", #>     \"number\": 6676, #>     \"title\": \"`bind_rows()` on a list of data.tables creates corrupt output\", #>     \"user\": { #>       \"login\": \"emilBeBri\", #>       \"id\": 964816, #>       \"node_id\": \"MDQ6VXNlcjk2NDgxNg==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/964816?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/emilBeBri\", #>       \"html_url\": \"https://github.com/emilBeBri\", #>       \"followers_url\": \"https://api.github.com/users/emilBeBri/followers\", #>       \"following_url\": \"https://api.github.com/users/emilBeBri/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/emilBeBri/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/emilBeBri/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/emilBeBri/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/emilBeBri/orgs\", #>       \"repos_url\": \"https://api.github.com/users/emilBeBri/repos\", #>       \"events_url\": \"https://api.github.com/users/emilBeBri/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/emilBeBri/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-02-01T18:29:11Z\", #>     \"updated_at\": \"2023-02-14T17:33:04Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"\\r\\nwhen using bind_rows on a list of data.tables with keys, with either map_dfr or a do.call, the keys are not removed This is a problem, because the keys are not correct anymore, which means that later queries are using an index that is wrong. \\r\\n\\r\\nnot sure if I should report this under data.table or dplyr, but since the issue is in bin_rows, I guess it is dplyr.\\r\\n\\r\\n[here is the issue I filed under data.table](https://github.com/Rdatatable/data.table/issues/5587)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\nlibrary(data.table)\\r\\nlibrary(dplyr)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ndata <- data.table(var1=c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'), var2=c(rep(2016, 4), rep(2018, 4)), key=c('var1', 'var2'))\\r\\n\\r\\n\\r\\ntest1 <- lapply(c(2018, 2016), function(x) data[var2 %in% c(x-1, x)])\\r\\n\\r\\n\\r\\ntest2 <- do.call(bind_rows, test1)\\r\\n# wrong \\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n# right\\r\\nsum( test2$var1 %in% c('c', 'e') )\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\nsame thing  happens w. map_dfr,that uses bind_rows under the hood. This is how I found the issue. It is very common in my workflow, and I suspect I am not the one.\\r\\n\\r\\n\\r\\ndoing the same with rbind removes the keys, which is the expected behaviour - as the index from the key are no longer valid.\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\ntest2_rbind <- do.call(rbind, test1) \\r\\n# here it is fine - because the keys not there, giving a wrong picture of the structure of the DT\\r\\ntest2_rbind[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n# when removing the keys, everything is fine. \\r\\nsetkey(test2, NULL)\\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\ncuriosly, using split() instead of lapply circumvents the issue - but this is not a solution, since typically you need to apply a function to the data, - splitting it and then recombining it with split() makes no sense. But I am including it here for completeness.\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\ntest1 <- split(data, data$var2)\\r\\ntest2 <- do.call(bind_rows, test1)\\r\\n# right \\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n```\\r\\n\\r\\nsessionInfo\\r\\n\\r\\n```\\r\\n\\r\\nR version 4.2.2 (2022-10-31)\\r\\nPlatform: x86_64-pc-linux-gnu (64-bit)\\r\\nRunning under: Manjaro Linux\\r\\n\\r\\nMatrix products: default\\r\\nBLAS:   /usr/lib/libblas.so.3.11.0\\r\\nLAPACK: /usr/lib/liblapack.so.3.11.0\\r\\n\\r\\nlocale:\\r\\n [1] LC_CTYPE=en_DK.UTF-8       LC_NUMERIC=C\\r\\n [3] LC_TIME=en_DK.UTF-8        LC_COLLATE=en_DK.UTF-8\\r\\n [5] LC_MONETARY=en_DK.UTF-8    LC_MESSAGES=en_DK.UTF-8\\r\\n [7] LC_PAPER=en_DK.UTF-8       LC_NAME=C\\r\\n [9] LC_ADDRESS=C               LC_TELEPHONE=C\\r\\n[11] LC_MEASUREMENT=en_DK.UTF-8 LC_IDENTIFICATION=C\\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base\\r\\n\\r\\nother attached packages:\\r\\n[1] dplyr_1.0.10      data.table_1.14.6\\r\\n\\r\\nloaded via a namespace (and not attached):\\r\\n [1] fansi_1.0.4      assertthat_0.2.1 utf8_1.2.2       R6_2.5.1\\r\\n [5] DBI_1.1.3        lifecycle_1.0.3  magrittr_2.0.3   pillar_1.8.1\\r\\n [9] rlang_1.0.6      cli_3.6.0        vctrs_0.5.2      generics_0.1.3\\r\\n[13] glue_1.6.2       compiler_4.2.2   pkgconfig_2.0.3  tidyselect_1.2.0\\r\\n[17] tibble_3.1.8\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6663\", #>     \"id\": 1558485964, #>     \"node_id\": \"I_kwDOAGIUpc5c5JvM\", #>     \"number\": 6663, #>     \"title\": \"Consider `.sort = FALSE` for `summarise()`, `reframe()`, and `slice_sample()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1728164976, #>         \"node_id\": \"MDU6TGFiZWwxNzI4MTY0OTc2\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/grouping%20:family_man_woman_girl_boy:\", #>         \"name\": \"grouping :family_man_woman_girl_boy:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-01-26T17:12:12Z\", #>     \"updated_at\": \"2023-01-26T17:12:22Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"With the introduction of `.by`, we no longer sort group keys automatically. There are a whole host of good reasons for this as outlined here https://github.com/tidyverse/dplyr/issues/5664#issuecomment-907232443, and I am mostly confident this is the right long term default for dplyr.\\r\\n\\r\\nHowever, I am empathetic to the fact that users do often like to see their summary results sorted in ascending order. Right now, our recommendation is:\\r\\n\\r\\n```r\\r\\ndf %>%\\r\\n  summarise(..., .by = c(a, b, c)) %>%\\r\\n  arrange(a, b, c) # could also come before `summarise()`\\r\\n```\\r\\n\\r\\nThis is nice because you get the full power of `arrange()` including `desc()` and `.locale`.\\r\\n\\r\\nI think we should _consider_ a `.sort` argument like:\\r\\n\\r\\n```r\\r\\ndf %>%\\r\\n  summarise(..., .by = c(a, b, c), .sort = TRUE)\\r\\n```\\r\\n\\r\\n- `.sort = FALSE` would be the default for reasons mentioned above.\\r\\n- We'd document this as the 100% backwards compatible way to transition from `group_by()` to `.by` (even though most of the time the ordering isn't important).\\r\\n- You must accept that you get _ascending order_ and the _C locale_. That makes it compatible with `group_by()`. If you need anything fancier, call `arrange()`.\\r\\n- I do like that you won't have to repeat the group names.\\r\\n- Obviously `.sort = TRUE` errors on unorderable types like clock's year-month-weekday.\\r\\n- This would probably only be an argument for the `.data.frame` method, as opposed to the generic, because dbplyr probably won't want to enforce a sort order? Uncertain.\\r\\n\\r\\nBasically, this leaves the idea of a `groupby + summarise` operation theoretically pure (because it shouldn't require orderable keys), but also gives users a convenient way to optionally opt in to sorted results.\\r\\n\\r\\n---\\r\\n\\r\\nThere are 3 functions that would get this argument:\\r\\n- `summarise()`\\r\\n- `reframe()`\\r\\n- `slice_sample()` (goes with #6662)\\r\\n\\r\\nThe following would not get `.sort` because they aren't about row ordering:\\r\\n- `filter()`\\r\\n- `mutate()`\\r\\n- `slice()` and `slice_min/max/head/tail()` (after #6662 is changed)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6662\", #>     \"id\": 1558447141, #>     \"node_id\": \"I_kwDOAGIUpc5c5AQl\", #>     \"number\": 6662, #>     \"title\": \"`slice()` and `slice_head/tail/min/max()` should act like a `filter()` not a `reframe()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-01-26T16:46:52Z\", #>     \"updated_at\": \"2023-01-26T16:51:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Note that this `filter()` call keeps the groups of `x` separated. i.e.  the groups of `2` and `1` are not aggregated together\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble(x = c(2, 1, 2, 2, 1), y = c(3, 2, 1, 2, 4))\\r\\ndf\\r\\n#> # A tibble: 5 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     1     2\\r\\n#> 3     2     1\\r\\n#> 4     2     2\\r\\n#> 5     1     4\\r\\n\\r\\n# Maintain group separation, we just take the first 2 per x group\\r\\ndf %>% filter(row_number() %in% 1:2, .by = x)\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     1     2\\r\\n#> 3     2     1\\r\\n#> 4     1     4\\r\\n```\\r\\n\\r\\n`filter()` is simply about deciding which rows to keep, not about the ordering of the result.\\r\\n\\r\\nI think that `slice()` and `slice_head/tail/min/max()` should function the exact same way. They currently do not:\\r\\n\\r\\n``` r\\r\\n# These both group the results by `x`.\\r\\n# The difference is `.by` doesn't do an additional sort by `x`.\\r\\ndf %>% slice(1:2, .by = x)\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     2     1\\r\\n#> 3     1     2\\r\\n#> 4     1     4\\r\\n\\r\\ndf %>% group_by(x) %>% slice(1:2)\\r\\n#> # A tibble: 4 × 2\\r\\n#> # Groups:   x [2]\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     1     2\\r\\n#> 2     1     4\\r\\n#> 3     2     3\\r\\n#> 4     2     1\\r\\n```\\r\\n\\r\\nSlicing is purely about figuring out which rows to _keep_. It doesn't have anything to do with determining the order of said rows.\\r\\n\\r\\nThe current slice implementation is (implicitly) like a `reframe()` call instead.\\r\\n\\r\\n``` r\\r\\ndf %>% reframe(.by = x, {\\r\\n  data <- pick(everything())\\r\\n  data[row_number() %in% 1:2,]\\r\\n})\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     2     1\\r\\n#> 3     1     2\\r\\n#> 4     1     4\\r\\n```\\r\\n\\r\\nI think the way to practically make it work like a `filter()` is to change the implementation to build up a logical vector the same size as `.data` to slice with. That would retain the row ordering of `.data`.\\r\\n\\r\\n---\\r\\n\\r\\nThe one `slice()` family exception to this is `slice_sample()`, which is not a filter. It can even generate more rows than you started with. Possibly this is a sign that `slice_*()` was an unfortunate prefix for that.\\r\\n\\r\\nFor this reason, `slice_sample()` should continue to aggregate groups together. It will just be slightly different, but that is okay.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6660\", #>     \"id\": 1556850210, #>     \"node_id\": \"I_kwDOAGIUpc5cy6Yi\", #>     \"number\": 6660, #>     \"title\": \"`mutate(.by_row =)`, `reframe(.by_row =)`, and possibly `filter(.by_row =)`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-01-25T15:31:55Z\", #>     \"updated_at\": \"2023-02-08T19:02:16Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Related to https://github.com/tidyverse/dplyr/issues/4723\\r\\n\\r\\nWith the introduction of `.by`, it seems reasonable to once again reconsider `rowwise()` as well. I think we are convinced that the _idea_ of rowwise is useful, but the implementation could possibly be improved. A few pain points:\\r\\n- `rowwise()` is a form of persistent grouping, but you rarely want it on for more than 1 operation\\r\\n- `ungroup()` is an odd verb for turning off rowwise behavior\\r\\n- It still sucks that you need `summarise(model = list(lm(...)))`, i.e. the `list()` wrapping is manual\\r\\n- Maintaining the `rowwise_df` class is difficult and error prone for us\\r\\n- There are _very_ few times where rowwise behavior is actually useful. I think the two cases are `mutate()` and `reframe()`.\\r\\n\\r\\n---\\r\\n\\r\\nWith that in mind, I'd like to suggest a two-part replacement for `rowwise()`:\\r\\n- Two per-operation rowwise verbs, `mutate_row()` and `reframe_row()`. These become the _only_ two places in dplyr where rowwise behavior is applicable.\\r\\n- Give `mutate()`, `summarise()`, `reframe()`, `mutate_row()`, and `reframe_row()` the ability to automatically wrap scalars in a list. i.e. if `vec_is(elt)` is `FALSE`, wrap automatically into a list. This means that value could _never_ exist in a data frame column as is, so there is no ambiguity about wrapping and it is fairly easy to explain.\\r\\n\\r\\nThose two proposals result in the following new patterns:\\r\\n\\r\\n```r\\r\\n# dplyr 1.1.0\\r\\niris %>%\\r\\n  tidyr::nest(.by = Species) %>%\\r\\n  rowwise(Species) %>%\\r\\n  mutate(model = list(lm(Petal.Length ~ Sepal.Length, data = data))) %>%\\r\\n  reframe(broom::tidy(model))\\r\\n   \\r\\n# New 1:\\r\\n# (note the lack of list(), and no persistant rowwise-ness)\\r\\n# (note how we carry Species along in the reframe_row() call)\\r\\niris %>%\\r\\n  tidyr::nest(.by = Species) %>%\\r\\n  mutate_row(model = lm(Petal.Length ~ Sepal.Length, data = data)) %>%\\r\\n  reframe_row(Species, broom::tidy(model))\\r\\n\\r\\n# New 2:\\r\\n# (note that even summarise() doesn't need manual list() wrapping)\\r\\niris %>%\\r\\n  summarise(\\r\\n    model = lm(Petal.Length ~ Sepal.Length, data = pick(everything())),\\r\\n    .by = Species\\r\\n  ) %>%\\r\\n  reframe_row(Species, broom::tidy(model))\\r\\n\\r\\n# All result in:\\r\\n\\r\\n#> # A tibble: 6 × 6\\r\\n#>   Species    term         estimate std.error statistic  p.value\\r\\n#>   <fct>      <chr>           <dbl>     <dbl>     <dbl>    <dbl>\\r\\n#> 1 setosa     (Intercept)     0.803    0.344      2.34  2.38e- 2\\r\\n#> 2 setosa     Sepal.Length    0.132    0.0685     1.92  6.07e- 2\\r\\n#> 3 versicolor (Intercept)     0.185    0.514      0.360 7.20e- 1\\r\\n#> 4 versicolor Sepal.Length    0.686    0.0863     7.95  2.59e-10\\r\\n#> 5 virginica  (Intercept)     0.610    0.417      1.46  1.50e- 1\\r\\n#> 6 virginica  Sepal.Length    0.750    0.0630    11.9   6.30e-16\\r\\n```\\r\\n\\r\\nThis two part proposal has the very nice property that the difference between `mutate()` and `mutate_row()` becomes _purely_ about column access:\\r\\n- `mutate()` accesses columns using `vec_slice()` / `[`\\r\\n- `mutate_row()` accesses columns using `vec_slice2()` / `[[`\\r\\n\\r\\nIn other words, rowwise has _nothing_ to do with the output type of each column expression, and you still get useful results.\\r\\n\\r\\nIn terms of other invariants, there is one related to `vec_size()`:\\r\\n- `mutate_row()` requires each expression to return an element of `vec_size() == 1`\\r\\n- `reframe_row()` allows each expression to return an element of any size\\r\\n- (the size invariant is enforced after list wrapping) \\r\\n\\r\\nOther niceties:\\r\\n- It becomes very clear when you are doing a rowwise operation, because it is in the name of the verb (similar to `.by` being in the verb)\\r\\n- Somewhat obvious, but it means rowwise behavior isn't persistent. You always have bare tibble in, bare tibble out, which greatly simplifies things.\\r\\n\\r\\n---\\r\\n\\r\\nExtra notes:\\r\\n- Somewhat obvious, but `mutate_row()` and `reframe_row()` won't get `.by` because they operation \\\"by row\\\"\\r\\n- We don't want to teach `.by` about rowwise behavior, like `.by = .row` or something. We want `.by` to be _pure_ tidyselect. Plus this special behavior would only apply for `mutate()` and `reframe()` and that would be very confusing.\\r\\n- We do _not_ need `summarise_row()`. This would have the _exact_ same semantics as `mutate_row()`, but would just drop unused columns (which can mostly be done with `.keep` in `mutate_row()`). In particular `summarise_row()` and `mutate_row()` would both have to have the `vec_size() == 1` invariant from above, so we really don't need both.\\r\\n- There is no need for `filter_row()`. The only useful thing I can think of is something like `filter_row(!is.null(model))` for filtering out `NULL` list elements. But you can do that way more efficiently with an ungrouped call to `filter(!funs::is_na(model))`.\\r\\n\\r\\n`mutate_row()` and `reframe_row()` mostly have the semantics of the wrappers below, but this doesn't do the automatic list-wrapping of scalars:\\r\\n\\r\\n```r\\r\\nmutate_row <- function(.data, ...) {\\r\\n  .data <- rowwise(.data)\\r\\n  .data <- mutate(.data, ...)\\r\\n  ungroup(.data)\\r\\n}\\r\\n\\r\\nreframe_row <- function(.data, ...) {\\r\\n  .data <- rowwise(.data)\\r\\n  reframe(.data, ...)\\r\\n}\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6580\", #>     \"id\": 1470361443, #>     \"node_id\": \"I_kwDOAGIUpc5Xo-9j\", #>     \"number\": 6580, #>     \"title\": \"Make `Joining with` message clickable to copy-to-clipboard\", #>     \"user\": { #>       \"login\": \"donboyd5\", #>       \"id\": 6538392, #>       \"node_id\": \"MDQ6VXNlcjY1MzgzOTI=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/6538392?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/donboyd5\", #>       \"html_url\": \"https://github.com/donboyd5\", #>       \"followers_url\": \"https://api.github.com/users/donboyd5/followers\", #>       \"following_url\": \"https://api.github.com/users/donboyd5/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/donboyd5/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/donboyd5/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/donboyd5/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/donboyd5/orgs\", #>       \"repos_url\": \"https://api.github.com/users/donboyd5/repos\", #>       \"events_url\": \"https://api.github.com/users/donboyd5/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/donboyd5/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1257707950, #>         \"node_id\": \"MDU6TGFiZWwxMjU3NzA3OTUw\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/tables%20%F0%9F%A7%AE\", #>         \"name\": \"tables 🧮\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"joins and set operations\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2022-11-30T23:25:12Z\", #>     \"updated_at\": \"2022-12-10T19:10:28Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Hi,\\r\\n\\r\\ndplyr 1.1.0 seems like it is going to be great (I installed the dev version with `pak::[pak](http://pak.r-lib.org/reference/pak.html)(\\\"tidyverse/dplyr\\\")`). I really like .by in summarise and mutate.\\r\\n\\r\\nOne small suggestion for messages related to the new join:\\r\\n\\r\\nIn the old join, if I leave out the \\\"by\\\" it gives a helpful message stating what it does by default, giving the \\\", by=\\\" statement it used. This is nice because if I like it, I can copy it directly into code.\\r\\n\\r\\nThe new 1.1.0 message when \\\"by\\\" is left out is slightly different. For example, here is a typical message:\\r\\n\\r\\n``` \\r\\nJoining with `by = join_by(mergevar)`\\r\\n```\\r\\n\\r\\nNotice that this does not have a comma and space before the \\\"by\\\", or else it would look like this:\\r\\n\\r\\n``` \\r\\nJoining with `, by = join_by(mergevar)`\\r\\n```\\r\\n\\r\\nThe advantage of the second message is that it can be copied into code without the two extra keystrokes the first one requires. Hardly a significant issue, but it could add up over thousands of people and many days.\\r\\n\\r\\nThanks for considering it.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   } #> ]  gh(\"/repos/{owner}/{repo}/issues\", owner = \"hadley\", repo = \"dplyr\") #> [ #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6885\", #>     \"id\": 1812200827, #>     \"node_id\": \"I_kwDOAGIUpc5sA_17\", #>     \"number\": 6885, #>     \"title\": \"Unexpected behavior in `filter()` when column name matches an environment variable\", #>     \"user\": { #>       \"login\": \"bzbradford\", #>       \"id\": 12737774, #>       \"node_id\": \"MDQ6VXNlcjEyNzM3Nzc0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/12737774?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/bzbradford\", #>       \"html_url\": \"https://github.com/bzbradford\", #>       \"followers_url\": \"https://api.github.com/users/bzbradford/followers\", #>       \"following_url\": \"https://api.github.com/users/bzbradford/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/bzbradford/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/bzbradford/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/bzbradford/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/bzbradford/orgs\", #>       \"repos_url\": \"https://api.github.com/users/bzbradford/repos\", #>       \"events_url\": \"https://api.github.com/users/bzbradford/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/bzbradford/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-19T15:29:58Z\", #>     \"updated_at\": \"2023-07-19T15:29:58Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"A friend and I have both encountered unexpected behavior from `filter()` and struggled to debug it until realizing that `filter()` was comparing a column against itself, instead of against a variable of the same name that had been defined elsewhere in the environment (for example, as a function argument).\\r\\n\\r\\n```r\\r\\nlibrary(dplyr)\\r\\n\\r\\n# mtcars has 32 rows originally\\r\\nnrow(mtcars)\\r\\n# > [1] 32\\r\\n\\r\\n# should show that 11 cars have 4 cylinders\\r\\nmtcars |> filter(cyl == 4) |> nrow()\\r\\n# > [1] 11\\r\\n\\r\\n# should also show that 11 cars have 4 cylinders\\r\\ncyl <- 4\\r\\nmtcars |> filter(cyl == cyl) |> nrow()\\r\\n# > [1] 32\\r\\n```\\r\\n\\r\\nPossible solutions:\\r\\n\\r\\n- `filter()` warns when comparing a column against itself (which would return all rows), much like it warns when using a single `=` instead of double equal `==`\\r\\n- `filter()` first looks to the environment for a defined variable of the same name as the column when a column is possibly compared against itself\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6885/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6876\", #>     \"id\": 1781513615, #>     \"node_id\": \"PR_kwDOAGIUpc5URz0T\", #>     \"number\": 6876, #>     \"title\": \"Update slice.R\", #>     \"user\": { #>       \"login\": \"scarioscia\", #>       \"id\": 54126393, #>       \"node_id\": \"MDQ6VXNlcjU0MTI2Mzkz\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/54126393?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/scarioscia\", #>       \"html_url\": \"https://github.com/scarioscia\", #>       \"followers_url\": \"https://api.github.com/users/scarioscia/followers\", #>       \"following_url\": \"https://api.github.com/users/scarioscia/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/scarioscia/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/scarioscia/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/scarioscia/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/scarioscia/orgs\", #>       \"repos_url\": \"https://api.github.com/users/scarioscia/repos\", #>       \"events_url\": \"https://api.github.com/users/scarioscia/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/scarioscia/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-29T21:04:27Z\", #>     \"updated_at\": \"2023-06-29T21:04:27Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6876\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6876\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6876.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6876.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"switched highest/lowest for slice_min and slice_max to improve clarity\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6876/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6875\", #>     \"id\": 1780932366, #>     \"node_id\": \"PR_kwDOAGIUpc5UP25J\", #>     \"number\": 6875, #>     \"title\": \"Fix typos plus minor tweaks\", #>     \"user\": { #>       \"login\": \"salim-b\", #>       \"id\": 20040931, #>       \"node_id\": \"MDQ6VXNlcjIwMDQwOTMx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/20040931?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/salim-b\", #>       \"html_url\": \"https://github.com/salim-b\", #>       \"followers_url\": \"https://api.github.com/users/salim-b/followers\", #>       \"following_url\": \"https://api.github.com/users/salim-b/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/salim-b/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/salim-b/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/salim-b/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/salim-b/orgs\", #>       \"repos_url\": \"https://api.github.com/users/salim-b/repos\", #>       \"events_url\": \"https://api.github.com/users/salim-b/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/salim-b/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-29T14:20:03Z\", #>     \"updated_at\": \"2023-06-29T14:20:03Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6875\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6875\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6875.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6875.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": {}, #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6875/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6870\", #>     \"id\": 1772889820, #>     \"node_id\": \"I_kwDOAGIUpc5prCbc\", #>     \"number\": 6870, #>     \"title\": \"Unexpected interaction between rowwise and group_modify\", #>     \"user\": { #>       \"login\": \"banbh\", #>       \"id\": 5741, #>       \"node_id\": \"MDQ6VXNlcjU3NDE=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5741?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/banbh\", #>       \"html_url\": \"https://github.com/banbh\", #>       \"followers_url\": \"https://api.github.com/users/banbh/followers\", #>       \"following_url\": \"https://api.github.com/users/banbh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/banbh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/banbh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/banbh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/banbh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/banbh/repos\", #>       \"events_url\": \"https://api.github.com/users/banbh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/banbh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 1728164976, #>         \"node_id\": \"MDU6TGFiZWwxNzI4MTY0OTc2\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/grouping%20:family_man_woman_girl_boy:\", #>         \"name\": \"grouping :family_man_woman_girl_boy:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-06-24T19:49:55Z\", #>     \"updated_at\": \"2023-07-17T13:03:47Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It appears that after an application of `rowwise` the behavior of `group_modify` differs from that of `group_walk` and `group_map`; the latter two behave as expected. For example, I expected all three pipelines to print two \\\"hello\\\"s, but the `group_modify` one only prints one.\\r\\n\\r\\n```r\\r\\nlibrary(dplyr) # dplyr_1.1.2\\r\\n\\r\\nX <- tibble(a = 1:2)\\r\\n\\r\\nf <- \\\\(...) {\\r\\n  print('hello')\\r\\n  tibble(x = runif(3))\\r\\n}\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_walk(f) # two hellos\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_map(f) |> # two hellos\\r\\n  invisible()\\r\\n\\r\\nX |> \\r\\n  rowwise() |> \\r\\n  group_modify(f) |> # one hello ???\\r\\n  invisible()\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6870/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6868\", #>     \"id\": 1757231728, #>     \"node_id\": \"I_kwDOAGIUpc5ovTpw\", #>     \"number\": 6868, #>     \"title\": \"trailing comma in `across()` gives an unhelpful message\", #>     \"user\": { #>       \"login\": \"olivroy\", #>       \"id\": 52606734, #>       \"node_id\": \"MDQ6VXNlcjUyNjA2NzM0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/52606734?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/olivroy\", #>       \"html_url\": \"https://github.com/olivroy\", #>       \"followers_url\": \"https://api.github.com/users/olivroy/followers\", #>       \"following_url\": \"https://api.github.com/users/olivroy/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/olivroy/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/olivroy/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/olivroy/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/olivroy/orgs\", #>       \"repos_url\": \"https://api.github.com/users/olivroy/repos\", #>       \"events_url\": \"https://api.github.com/users/olivroy/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/olivroy/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 1880639897, #>         \"node_id\": \"MDU6TGFiZWwxODgwNjM5ODk3\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/each-col%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"each-col ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-06-14T16:04:55Z\", #>     \"updated_at\": \"2023-06-28T12:22:24Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It took me a while to figure out the error, hence why I'm filing an issue (feel free to close).\\r\\n\\r\\nIt is just that with many functions, a trailing comma doesn't matter.\\r\\n\\r\\n---\\r\\n\\r\\nI forgot a trailing comma and it lead to a unhelpful error message. \\r\\nWould it be possible to improve this error message, (or not get error, like with `mutate()`, `summarise()` etc.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\nmtcars |> mutate(across(vs, \\\\(x) x +1, .names = \\\"x\\\")) # works fine, if you write the code correctly\\r\\nmtcars |> mutate(across(vs, \\\\(x) x +1, .names = \\\"x\\\",)) # gives a hard to understand error message.\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(vs, function(x) x + 1, .names = \\\"x\\\", )`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `x`.\\r\\n#> Caused by error in `fn()`:\\r\\n#> ! Unused argument (alist())\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::mutate(...)\\r\\n#>   2. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   3. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   4. │   ├─base::withCallingHandlers(...)\\r\\n#>   5. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   6. │     └─mask$eval_all_mutate(quo)\\r\\n#>   7. │       └─dplyr (local) eval()\\r\\n#>   8. ├─dplyr::across(vs, function(x) x + 1, .names = \\\"x\\\", )\\r\\n#>   9. │ └─base::withCallingHandlers(...)\\r\\n#>  10. └─base::.handleSimpleError(...)\\r\\n#>  11.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  12.     └─rlang::abort(bullets, call = error_call, parent = cnd)\\r\\n栀Ƭ\\r\\n#> Error in eval(expr, envir, enclos): object'栀Ƭ' not found\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-06-14 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nFor reference, the `if_all()` error message is a bit better\\r\\n\\r\\n```r\\r\\nmtcars |> filter(if_all(vs, is.na, ))\\r\\nError in `filter()`:\\r\\nℹ In argument: `if_all(vs, is.na, )`.\\r\\nCaused by error in `if_all()`:\\r\\n! Can't compute column `vs`.\\r\\nCaused by error in `withCallingHandlers()`:\\r\\n! argument is missing, with no default\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6868/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6864\", #>     \"id\": 1743154315, #>     \"node_id\": \"I_kwDOAGIUpc5n5myL\", #>     \"number\": 6864, #>     \"title\": \"Improve documentation for `rows_insert()` vs `rows_append()`\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 674867158, #>         \"node_id\": \"MDU6TGFiZWw2NzQ4NjcxNTg=\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/documentation\", #>         \"name\": \"documentation\", #>         \"color\": \"CBBAB8\", #>         \"default\": true, #>         \"description\": \"\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-06-06T06:10:33Z\", #>     \"updated_at\": \"2023-06-28T12:23:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It seems that people easily confuse what `rows_insert()` is for and use it when they actually need `rows_append()` (e.g. tidyverse/dbplyr#1297 or tidyverse/dbplyr#1149). It would be nice to improve the documentation (or maybe even the names) of `rows_insert()` and `rows_append()` to make it more clear when to use which function.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6864/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6862\", #>     \"id\": 1732939973, #>     \"node_id\": \"I_kwDOAGIUpc5nSpDF\", #>     \"number\": 6862, #>     \"title\": \"case_when gives confusing and inconsistent error messages when conditions are matrices\", #>     \"user\": { #>       \"login\": \"DarwinAwardWinner\", #>       \"id\": 228145, #>       \"node_id\": \"MDQ6VXNlcjIyODE0NQ==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/228145?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DarwinAwardWinner\", #>       \"html_url\": \"https://github.com/DarwinAwardWinner\", #>       \"followers_url\": \"https://api.github.com/users/DarwinAwardWinner/followers\", #>       \"following_url\": \"https://api.github.com/users/DarwinAwardWinner/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DarwinAwardWinner/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DarwinAwardWinner/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DarwinAwardWinner/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DarwinAwardWinner/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DarwinAwardWinner/repos\", #>       \"events_url\": \"https://api.github.com/users/DarwinAwardWinner/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DarwinAwardWinner/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-30T20:19:09Z\", #>     \"updated_at\": \"2023-05-31T14:43:28Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Please briefly describe your problem and what output you expect. If you have a question, please don't use this form. Instead, ask on <https://stackoverflow.com/> or <https://community.rstudio.com/>.\\r\\n\\r\\nPlease include a minimal reproducible example (AKA a reprex). If you've never heard of a [reprex](http://reprex.tidyverse.org/) before, start by reading <https://www.tidyverse.org/help/#reprex>.\\r\\n\\r\\n---\\r\\n\\r\\nI had some code that was passing matrices as the conditions to a `case_when` statement. Previously, `case_when` would implicitly convert these matrices to vectors, but at some point it stopped doing that. However, I don't think this was an intentional behavior change, because depending on how exactly one calls `case_when` on matrix conditions, it can produce one of several different error messages or return a value of the wrong length (see reprex below demonstrating 3 different behaviors). None of the error messages hint at the underlying problem, which made debugging this issue after a package update very difficult.\\r\\n\\r\\nIf passing matrices as the conditions to `case_when` is not an intended usage, I would expect it to produce an interpretable error message to that effect.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\nlibrary(assertthat)\\r\\n\\r\\nx <- matrix(rnorm(36), ncol = 6)\\r\\n\\r\\n## Each of the following generates a different error\\r\\n{\\r\\n  y1 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    .default = \\\"Default\\\"\\r\\n  )\\r\\n  assert_that(length(y1) == length(x))\\r\\n}\\r\\n#> Error: length(y1) not equal to length(x)\\r\\n\\r\\n{\\r\\n  y2 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    x < 0 ~ \\\"Negative\\\",\\r\\n    .default = \\\"Default\\\"\\r\\n  )\\r\\n  assert_that(length(y2) == length(x))\\r\\n}\\r\\n#> Error in `vec_slice()`:\\r\\n#> ! Can't subset elements past the end.\\r\\n#> ℹ Locations 8, 10, 13, …, 35, and 36 don't exist.\\r\\n#> ℹ There are only 6 elements.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. ├─dplyr::case_when(...)\\r\\n#>  2. │ └─dplyr:::vec_case_when(...)\\r\\n#>  3. │   └─vctrs::vec_slice(value, loc)\\r\\n#>  4. └─vctrs (local) `<fn>`()\\r\\n#>  5.   └─vctrs:::stop_subscript_oob(...)\\r\\n#>  6.     └─vctrs:::stop_subscript(...)\\r\\n#>  7.       └─rlang::abort(...)\\r\\n\\r\\n{\\r\\n  y3 <- case_when(\\r\\n    !is.finite(x) ~ \\\"Invalid\\\",\\r\\n    x < 0 ~ \\\"Negative\\\",\\r\\n    x > 0 ~ \\\"Positive\\\",\\r\\n    x == 0 ~ \\\"Zero\\\"\\r\\n  )\\r\\n  assert_that(length(y3) == length(x))\\r\\n}\\r\\n#> Error in if (!any(are_unused)) {: missing value where TRUE/FALSE needed\\r\\n\\r\\n## Everything works fine if you convert x to a vector\\r\\n{\\r\\n  xvec <- as.vector(x)\\r\\n  yvec <- case_when(\\r\\n    !is.finite(xvec) ~ \\\"Invalid\\\",\\r\\n    xvec < 0 ~ \\\"Negative\\\",\\r\\n    xvec > 0 ~ \\\"Positive\\\",\\r\\n    xvec == 0 ~ \\\"Zero\\\"\\r\\n  )\\r\\n  assert_that(length(yvec) == length(xvec))\\r\\n}\\r\\n#> [1] TRUE\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-30 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6862/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6861\", #>     \"id\": 1732916405, #>     \"node_id\": \"I_kwDOAGIUpc5nSjS1\", #>     \"number\": 6861, #>     \"title\": \"`mutate` superseding `transmute` should allow ordering columns\", #>     \"user\": { #>       \"login\": \"epruesse\", #>       \"id\": 2774474, #>       \"node_id\": \"MDQ6VXNlcjI3NzQ0NzQ=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2774474?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/epruesse\", #>       \"html_url\": \"https://github.com/epruesse\", #>       \"followers_url\": \"https://api.github.com/users/epruesse/followers\", #>       \"following_url\": \"https://api.github.com/users/epruesse/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/epruesse/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/epruesse/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/epruesse/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/epruesse/orgs\", #>       \"repos_url\": \"https://api.github.com/users/epruesse/repos\", #>       \"events_url\": \"https://api.github.com/users/epruesse/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/epruesse/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 3407329987, #>         \"node_id\": \"LA_kwDOAGIUpc7LF7rD\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/columns%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"columns ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on columns: mutate(), select(),  rename(), relocate()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-05-30T20:02:59Z\", #>     \"updated_at\": \"2023-07-17T13:54:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I recently noticed that `transmute` has been marked as superseded by `mutate(.keep=\\\"none\\\")`. However, it turned out that `mutate` doesn't replicate column ordering behavior of `transmute`, but does something odd:\\r\\n\\r\\n```r\\r\\n> data.frame(a=1, b=2) %>% transmute(a, x=b*2, b)\\r\\n  a x b\\r\\n1 1 4 2\\r\\n> data.frame(a=1, b=2) %>% mutate(a, x=b*2, b, .keep=\\\"none\\\")\\r\\n  a b x\\r\\n1 1 2 4\\r\\n```\\r\\nWith more complex examples, the ordering becomes pretty confusing and difficult to explain. I'm guessing this may have to do with the `.keep = \\\"used\\\"` use case resorting things. For `.keep = \\\"none\\\"`, explicit column ordering as given, replicating or approximating `transmute` behavior,  would be much more useful (e.g. order of first LHS mention or last LHS mention).\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/reactions\", #>       \"total_count\": 3, #>       \"+1\": 3, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6861/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6860\", #>     \"id\": 1730019861, #>     \"node_id\": \"PR_kwDOAGIUpc5RkSaK\", #>     \"number\": 6860, #>     \"title\": \"WIP: Shortcut for count()\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-29T04:26:58Z\", #>     \"updated_at\": \"2023-05-29T04:35:14Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6860\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6860\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6860.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6860.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"This is an attempt to improve the run time of TPCH-21 which uses `count()` over a large table with many groups. Gives a speedup of up to 3. A slippery slope, but might be worthwhile because the vast majority of summaries are simple counts?\\r\\n\\r\\n## This PR\\r\\n\\r\\n``` r\\r\\noptions(conflicts.policy = list(warn = FALSE))\\r\\nlibrary(tidyverse)\\r\\n\\r\\nset.seed(20230529)\\r\\n\\r\\nget_data <- function(N) {\\r\\n  distr <- (trunc(rexp(N, 3)) + 1)\\r\\n  id <- rep(seq_along(distr), distr)\\r\\n  sec <- as.integer(trunc(runif(length(id), 1, 3)))\\r\\n  tibble(id, sec)\\r\\n}\\r\\n\\r\\ndata <- get_data(1e4)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.021   0.001   0.022\\r\\ndata <- get_data(1e5)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.107   0.006   0.113\\r\\ndata <- get_data(1e6)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   1.418   0.050   1.469\\r\\ndata <- get_data(1e7)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>  13.391   0.367  13.763\\r\\n\\r\\nget_data(40) |>\\r\\n  filter(id >= 30)\\r\\n#> # A tibble: 15 × 2\\r\\n#>       id   sec\\r\\n#>    <int> <int>\\r\\n#>  1    30     2\\r\\n#>  2    31     2\\r\\n#>  3    32     1\\r\\n#>  4    32     1\\r\\n#>  5    33     2\\r\\n#>  6    34     2\\r\\n#>  7    35     2\\r\\n#>  8    35     2\\r\\n#>  9    35     1\\r\\n#> 10    36     2\\r\\n#> 11    37     2\\r\\n#> 12    38     2\\r\\n#> 13    38     1\\r\\n#> 14    39     1\\r\\n#> 15    40     2\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-29 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\n## v1.1.2\\r\\n\\r\\n``` r\\r\\noptions(conflicts.policy = list(warn = FALSE))\\r\\nlibrary(tidyverse)\\r\\n\\r\\nset.seed(20230529)\\r\\n\\r\\nget_data <- function(N) {\\r\\n  distr <- (trunc(rexp(N, 3)) + 1)\\r\\n  id <- rep(seq_along(distr), distr)\\r\\n  sec <- as.integer(trunc(runif(length(id), 1, 3)))\\r\\n  tibble(id, sec)\\r\\n}\\r\\n\\r\\ndata <- get_data(1e4)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.034   0.002   0.036\\r\\ndata <- get_data(1e5)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   0.276   0.007   0.283\\r\\ndata <- get_data(1e6)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>   3.486   0.085   3.576\\r\\ndata <- get_data(1e7)\\r\\nsystem.time(count(data, id, sec))\\r\\n#>    user  system elapsed \\r\\n#>  38.666   0.708  39.530\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-29 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6860/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6858\", #>     \"id\": 1725001572, #>     \"node_id\": \"PR_kwDOAGIUpc5RTTr7\", #>     \"number\": 6858, #>     \"title\": \"trivial change to dataset documentation\", #>     \"user\": { #>       \"login\": \"UmbertoFasci\", #>       \"id\": 48659857, #>       \"node_id\": \"MDQ6VXNlcjQ4NjU5ODU3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/48659857?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/UmbertoFasci\", #>       \"html_url\": \"https://github.com/UmbertoFasci\", #>       \"followers_url\": \"https://api.github.com/users/UmbertoFasci/followers\", #>       \"following_url\": \"https://api.github.com/users/UmbertoFasci/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/UmbertoFasci/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/UmbertoFasci/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/UmbertoFasci/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/UmbertoFasci/orgs\", #>       \"repos_url\": \"https://api.github.com/users/UmbertoFasci/repos\", #>       \"events_url\": \"https://api.github.com/users/UmbertoFasci/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/UmbertoFasci/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-25T02:59:51Z\", #>     \"updated_at\": \"2023-05-25T02:59:51Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6858\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6858\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6858.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6858.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"The following is an edit on the starwars.R dataset source file which amends a trivial issue to improve readability.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6858/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6856\", #>     \"id\": 1722432895, #>     \"node_id\": \"I_kwDOAGIUpc5mqj1_\", #>     \"number\": 6856, #>     \"title\": \"Adjusting to different behaviour between `case_match` and `recode`\", #>     \"user\": { #>       \"login\": \"manhnguyen48\", #>       \"id\": 24793324, #>       \"node_id\": \"MDQ6VXNlcjI0NzkzMzI0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/24793324?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/manhnguyen48\", #>       \"html_url\": \"https://github.com/manhnguyen48\", #>       \"followers_url\": \"https://api.github.com/users/manhnguyen48/followers\", #>       \"following_url\": \"https://api.github.com/users/manhnguyen48/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/manhnguyen48/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/manhnguyen48/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/manhnguyen48/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/manhnguyen48/orgs\", #>       \"repos_url\": \"https://api.github.com/users/manhnguyen48/repos\", #>       \"events_url\": \"https://api.github.com/users/manhnguyen48/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/manhnguyen48/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-23T16:33:23Z\", #>     \"updated_at\": \"2023-07-10T16:15:40Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Since `recode` is being superseded, I'm looking at changing to `case_match`. I usually use it to reverse code an integer vector (e.g. 1 -> 5,  5 -> 1, etc.) and have found named list/vector useful but `case_match` doesn't accept the same. \\r\\nThe named list approach is useful to include `recode` in other functions as named list are more straightforward to produce. \\r\\nHow should I adapt here? \\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\nx <- rep(1:5, 5)\\r\\n#This still works\\r\\ndplyr::recode(x, !!!setNames(1:5, 5:1))\\r\\n#>  [1] 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1\\r\\n#This does not work\\r\\ndplyr::case_match(x, !!!setNames(1:5, 5:1))\\r\\n#> Error in `dplyr::case_match()`:\\r\\n#> ! Case 1 (`!!!setNames(1:5, 5:1)`) must be a two-sided formula, not the\\r\\n#>   number 1.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::case_match(x, !!!setNames(1:5, 5:1))\\r\\n#>  2.   └─dplyr:::case_formula_evaluate(...)\\r\\n#>  3.     └─dplyr:::map2(...)\\r\\n#>  4.       └─base::mapply(.f, .x, .y, MoreArgs = list(...), SIMPLIFY = FALSE)\\r\\n#>  5.         └─dplyr (local) `<fn>`(dots[[1L]][[1L]], dots[[2L]][[1L]])\\r\\n#>  6.           └─dplyr:::validate_and_split_formula(...)\\r\\n#>  7.             └─rlang::abort(message, call = error_call)\\r\\n#Instead we have to do this\\r\\ndplyr::case_match(x, 1~5, 2~4, 3~3, 4~2, 5~1)\\r\\n#>  [1] 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1 5 4 3 2 1\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-23 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/reactions\", #>       \"total_count\": 5, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 4 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6856/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6853\", #>     \"id\": 1720956991, #>     \"node_id\": \"I_kwDOAGIUpc5mk7g_\", #>     \"number\": 6853, #>     \"title\": \"Possible regression re. use of glue in dplyr::across\", #>     \"user\": { #>       \"login\": \"jimjam-slam\", #>       \"id\": 6520659, #>       \"node_id\": \"MDQ6VXNlcjY1MjA2NTk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/6520659?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/jimjam-slam\", #>       \"html_url\": \"https://github.com/jimjam-slam\", #>       \"followers_url\": \"https://api.github.com/users/jimjam-slam/followers\", #>       \"following_url\": \"https://api.github.com/users/jimjam-slam/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/jimjam-slam/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/jimjam-slam/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/jimjam-slam/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/jimjam-slam/orgs\", #>       \"repos_url\": \"https://api.github.com/users/jimjam-slam/repos\", #>       \"events_url\": \"https://api.github.com/users/jimjam-slam/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/jimjam-slam/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-05-23T01:07:16Z\", #>     \"updated_at\": \"2023-06-07T11:01:37Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"body\": \"This is discussed in https://twitter.com/mjskay/status/1660770865087148032\\r\\n\\r\\nEssentially, users are reporting errors when using `glue` inside an anonymous function given to `dplyr::across()`. This error did not previously exist.\\r\\n\\r\\nOn [my setup](https://twitter.com/jimjam_slam/status/1659392114994839553?s=20), with R 4.2.2 on macOS, and with dplyr 1.0.10 and glue 1.6.2, the following works to modify two columns:\\r\\n\\r\\n```r\\r\\nlibrary(dplyr)\\r\\nlibrary(glue)\\r\\nmtcars |> mutate(across(c(mpg, cyl), \\\\(x) glue(\\\"Oh hai {x}\\\")))\\r\\n```\\r\\n\\r\\n![image](https://github.com/tidyverse/glue/assets/6520659/2843bd11-13a7-408a-b100-1769c79529d9)\\r\\n\\r\\nBut [Matthew Kay reports](https://twitter.com/mjskay/status/1659381134273150977?s=20) that they get an error, unless they add dots to the anonymous function or save it to a variable before passing it to `across`:\\r\\n\\r\\n![image](https://github.com/tidyverse/dplyr/assets/6520659/f33ce5ec-a5f5-4cb9-bf2e-94e049bcba39)\\r\\n\\r\\n[Cameron Patrick](https://twitter.com/camjpatrick/status/1659376009375027200?s=20) also gets an error on R 4.2.3 for Windows with dplyr 1.1.1 and glue 1.6.2 (the same version of glue as me). They get this using the purrr anonymous function syntax:\\r\\n\\r\\n![image](https://github.com/tidyverse/dplyr/assets/6520659/83c6b1c8-65d2-4b76-9801-ff93273e077c)\\r\\n\\r\\n\\r\\nI'm not sure whether this is a problem with glue, dplyr or an interaction between the two, but as the version of glue between my successful reprex and Cameron's unsuccessful one isn't changed, I've chosen to file here.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/reactions\", #>       \"total_count\": 3, #>       \"+1\": 3, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6853/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6848\", #>     \"id\": 1708211113, #>     \"node_id\": \"I_kwDOAGIUpc5l0Tup\", #>     \"number\": 6848, #>     \"title\": \"slice_sample() uses statistically incorrect sampling algorithms\", #>     \"user\": { #>       \"login\": \"skolenik\", #>       \"id\": 20828835, #>       \"node_id\": \"MDQ6VXNlcjIwODI4ODM1\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/20828835?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/skolenik\", #>       \"html_url\": \"https://github.com/skolenik\", #>       \"followers_url\": \"https://api.github.com/users/skolenik/followers\", #>       \"following_url\": \"https://api.github.com/users/skolenik/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/skolenik/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/skolenik/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/skolenik/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/skolenik/orgs\", #>       \"repos_url\": \"https://api.github.com/users/skolenik/repos\", #>       \"events_url\": \"https://api.github.com/users/skolenik/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/skolenik/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-05-12T21:05:01Z\", #>     \"updated_at\": \"2023-05-15T14:33:56Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"`slice_sample()` relies on `base::sample.int()` which in turn relies on incorrect sampling algorithms. The difficulty of obtaining appropriate unequal probability samples is obscure and is not known outside of survey statistics. I don't want to go into base R code although they have to fix that, too (somewhat more surprising given that Thomas Lumley, one of the core R people, is a survey statistician, at least part time). The appropriate algorithms are implemented in `sampling::UPmaxentropy()`.\\r\\n\\r\\n```r\\r\\n# example from Tille (2006)\\r\\nset.seed(25)\\r\\nuneq_p = c(0.07,0.17,0.41,0.61,0.83,0.91)\\r\\nsim_uneq_p <- as.data.frame(matrix(rep(0,6*20000),ncol=6))\\r\\nfor (k in 1:nrow(sim_uneq_p)) {\\r\\n  this <- sample.int(n=length(uneq_p),size=sum(uneq_p),prob=uneq_p)\\r\\n  sim_uneq_p[k,this] <- 1\\r\\n}\\r\\ncolSums(sim_uneq_p)/nrow(sim_uneq_p)\\r\\nuneq_p\\r\\n# done right\\r\\nsim_uneq_p_done_right <- as.data.frame(matrix(rep(0,6*20000),ncol=6))\\r\\nfor (k in 1:nrow(sim_uneq_p_done_right)) {\\r\\n   sim_uneq_p_done_right[k,] <- sampling::UPmaxentropy(uneq_p)\\r\\n}\\r\\ncolSums(sim_uneq_p_done_right)/nrow(sim_uneq_p_done_right)\\r\\nuneq_p\\r\\n```\\r\\n\\r\\n@krlmlr @DavisVaughan \\r\\n\\r\\nCode in `sampling` is (kinda) ugly, and the development most likely does not satisfy the `tidyverse` standards. I don't know if you want to rely on this as a dependency. Relevant parts may need to be taken over and internalized. (I have written the unequal probability sampling code from scratch in Stata, so I am closely familiar with the methodology and what it takes to code it.)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6848/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6840\", #>     \"id\": 1696095377, #>     \"node_id\": \"PR_kwDOAGIUpc5PyELK\", #>     \"number\": 6840, #>     \"title\": \"Update starwars.csv\", #>     \"user\": { #>       \"login\": \"robcreel\", #>       \"id\": 5250939, #>       \"node_id\": \"MDQ6VXNlcjUyNTA5Mzk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5250939?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/robcreel\", #>       \"html_url\": \"https://github.com/robcreel\", #>       \"followers_url\": \"https://api.github.com/users/robcreel/followers\", #>       \"following_url\": \"https://api.github.com/users/robcreel/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/robcreel/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/robcreel/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/robcreel/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/robcreel/orgs\", #>       \"repos_url\": \"https://api.github.com/users/robcreel/repos\", #>       \"events_url\": \"https://api.github.com/users/robcreel/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/robcreel/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-05-04T14:05:23Z\", #>     \"updated_at\": \"2023-05-04T14:27:29Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6840\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6840\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6840.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6840.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Correct the capitalization of Beru's last name from \\\"lars\\\" to \\\"Lars\\\".\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6840/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6839\", #>     \"id\": 1693905728, #>     \"node_id\": \"I_kwDOAGIUpc5k9vNA\", #>     \"number\": 6839, #>     \"title\": \"Performance regression for dplyr::rowwise() introduced in version 1.1.0\", #>     \"user\": { #>       \"login\": \"shaneh2\", #>       \"id\": 5721999, #>       \"node_id\": \"MDQ6VXNlcjU3MjE5OTk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5721999?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/shaneh2\", #>       \"html_url\": \"https://github.com/shaneh2\", #>       \"followers_url\": \"https://api.github.com/users/shaneh2/followers\", #>       \"following_url\": \"https://api.github.com/users/shaneh2/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/shaneh2/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/shaneh2/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/shaneh2/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/shaneh2/orgs\", #>       \"repos_url\": \"https://api.github.com/users/shaneh2/repos\", #>       \"events_url\": \"https://api.github.com/users/shaneh2/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/shaneh2/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-05-03T11:39:37Z\", #>     \"updated_at\": \"2023-05-03T12:24:53Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It seems that a performance regression has been introduced for `dplyr::rowwise()` in `{dplyr}` version 1.1.0.\\r\\n\\r\\nI give some reprexes below illustrating large differences in execution time when using this on v1.1 compared to v1.0.10.\\r\\n * A: Execution of the function `test_code`, which uses `dplyr::rowwise()`, is fast in v1.0.10: **1.86 seconds**.\\r\\n * B: The same example is much slower in v1.1.0: **51.5 seconds**.\\r\\n   * B2: Execution time of a function called `test_code_without_rowwise`, which is modified not to use `dplyr::rowwise()` doesn't suffer these slowdowns: **0.337 seconds**.\\r\\n * C: Execution of the function `test_code`, which uses `dplyr::rowwise()`, is a similar duration in v1.1.1: **52.2 seconds**.\\r\\n\\r\\nThese seem to indicate that usage in `dplyr::rowwise` in v1.1.0+ is much slower than previous versions.\\r\\n\\r\\n*Note that we are using collapsable sections to improve readability of the code below. The functions in the collapsable sections are part of the reprexes.*\\r\\n\\r\\nA: Using `dplyr::rowwise()` in v1.0.10\\r\\n---\\r\\nExecution of the function `test_code`, which uses `dplyr::rowwise()`, is fast in v1.0.10: **1.86 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>**Click to show definitions of functions which are part of this reprex**<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.0.10\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.0.10 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 1.861705 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nB: Using `dplyr::rowwise()` in v1.1.0\\r\\n---\\r\\nThe same example is much slower in v1.1.0: **51.5 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as defined above are part of this reprex (Click to show)<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.0\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.0 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 51.51825 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n### B2: Avoiding use of `dplyr::rowwise()` in v1.1.0\\r\\n\\r\\nThis time difference doesn't appear in v1.1.0 when `dplyr::rowwise()` isn't used, indicating that `rowwise()` is what's causing the slowdown.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as above are included in this reprex, apart from `test_code` is replaced with `test_code_without_rowwise`<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code_without_rowwise = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    # rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code_without_rowwise()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n```r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.0\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.0 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 0.3373294 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\nC: Using `dplyr::rowwise()` in v1.1.1\\r\\n---\\r\\nExecution of the same function `test_code` is a similar duration in v1.1.1: **52.2 seconds**.\\r\\n\\r\\nNote that the timer starts after the package is installed.\\r\\n\\r\\n<details>\\r\\n<summary>Same functions as defined above are part of this reprex (Click to show)<\\/summary>\\r\\n\\r\\n``` r\\r\\ntest_code = function() {\\r\\n  print(\\\"Now starting test...\\\")\\r\\n  library(dplyr)\\r\\n  library(magrittr)\\r\\n  \\r\\n  data.frame(count = 1:3000,\\r\\n             test_col = rep(c(\\\"a\\\", \\\"b\\\", \\\"c\\\", each = 1000))) %>%\\r\\n    rowwise() %>%\\r\\n    mutate(\\r\\n      col1 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col2 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col3 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col4 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col5 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      ),\\r\\n      col6 = recode(\\r\\n        test_col,\\r\\n        \\\"a\\\" = \\\"cat1\\\",\\r\\n        \\\"b\\\" = \\\"cat2\\\",\\r\\n        \\\"v\\\" = \\\"cat3\\\"\\r\\n      )\\r\\n    )\\r\\n  print(\\\"Finished test\\\")\\r\\n}\\r\\n\\r\\nbenchmark_dplyr_version_install_from_source = function(dplyr_version_str) {\\r\\n  print(\\\"Installing dplyr (test hasn't started yet)\\\")\\r\\n  unloadNamespace(\\\"dplyr\\\")\\r\\n  package = glue::glue(\\\"https://cran.r-project.org/package=dplyr&version={dplyr_version_str}\\\")\\r\\n  suppressMessages(suppressWarnings(utils::install.packages(pkgs = package, repos = NULL)))\\r\\n  stopifnot(packageVersion(\\\"dplyr\\\") == dplyr_version_str)\\r\\n  \\r\\n  start <- Sys.time()\\r\\n  test_code()\\r\\n  print(\\r\\n    glue::glue(\\r\\n      \\\"The time taken for dplyr version {dplyr_version_str} INSTALLED FROM SOURCE is: \\\"\\r\\n    )\\r\\n  )\\r\\n  print(Sys.time() - start)\\r\\n}\\r\\n```\\r\\n\\r\\n<\\/details>\\r\\n\\r\\n``` r\\r\\nbenchmark_dplyr_version_install_from_source(\\\"1.1.1\\\")\\r\\n#> [1] \\\"Installing dplyr (test hasn't started yet)\\\"\\r\\n#> [1] \\\"Now starting test...\\\"\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n#> [1] \\\"Finished test\\\"\\r\\n#> The time taken for dplyr version 1.1.1 INSTALLED FROM SOURCE is: \\r\\n#> Time difference of 52.21882 secs\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-01 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6839/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6838\", #>     \"id\": 1691849841, #>     \"node_id\": \"I_kwDOAGIUpc5k15Rx\", #>     \"number\": 6838, #>     \"title\": \"Unhelpful error message when using `dplyr::between()` in `join_by()`\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-05-02T06:27:40Z\", #>     \"updated_at\": \"2023-05-02T14:01:49Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I accidentally used `dplyr::between()` instead of `between()` in `join_by()`. Not sure whether you want to accept it with a namespace or not but the error message isn't very helpful.\\r\\n\\r\\n``` r\\r\\ndplyr::join_by(dplyr::between(y, a, b))\\r\\n#> Error in `as_string()`:\\r\\n#> ! Can't convert a call to a string.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::join_by(dplyr::between(y, a, b))\\r\\n#>  2.   └─dplyr:::parse_join_by_expr(exprs[[i]], i, error_call = error_call)\\r\\n#>  3.     └─rlang::as_string(expr[[1]])\\r\\n#>  4.       └─rlang:::abort_coercion(x, \\\"a string\\\")\\r\\n#>  5.         └─rlang::abort(msg, call = call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-05-02 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/reactions\", #>       \"total_count\": 2, #>       \"+1\": 2, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6838/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6822\", #>     \"id\": 1666351494, #>     \"node_id\": \"I_kwDOAGIUpc5jUoGG\", #>     \"number\": 6822, #>     \"title\": \"Consider allowing `.env$` in `join_by()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-04-13T12:45:15Z\", #>     \"updated_at\": \"2023-04-13T13:06:14Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Motivated by https://github.com/tidyverse/dplyr/issues/6821\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf1 <- tibble(\\r\\n  X1 = c(\\\"chr1\\\", \\\"chr2\\\"),\\r\\n  a = c(1, 2)\\r\\n)\\r\\n\\r\\ndf2 <- tibble(\\r\\n  X2 = c(\\\"chr2\\\", \\\"chr3\\\"),\\r\\n  b = c(3, 4)\\r\\n)\\r\\n\\r\\nby.1 <- \\\"X1\\\"\\r\\nby.2 <- \\\"X2\\\"\\r\\n\\r\\n# The \\\"old\\\" way\\r\\n# inner_join(df1, df2, by = setNames(by.2, by.1))\\r\\n\\r\\n# This works but we don't typically encourage using `!!` in high level APIs\\r\\ninner_join(df1, df2, by = join_by(!!by.1 == !!by.2))\\r\\n#> # A tibble: 1 × 3\\r\\n#>   X1        a     b\\r\\n#>   <chr> <dbl> <dbl>\\r\\n#> 1 chr2      2     3\\r\\n \\r\\n# It might be nice to be able to do this, but it currently errors\\r\\ninner_join(df1, df2, by = join_by(.env$by.1 == .env$by.2))\\r\\n#> Error in `join_by()`:\\r\\n#> ! The left-hand side of a `$` expression must be either `x$` or `y$`.\\r\\n#> ℹ Expression 1 contains `.env$by.1`.\\r\\n```\\r\\n\\r\\nSome notes from talking with @lionel-:\\r\\n- We have an equivalent-ish to `.data$` already with `x$` and `y$`. They don't have a `.` prefix because I attempted to match the original argument names\\r\\n- So it seems like we are missing an equivalent to the `.env$` pronoun, and we may as well call it `.env$` here too\\r\\n- It would look up in the `caller_env()` of `join_by()`, and I don't think `join_by()` would get an `env = caller_env()` argument to \\\"pass the env through\\\" unlike what is done in `glue()`.\\r\\n- It would look up using `inherits = TRUE`, because it seems like tidy eval does this too, and we generally think that makes sense\\r\\n- It would require the result to be a single string, or die trying. i.e. you can only use this to inject a single name from the environment, not to inject an entire expression\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6822/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6817\", #>     \"id\": 1658192233, #>     \"node_id\": \"PR_kwDOAGIUpc5Nzt-8\", #>     \"number\": 6817, #>     \"title\": \"replace as_tibble with new_tibble in ungroup()\", #>     \"user\": { #>       \"login\": \"mkoohafkan\", #>       \"id\": 4790348, #>       \"node_id\": \"MDQ6VXNlcjQ3OTAzNDg=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4790348?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mkoohafkan\", #>       \"html_url\": \"https://github.com/mkoohafkan\", #>       \"followers_url\": \"https://api.github.com/users/mkoohafkan/followers\", #>       \"following_url\": \"https://api.github.com/users/mkoohafkan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mkoohafkan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mkoohafkan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mkoohafkan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mkoohafkan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mkoohafkan/repos\", #>       \"events_url\": \"https://api.github.com/users/mkoohafkan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mkoohafkan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-04-07T00:16:16Z\", #>     \"updated_at\": \"2023-04-07T04:56:49Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6817\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6817\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6817.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6817.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Make `ungroup()` handle attributes in a way that is consistent with other `dplyr` functions by using `new_tibble()` instead of `as_tibble()`.\\r\\n\\r\\nThis is also future-proof if it is later decided that `new_tibble()` should drop attributes.\\r\\n\\r\\nFixes https://github.com/tidyverse/dplyr/issues/6774 without affecting discussion in https://github.com/tidyverse/tibble/pull/769\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6817/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6809\", #>     \"id\": 1642598757, #>     \"node_id\": \"I_kwDOAGIUpc5h6BFl\", #>     \"number\": 6809, #>     \"title\": \"How to adjust to different behavior of across .fn argument passing in dplyr 1.1.1 vs. 1.0.10?\", #>     \"user\": { #>       \"login\": \"eipi10\", #>       \"id\": 436817, #>       \"node_id\": \"MDQ6VXNlcjQzNjgxNw==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/436817?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/eipi10\", #>       \"html_url\": \"https://github.com/eipi10\", #>       \"followers_url\": \"https://api.github.com/users/eipi10/followers\", #>       \"following_url\": \"https://api.github.com/users/eipi10/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/eipi10/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/eipi10/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/eipi10/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/eipi10/orgs\", #>       \"repos_url\": \"https://api.github.com/users/eipi10/repos\", #>       \"events_url\": \"https://api.github.com/users/eipi10/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/eipi10/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 11, #>     \"created_at\": \"2023-03-27T18:26:04Z\", #>     \"updated_at\": \"2023-04-07T22:20:48Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I have a summarizing function that's similar to the function below. It allows the user to pass grouping variables, summary variables and any number of summary functions as arguments. \\r\\n\\r\\n```\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n```\\r\\n\\r\\nI often use `weighted.mean` as a summary function in the `FUNS` argument, which requires a weighting variable, which I pass with the bare column name, like this:\\r\\n\\r\\n```\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n``` \\r\\n\\r\\nThis approach worked in `dplyr 1.0.10` and previous versions, but is failing in `dplyr 1.1.1`. Reproducible examples are below, first with 1.0.10 then with 1.1.1. \\r\\n\\r\\nHow can I update my function so that it will work properly with `dplyr 1.1.1`? I've never been happy with hard-coding the `w` argument anyway. Is there some tidyeval way that I should be passing the `w` argument into the summary function?\\r\\n\\r\\n### Example with `dplyr 1.0.10`\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n\\r\\n# These work in both 1.0.10 and 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp))\\r\\n#> # A tibble: 1 × 3\\r\\n#>       n mpg_mean hp_mean\\r\\n#>   <int>    <dbl>   <dbl>\\r\\n#> 1    32     20.1    147.\\r\\n\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 5\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean hp_mean\\r\\n#>   <dbl> <dbl> <int>    <dbl>   <dbl>\\r\\n#> 1     0     0    12     15.0   194. \\r\\n#> 2     0     1     6     19.8   181. \\r\\n#> 3     1     0     7     20.7   102. \\r\\n#> 4     1     1     7     28.4    80.6\\r\\n\\r\\n# Passing a weighting variable as the w argument in weighted.mean works in dplyr 1.0.10 but fails in dplyr 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 7\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean mpg_mean.wted hp_mean hp_mean.wted\\r\\n#>   <dbl> <dbl> <int>    <dbl>         <dbl>   <dbl>        <dbl>\\r\\n#> 1     0     0    12     15.0          15.1   194.         194. \\r\\n#> 2     0     1     6     19.8          19.0   181.         198. \\r\\n#> 3     1     0     7     20.7          20.4   102.         105. \\r\\n#> 4     1     1     7     28.4          28.4    80.6         80.6\\r\\n\\r\\nsessionInfo()\\r\\n#> R version 4.2.2 (2022-10-31)\\r\\n#> Platform: aarch64-apple-darwin20 (64-bit)\\r\\n#> Running under: macOS Ventura 13.2.1\\r\\n#> \\r\\n#> Matrix products: default\\r\\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\\r\\n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\\r\\n#> \\r\\n#> locale:\\r\\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\\r\\n#> \\r\\n#> attached base packages:\\r\\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n#> \\r\\n#> other attached packages:\\r\\n#> [1] dplyr_1.0.10\\r\\n#> \\r\\n#> loaded via a namespace (and not attached):\\r\\n#>  [1] rstudioapi_0.14   knitr_1.42        magrittr_2.0.3    tidyselect_1.2.0 \\r\\n#>  [5] R.cache_0.16.0    R6_2.5.1          rlang_1.1.0.9000  fastmap_1.1.1    \\r\\n#>  [9] fansi_1.0.4       styler_1.9.1      tools_4.2.2       xfun_0.37        \\r\\n#> [13] R.oo_1.25.0       utf8_1.2.3        DBI_1.1.3         cli_3.6.1        \\r\\n#> [17] withr_2.5.0       htmltools_0.5.4   yaml_2.3.7        digest_0.6.31    \\r\\n#> [21] tibble_3.2.1      lifecycle_1.0.3   purrr_1.0.1       vctrs_0.6.0.9000 \\r\\n#> [25] R.utils_2.12.2    fs_1.6.1          glue_1.6.2        evaluate_0.20    \\r\\n#> [29] rmarkdown_2.20    reprex_2.0.2      compiler_4.2.2    pillar_1.8.1     \\r\\n#> [33] generics_0.1.3    R.methodsS3_1.8.2 pkgconfig_2.0.3\\r\\n```\\r\\n\\r\\n### Same example, but with `dplyr 1.1.1`\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\n# Allow user to choose summary function(s)\\r\\nfnc = function(data, summary.vars=NULL, group.vars=NULL, \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE))) {\\r\\n  data %>% \\r\\n    group_by(across({{group.vars}})) %>% \\r\\n    summarise(n=n(), across({{summary.vars}}, \\r\\n                            .fn=FUNS,\\r\\n                            .names=\\\"{.col}_{.fn}\\\"))\\r\\n}\\r\\n\\r\\n# These work in both 1.0.10 and 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp))\\r\\n#> # A tibble: 1 × 3\\r\\n#>       n mpg_mean hp_mean\\r\\n#>   <int>    <dbl>   <dbl>\\r\\n#> 1    32     20.1    147.\\r\\n\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am))\\r\\n#> `summarise()` has grouped output by 'vs'. You can override using the `.groups`\\r\\n#> argument.\\r\\n#> # A tibble: 4 × 5\\r\\n#> # Groups:   vs [2]\\r\\n#>      vs    am     n mpg_mean hp_mean\\r\\n#>   <dbl> <dbl> <int>    <dbl>   <dbl>\\r\\n#> 1     0     0    12     15.0   194. \\r\\n#> 2     0     1     6     19.8   181. \\r\\n#> 3     1     0     7     20.7   102. \\r\\n#> 4     1     1     7     28.4    80.6\\r\\n\\r\\n# Passing a weighting variable as the w argument in weighted.mean works in dplyr 1.0.10 but fails in dplyr 1.1.1\\r\\nmtcars %>% fnc(c(mpg, hp), c(vs, am), \\r\\n               FUNS=c(mean=~mean(., na.rm=TRUE), \\r\\n                      mean.wted=~weighted.mean(., w=cyl, na.rm=TRUE)))\\r\\n#> Error in `summarise()`:\\r\\n#> ℹ In argument: `across(c(mpg, hp), .fn = FUNS, .names =\\r\\n#>   \\\"{.col}_{.fn}\\\")`.\\r\\n#> ℹ In group 1: `vs = 0`, `am = 0`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `mpg_mean.wted`.\\r\\n#> Caused by error in `weighted.mean.default()`:\\r\\n#> ! object 'cyl' not found\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─mtcars %>% ...\\r\\n#>   2. ├─global fnc(...)\\r\\n#>   3. │ └─data %>% group_by(across({{ group.vars }})) %>% ...\\r\\n#>   4. ├─dplyr::summarise(...)\\r\\n#>   5. ├─dplyr:::summarise.grouped_df(...)\\r\\n#>   6. │ └─dplyr:::summarise_cols(.data, dplyr_quosures(...), by, \\\"summarise\\\")\\r\\n#>   7. │   ├─base::withCallingHandlers(...)\\r\\n#>   8. │   └─dplyr:::map(quosures, summarise_eval_one, mask = mask)\\r\\n#>   9. │     └─base::lapply(.x, .f, ...)\\r\\n#>  10. │       └─dplyr (local) FUN(X[[i]], ...)\\r\\n#>  11. │         ├─base::withCallingHandlers(...)\\r\\n#>  12. │         └─mask$eval_all_summarise(quo)\\r\\n#>  13. │           └─dplyr (local) eval()\\r\\n#>  14. ├─`<rlng_lm_>`(mpg)\\r\\n#>  15. │ ├─stats::weighted.mean(., w = cyl, na.rm = TRUE)\\r\\n#>  16. │ └─stats:::weighted.mean.default(., w = cyl, na.rm = TRUE)\\r\\n#>  17. └─base::.handleSimpleError(...)\\r\\n#>  18.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  19.     └─rlang::abort(msg, call = call(\\\"across\\\"), parent = cnd)\\r\\n\\r\\nsessionInfo()\\r\\n#> R version 4.2.2 (2022-10-31)\\r\\n#> Platform: aarch64-apple-darwin20 (64-bit)\\r\\n#> Running under: macOS Ventura 13.2.1\\r\\n#> \\r\\n#> Matrix products: default\\r\\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\\r\\n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\\r\\n#> \\r\\n#> locale:\\r\\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\\r\\n#> \\r\\n#> attached base packages:\\r\\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n#> \\r\\n#> other attached packages:\\r\\n#> [1] dplyr_1.1.1\\r\\n#> \\r\\n#> loaded via a namespace (and not attached):\\r\\n#>  [1] rstudioapi_0.14   knitr_1.42        magrittr_2.0.3    tidyselect_1.2.0 \\r\\n#>  [5] R.cache_0.16.0    R6_2.5.1          rlang_1.1.0.9000  fastmap_1.1.1    \\r\\n#>  [9] fansi_1.0.4       styler_1.9.1      tools_4.2.2       xfun_0.37        \\r\\n#> [13] R.oo_1.25.0       utf8_1.2.3        cli_3.6.0         withr_2.5.0      \\r\\n#> [17] htmltools_0.5.4   yaml_2.3.7        digest_0.6.31     tibble_3.2.1     \\r\\n#> [21] lifecycle_1.0.3   purrr_1.0.1       vctrs_0.6.0.9000  R.utils_2.12.2   \\r\\n#> [25] fs_1.6.1          glue_1.6.2        evaluate_0.20     rmarkdown_2.20   \\r\\n#> [29] reprex_2.0.2      compiler_4.2.2    pillar_1.8.1      generics_0.1.3   \\r\\n#> [33] R.methodsS3_1.8.2 pkgconfig_2.0.3\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6809/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6806\", #>     \"id\": 1637564725, #>     \"node_id\": \"I_kwDOAGIUpc5hm0E1\", #>     \"number\": 6806, #>     \"title\": \"`count()` and `add_count()` could be much faster\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-03-23T13:38:59Z\", #>     \"updated_at\": \"2023-03-23T13:44:59Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Right now these eventually just do `summarise(n = n())` or `mutate(n = n())` at some point, but that can be very slow with many groups. We already have `vec_count()`, which should be much much faster than `count()` with many groups. We could also add some kind of vctrs primitive that works like a windowed count for `add_count()`, or just build on top of `vec_count()`'s result plus an additional call to `vec_match()`.\\r\\n\\r\\nWe'd have to think through how weighted counts would work, maybe `vec_count()` needs support for a weight argument (a double vector).\\r\\n\\r\\nMotivation is something like this, and flights isn't even that big. Roughly 55k groups here.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\nlibrary(nycflights13)\\r\\n\\r\\nbench::mark(\\r\\n  count(flights, dep_time, dep_delay),\\r\\n  vctrs::vec_count(flights[c(\\\"dep_time\\\", \\\"dep_delay\\\")]),\\r\\n  check = FALSE\\r\\n)\\r\\n#> Warning: Some expressions had a GC in every iteration; so filtering is\\r\\n#> disabled.\\r\\n#> # A tibble: 2 × 6\\r\\n#>   expression                                                 min  median itr/s…¹\\r\\n#>   <bch:expr>                                            <bch:tm> <bch:t>   <dbl>\\r\\n#> 1 count(flights, dep_time, dep_delay)                    419.6ms 441.4ms    2.27\\r\\n#> 2 vctrs::vec_count(flights[c(\\\"dep_time\\\", \\\"dep_delay\\\")])   17.3ms  21.5ms   42.7 \\r\\n#> # … with 2 more variables: mem_alloc <bch:byt>, `gc/sec` <dbl>, and abbreviated\\r\\n#> #   variable name ¹​`itr/sec`\\r\\n```\\r\\n\\r\\nAlso need to handle the fact that `...` and `wt` are data-masking, probably with `add_computed_columns()` like `distinct()`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6806/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6802\", #>     \"id\": 1634653405, #>     \"node_id\": \"I_kwDOAGIUpc5hbtTd\", #>     \"number\": 6802, #>     \"title\": \"Reconsider re-exports from rlang\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-03-21T20:35:59Z\", #>     \"updated_at\": \"2023-03-21T20:36:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Can we start to un-export any of these https://github.com/tidyverse/dplyr/blob/main/R/utils-tidy-eval.R?\\r\\n\\r\\nAlso, should we un-export `.data`? It doesn't belong on that help page, as noted in https://github.com/tidyverse/dplyr/pull/6801. We also don't export `.env` from dplyr, but those two are very closely related, and right now you can do `?dplyr::.data` but not `?dplyr::.env`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6802/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6795\", #>     \"id\": 1631415133, #>     \"node_id\": \"I_kwDOAGIUpc5hPWtd\", #>     \"number\": 6795, #>     \"title\": \"`filter()` error for matrices doesn't give hint per NEWS for 1.0.8\", #>     \"user\": { #>       \"login\": \"mine-cetinkaya-rundel\", #>       \"id\": 5965649, #>       \"node_id\": \"MDQ6VXNlcjU5NjU2NDk=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5965649?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mine-cetinkaya-rundel\", #>       \"html_url\": \"https://github.com/mine-cetinkaya-rundel\", #>       \"followers_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/followers\", #>       \"following_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/repos\", #>       \"events_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mine-cetinkaya-rundel/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 5, #>     \"created_at\": \"2023-03-20T05:31:15Z\", #>     \"updated_at\": \"2023-03-20T20:09:57Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Between 1.0.7 and 1.1.0 `filter()` stopped taking matrices, per #5973. [NEWS for dplyr 1.0.8](https://github.com/tidyverse/dplyr/blob/main/NEWS.md#dplyr-108) reflects this change, but it also says there should be an informative message:\\r\\n\\r\\n> - `filter()` forbids matrix results (#5973) and warns about data frame results, especially data frames created from `across()` with a hint to use `if_any()` or `if_all()`.\\r\\n\\r\\nSee reprex below:\\r\\n\\r\\nGoal: Drop rows where _all_ columns other than `id` are `NA`s.\\r\\n\\r\\n```r\\r\\n# create df ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nlibrary(tibble)\\r\\n\\r\\ndf <- tribble(\\r\\n  ~id, ~x,  ~y,\\r\\n  1,   NA, \\\"a\\\",\\r\\n  2,  \\\"b\\\",  NA,\\r\\n  3,   NA,  NA,\\r\\n  4,  \\\"c\\\", \\\"d\\\",\\r\\n)\\r\\n\\r\\n# new dplyr - 1.1.0 ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nsuppressMessages(library(dplyr))\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n#> [1] '1.1.0'\\r\\n\\r\\n# works\\r\\ndf |>\\r\\n  filter(if_any(!id, ~!is.na(.)))\\r\\n#> # A tibble: 3 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     1 <NA>  a    \\r\\n#> 2     2 b     <NA> \\r\\n#> 3     4 c     d\\r\\n\\r\\n# doesn't work\\r\\ndf |>\\r\\n  filter(!across(-id, is.na))\\r\\n#> Error in `filter()`:\\r\\n#> ℹ In argument: `!across(-id, is.na)`.\\r\\n#> Caused by error:\\r\\n#> ! `..1` must be a logical vector, not a logical matrix.\\r\\n\\r\\n# old dplyr - 1.0.7 ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––\\r\\n\\r\\nunloadNamespace(\\\"dplyr\\\")\\r\\nnew_lib <- tempfile()\\r\\ndir.create(new_lib)\\r\\nwithr::with_libpaths(new = new_lib, remotes::install_version(\\\"dplyr\\\", \\\"1.0.7\\\"))\\r\\nsuppressMessages(library(dplyr, lib.loc = new_lib))\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n#> [1] '1.0.7'\\r\\n\\r\\n# works\\r\\ndf |>\\r\\n  filter(if_any(!id, ~!is.na(.)))\\r\\n#> # A tibble: 3 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     1 <NA>  a    \\r\\n#> 2     2 b     <NA> \\r\\n#> 3     4 c     d\\r\\n\\r\\n# also works, but gives a different answer\\r\\ndf |>\\r\\n  filter(!across(-id, is.na))\\r\\n#> # A tibble: 2 × 3\\r\\n#>      id x     y    \\r\\n#>   <dbl> <chr> <chr>\\r\\n#> 1     2 b     <NA> \\r\\n#> 2     4 c     d\\r\\n\\r\\nunlink(new_lib, recursive = TRUE)\\r\\n```\\r\\n\\r\\nI believe, per the NEWS item, the message should be improved. I had a hard time deciphering the error given by 1.1.0 above, hence went the rabbit hole of trying to figure out what changed between the sessions.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6795/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6783\", #>     \"id\": 1615008309, #>     \"node_id\": \"I_kwDOAGIUpc5gQxI1\", #>     \"number\": 6783, #>     \"title\": \"`slice_max()` is quite slow for a big number of groups\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-03-08T10:09:01Z\", #>     \"updated_at\": \"2023-03-08T16:16:31Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It has gotten better after installing the dev version of dplyr (before a lot of time was wasted in `arg_match()`). But it has still a big overhead.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\nset.seed(1)\\r\\nn <- 10e3\\r\\ndf <- tibble(\\r\\n  id = sample(n, n, replace = TRUE),\\r\\n  x = runif(n)\\r\\n)\\r\\n\\r\\nbench::mark(\\r\\n  slice_max = df |> \\r\\n    slice_max(x, n = 1, with_ties = FALSE, by = id),\\r\\n  arrange_slice = df |>\\r\\n    arrange(desc(x)) |> \\r\\n    slice(1, .by = id),\\r\\n  row_number = df |>\\r\\n    filter(row_number(x) == n(), .by = id),\\r\\n  # can't check because the order is different\\r\\n  check = FALSE\\r\\n)\\r\\n#> Warning: Some expressions had a GC in every iteration; so filtering is\\r\\n#> disabled.\\r\\n#> # A tibble: 3 × 6\\r\\n#>   expression         min   median `itr/sec` mem_alloc `gc/sec`\\r\\n#>   <bch:expr>    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\\r\\n#> 1 slice_max      803.7ms  803.7ms      1.24    7.57MB     23.6\\r\\n#> 2 arrange_slice  272.3ms  290.5ms      3.44    1.86MB     22.4\\r\\n#> 3 row_number      91.3ms   96.5ms     10.4     4.04MB     22.4\\r\\n\\r\\n# just make sure that the three approaches give the same results\\r\\na1 <- df |> \\r\\n  slice_max(x, n = 1, with_ties = FALSE, by = id) |> \\r\\n  arrange(id)\\r\\na2 <- df |>\\r\\n  arrange(desc(x)) |> \\r\\n  slice(1, .by = id) |> \\r\\n  arrange(id)\\r\\na3 <- df |>\\r\\n  filter(row_number(x) == n(), .by = id) |> \\r\\n  arrange(id)\\r\\n\\r\\nidentical(a1, a2)\\r\\n#> [1] TRUE\\r\\nidentical(a1, a3)\\r\\n#> [1] TRUE\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-03-08 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n<details style=\\\"margin-bottom:10px;\\\">\\r\\n<summary>\\r\\nSession info\\r\\n<\\/summary>\\r\\n\\r\\n``` r\\r\\nsessioninfo::session_info()\\r\\n#> ─ Session info ───────────────────────────────────────────────────────────────\\r\\n#>  setting  value\\r\\n#>  version  R version 4.2.0 (2022-04-22)\\r\\n#>  os       macOS Big Sur/Monterey 10.16\\r\\n#>  system   x86_64, darwin17.0\\r\\n#>  ui       X11\\r\\n#>  language (EN)\\r\\n#>  collate  en_US.UTF-8\\r\\n#>  ctype    en_US.UTF-8\\r\\n#>  tz       UTC\\r\\n#>  date     2023-03-08\\r\\n#>  pandoc   2.19.2 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\\r\\n#> \\r\\n#> ─ Packages ───────────────────────────────────────────────────────────────────\\r\\n#>  package     * version    date (UTC) lib source\\r\\n#>  bench         1.1.2      2021-11-30 [1] CRAN (R 4.2.0)\\r\\n#>  cli           3.6.0      2023-01-09 [1] CRAN (R 4.2.0)\\r\\n#>  digest        0.6.31     2022-12-11 [1] CRAN (R 4.2.0)\\r\\n#>  dplyr       * 1.1.0.9000 2023-03-08 [1] Github (tidyverse/dplyr@2222d43)\\r\\n#>  evaluate      0.20       2023-01-17 [1] CRAN (R 4.2.0)\\r\\n#>  fansi         1.0.4      2023-01-22 [1] CRAN (R 4.2.0)\\r\\n#>  fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.2.0)\\r\\n#>  fs            1.6.1      2023-02-06 [1] CRAN (R 4.2.0)\\r\\n#>  generics      0.1.3      2022-07-05 [1] CRAN (R 4.2.0)\\r\\n#>  glue          1.6.2      2022-02-24 [1] CRAN (R 4.2.0)\\r\\n#>  htmltools     0.5.4      2022-12-07 [1] CRAN (R 4.2.0)\\r\\n#>  knitr         1.42       2023-01-25 [1] CRAN (R 4.2.0)\\r\\n#>  lifecycle     1.0.3.9000 2022-10-10 [1] Github (r-lib/lifecycle@80a1e52)\\r\\n#>  magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.2.0)\\r\\n#>  pillar        1.8.1      2022-08-19 [1] CRAN (R 4.2.0)\\r\\n#>  pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.2.0)\\r\\n#>  profmem       0.6.0      2020-12-13 [1] CRAN (R 4.2.0)\\r\\n#>  purrr         1.0.1      2023-01-10 [1] CRAN (R 4.2.0)\\r\\n#>  R.cache       0.16.0     2022-07-21 [1] CRAN (R 4.2.0)\\r\\n#>  R.methodsS3   1.8.2      2022-06-13 [1] CRAN (R 4.2.0)\\r\\n#>  R.oo          1.25.0     2022-06-12 [1] CRAN (R 4.2.0)\\r\\n#>  R.utils       2.12.2     2022-11-11 [1] CRAN (R 4.2.0)\\r\\n#>  R6            2.5.1      2021-08-19 [1] CRAN (R 4.2.0)\\r\\n#>  reprex        2.0.2      2022-08-17 [1] CRAN (R 4.2.0)\\r\\n#>  rlang         1.1.0      2023-03-07 [1] Github (r-lib/rlang@60159c7)\\r\\n#>  rmarkdown     2.20       2023-01-19 [1] CRAN (R 4.2.0)\\r\\n#>  rstudioapi    0.14       2022-08-22 [1] CRAN (R 4.2.0)\\r\\n#>  sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.2.0)\\r\\n#>  styler        1.9.1      2023-03-04 [1] CRAN (R 4.2.0)\\r\\n#>  tibble        3.1.8      2022-07-22 [1] CRAN (R 4.2.0)\\r\\n#>  tidyselect    1.2.0      2022-10-10 [1] CRAN (R 4.2.0)\\r\\n#>  utf8          1.2.3      2023-01-31 [1] CRAN (R 4.2.0)\\r\\n#>  vctrs         0.5.2.9000 2023-03-08 [1] Github (r-lib/vctrs@bdea1ce)\\r\\n#>  withr         2.5.0      2022-03-03 [1] CRAN (R 4.2.0)\\r\\n#>  xfun          0.37       2023-01-31 [1] CRAN (R 4.2.0)\\r\\n#>  yaml          2.3.7      2023-01-23 [1] CRAN (R 4.2.0)\\r\\n#> \\r\\n#>  [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\\r\\n#> \\r\\n#> ──────────────────────────────────────────────────────────────────────────────\\r\\n```\\r\\n\\r\\n<\\/details>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6783/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6774\", #>     \"id\": 1609648276, #>     \"node_id\": \"I_kwDOAGIUpc5f8UiU\", #>     \"number\": 6774, #>     \"title\": \"`ungroup()` drops data frame attributes\", #>     \"user\": { #>       \"login\": \"mkoohafkan\", #>       \"id\": 4790348, #>       \"node_id\": \"MDQ6VXNlcjQ3OTAzNDg=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4790348?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mkoohafkan\", #>       \"html_url\": \"https://github.com/mkoohafkan\", #>       \"followers_url\": \"https://api.github.com/users/mkoohafkan/followers\", #>       \"following_url\": \"https://api.github.com/users/mkoohafkan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mkoohafkan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mkoohafkan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mkoohafkan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mkoohafkan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mkoohafkan/repos\", #>       \"events_url\": \"https://api.github.com/users/mkoohafkan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mkoohafkan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-03-04T07:05:33Z\", #>     \"updated_at\": \"2023-03-23T15:56:06Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"This is referring to **dataframe/tibble** attributes, not tibble *column* attributes. The CRAN install of dplyr 1.1.0 sometimes drops attributes:\\r\\n\\r\\n```r\\r\\nd = mtcars\\r\\nattr(d, \\\"foo\\\") = \\\"bar\\\"\\r\\nattr(d, \\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\n\\r\\n## preserved\\r\\nd |> select(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> rename(cyl2 = cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> arrange(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> group_by(cyl) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> mutate(mpg2 = mpg) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> transmute(mpg2 = mpg) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> filter(cyl == 1L) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> count(cyl) |> attr(\\\"foo\\\") \\r\\n#> [1] \\\"bar\\\"\\r\\nd |> bind_rows(d) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\nd |> bind_cols(select(d, cyl2 = cyl)) |> attr(\\\"foo\\\")\\r\\n#> [1] \\\"bar\\\"\\r\\n\\r\\n\\r\\n## dropped\\r\\nd |> group_by(cyl) |> ungroup() |> attr(\\\"foo\\\")\\r\\n#> NULL\\r\\nd |> summarize(mpg = max(mpg)) |> attr(\\\"foo\\\")\\r\\n#> NULL\\r\\n```\\r\\n\\r\\nI can understand why it might make sense for `summarize()` to drop attributes (but then why does `count()` preserve them?), but I don't see why `ungroup(group_by(...))` should drop attributes unilaterally. Given that almost all `dplyr` verbs preserve the attribute, I'm wondering if this is a bug/regression.\\r\\n\\r\\nThere are a variety of issues regarding attributes but they are all closed.\\r\\n\\r\\n- https://github.com/tidyverse/dplyr/issues/2432\\r\\n- https://github.com/tidyverse/dplyr/issues/5132\\r\\n- https://github.com/tidyverse/dplyr/issues/3429\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6774/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6712\", #>     \"id\": 1580234527, #>     \"node_id\": \"I_kwDOAGIUpc5eMHcf\", #>     \"number\": 6712, #>     \"title\": \"Can we improve on this `across()` error?\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-02-10T19:48:08Z\", #>     \"updated_at\": \"2023-02-10T19:48:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\ndf <- tibble(x = 1:2, y = 3:4)\\r\\n\\r\\nfn <- function(col) {\\r\\n  stop(\\\"oh no\\\")\\r\\n}\\r\\n\\r\\nmutate(df, across(y, fn))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(y, fn)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `y`.\\r\\n#> Caused by error:\\r\\n#> ! oh no\\r\\n```\\r\\n\\r\\nIt can probably just be:\\r\\n\\r\\n```r\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(y, fn)`.\\r\\n#> ℹ In column: `y`.\\r\\n#> Caused by error:\\r\\n#> ! oh no\\r\\n```\\r\\n\\r\\nAs mentioned here https://github.com/tidyverse/dplyr/pull/6704#discussion_r1102408064\\r\\n\\r\\nThrown from here, so seems plausible that we could improve on this\\r\\nhttps://github.com/tidyverse/dplyr/blob/49b39af5ebd79bf06bb809c8fdf3bd955d8f9ad8/R/mutate.R#L382-L388\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6712/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6676\", #>     \"id\": 1566600644, #>     \"node_id\": \"I_kwDOAGIUpc5dYG3E\", #>     \"number\": 6676, #>     \"title\": \"`bind_rows()` on a list of data.tables creates corrupt output\", #>     \"user\": { #>       \"login\": \"emilBeBri\", #>       \"id\": 964816, #>       \"node_id\": \"MDQ6VXNlcjk2NDgxNg==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/964816?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/emilBeBri\", #>       \"html_url\": \"https://github.com/emilBeBri\", #>       \"followers_url\": \"https://api.github.com/users/emilBeBri/followers\", #>       \"following_url\": \"https://api.github.com/users/emilBeBri/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/emilBeBri/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/emilBeBri/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/emilBeBri/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/emilBeBri/orgs\", #>       \"repos_url\": \"https://api.github.com/users/emilBeBri/repos\", #>       \"events_url\": \"https://api.github.com/users/emilBeBri/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/emilBeBri/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-02-01T18:29:11Z\", #>     \"updated_at\": \"2023-02-14T17:33:04Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"\\r\\nwhen using bind_rows on a list of data.tables with keys, with either map_dfr or a do.call, the keys are not removed This is a problem, because the keys are not correct anymore, which means that later queries are using an index that is wrong. \\r\\n\\r\\nnot sure if I should report this under data.table or dplyr, but since the issue is in bin_rows, I guess it is dplyr.\\r\\n\\r\\n[here is the issue I filed under data.table](https://github.com/Rdatatable/data.table/issues/5587)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\nlibrary(data.table)\\r\\nlibrary(dplyr)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ndata <- data.table(var1=c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'), var2=c(rep(2016, 4), rep(2018, 4)), key=c('var1', 'var2'))\\r\\n\\r\\n\\r\\ntest1 <- lapply(c(2018, 2016), function(x) data[var2 %in% c(x-1, x)])\\r\\n\\r\\n\\r\\ntest2 <- do.call(bind_rows, test1)\\r\\n# wrong \\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n# right\\r\\nsum( test2$var1 %in% c('c', 'e') )\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\nsame thing  happens w. map_dfr,that uses bind_rows under the hood. This is how I found the issue. It is very common in my workflow, and I suspect I am not the one.\\r\\n\\r\\n\\r\\ndoing the same with rbind removes the keys, which is the expected behaviour - as the index from the key are no longer valid.\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\ntest2_rbind <- do.call(rbind, test1) \\r\\n# here it is fine - because the keys not there, giving a wrong picture of the structure of the DT\\r\\ntest2_rbind[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n# when removing the keys, everything is fine. \\r\\nsetkey(test2, NULL)\\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\ncuriosly, using split() instead of lapply circumvents the issue - but this is not a solution, since typically you need to apply a function to the data, - splitting it and then recombining it with split() makes no sense. But I am including it here for completeness.\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\ntest1 <- split(data, data$var2)\\r\\ntest2 <- do.call(bind_rows, test1)\\r\\n# right \\r\\ntest2[var1 %in% c('c', 'e'), .N]\\r\\n\\r\\n```\\r\\n\\r\\nsessionInfo\\r\\n\\r\\n```\\r\\n\\r\\nR version 4.2.2 (2022-10-31)\\r\\nPlatform: x86_64-pc-linux-gnu (64-bit)\\r\\nRunning under: Manjaro Linux\\r\\n\\r\\nMatrix products: default\\r\\nBLAS:   /usr/lib/libblas.so.3.11.0\\r\\nLAPACK: /usr/lib/liblapack.so.3.11.0\\r\\n\\r\\nlocale:\\r\\n [1] LC_CTYPE=en_DK.UTF-8       LC_NUMERIC=C\\r\\n [3] LC_TIME=en_DK.UTF-8        LC_COLLATE=en_DK.UTF-8\\r\\n [5] LC_MONETARY=en_DK.UTF-8    LC_MESSAGES=en_DK.UTF-8\\r\\n [7] LC_PAPER=en_DK.UTF-8       LC_NAME=C\\r\\n [9] LC_ADDRESS=C               LC_TELEPHONE=C\\r\\n[11] LC_MEASUREMENT=en_DK.UTF-8 LC_IDENTIFICATION=C\\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base\\r\\n\\r\\nother attached packages:\\r\\n[1] dplyr_1.0.10      data.table_1.14.6\\r\\n\\r\\nloaded via a namespace (and not attached):\\r\\n [1] fansi_1.0.4      assertthat_0.2.1 utf8_1.2.2       R6_2.5.1\\r\\n [5] DBI_1.1.3        lifecycle_1.0.3  magrittr_2.0.3   pillar_1.8.1\\r\\n [9] rlang_1.0.6      cli_3.6.0        vctrs_0.5.2      generics_0.1.3\\r\\n[13] glue_1.6.2       compiler_4.2.2   pkgconfig_2.0.3  tidyselect_1.2.0\\r\\n[17] tibble_3.1.8\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6676/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6663\", #>     \"id\": 1558485964, #>     \"node_id\": \"I_kwDOAGIUpc5c5JvM\", #>     \"number\": 6663, #>     \"title\": \"Consider `.sort = FALSE` for `summarise()`, `reframe()`, and `slice_sample()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1728164976, #>         \"node_id\": \"MDU6TGFiZWwxNzI4MTY0OTc2\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/grouping%20:family_man_woman_girl_boy:\", #>         \"name\": \"grouping :family_man_woman_girl_boy:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-01-26T17:12:12Z\", #>     \"updated_at\": \"2023-01-26T17:12:22Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"With the introduction of `.by`, we no longer sort group keys automatically. There are a whole host of good reasons for this as outlined here https://github.com/tidyverse/dplyr/issues/5664#issuecomment-907232443, and I am mostly confident this is the right long term default for dplyr.\\r\\n\\r\\nHowever, I am empathetic to the fact that users do often like to see their summary results sorted in ascending order. Right now, our recommendation is:\\r\\n\\r\\n```r\\r\\ndf %>%\\r\\n  summarise(..., .by = c(a, b, c)) %>%\\r\\n  arrange(a, b, c) # could also come before `summarise()`\\r\\n```\\r\\n\\r\\nThis is nice because you get the full power of `arrange()` including `desc()` and `.locale`.\\r\\n\\r\\nI think we should _consider_ a `.sort` argument like:\\r\\n\\r\\n```r\\r\\ndf %>%\\r\\n  summarise(..., .by = c(a, b, c), .sort = TRUE)\\r\\n```\\r\\n\\r\\n- `.sort = FALSE` would be the default for reasons mentioned above.\\r\\n- We'd document this as the 100% backwards compatible way to transition from `group_by()` to `.by` (even though most of the time the ordering isn't important).\\r\\n- You must accept that you get _ascending order_ and the _C locale_. That makes it compatible with `group_by()`. If you need anything fancier, call `arrange()`.\\r\\n- I do like that you won't have to repeat the group names.\\r\\n- Obviously `.sort = TRUE` errors on unorderable types like clock's year-month-weekday.\\r\\n- This would probably only be an argument for the `.data.frame` method, as opposed to the generic, because dbplyr probably won't want to enforce a sort order? Uncertain.\\r\\n\\r\\nBasically, this leaves the idea of a `groupby + summarise` operation theoretically pure (because it shouldn't require orderable keys), but also gives users a convenient way to optionally opt in to sorted results.\\r\\n\\r\\n---\\r\\n\\r\\nThere are 3 functions that would get this argument:\\r\\n- `summarise()`\\r\\n- `reframe()`\\r\\n- `slice_sample()` (goes with #6662)\\r\\n\\r\\nThe following would not get `.sort` because they aren't about row ordering:\\r\\n- `filter()`\\r\\n- `mutate()`\\r\\n- `slice()` and `slice_min/max/head/tail()` (after #6662 is changed)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/reactions\", #>       \"total_count\": 1, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6663/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6662\", #>     \"id\": 1558447141, #>     \"node_id\": \"I_kwDOAGIUpc5c5AQl\", #>     \"number\": 6662, #>     \"title\": \"`slice()` and `slice_head/tail/min/max()` should act like a `filter()` not a `reframe()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708198, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODE5OA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/bug\", #>         \"name\": \"bug\", #>         \"color\": \"E0B3A2\", #>         \"default\": true, #>         \"description\": \"an unexpected problem or unintended behavior\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-01-26T16:46:52Z\", #>     \"updated_at\": \"2023-01-26T16:51:00Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Note that this `filter()` call keeps the groups of `x` separated. i.e.  the groups of `2` and `1` are not aggregated together\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble(x = c(2, 1, 2, 2, 1), y = c(3, 2, 1, 2, 4))\\r\\ndf\\r\\n#> # A tibble: 5 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     1     2\\r\\n#> 3     2     1\\r\\n#> 4     2     2\\r\\n#> 5     1     4\\r\\n\\r\\n# Maintain group separation, we just take the first 2 per x group\\r\\ndf %>% filter(row_number() %in% 1:2, .by = x)\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     1     2\\r\\n#> 3     2     1\\r\\n#> 4     1     4\\r\\n```\\r\\n\\r\\n`filter()` is simply about deciding which rows to keep, not about the ordering of the result.\\r\\n\\r\\nI think that `slice()` and `slice_head/tail/min/max()` should function the exact same way. They currently do not:\\r\\n\\r\\n``` r\\r\\n# These both group the results by `x`.\\r\\n# The difference is `.by` doesn't do an additional sort by `x`.\\r\\ndf %>% slice(1:2, .by = x)\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     2     1\\r\\n#> 3     1     2\\r\\n#> 4     1     4\\r\\n\\r\\ndf %>% group_by(x) %>% slice(1:2)\\r\\n#> # A tibble: 4 × 2\\r\\n#> # Groups:   x [2]\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     1     2\\r\\n#> 2     1     4\\r\\n#> 3     2     3\\r\\n#> 4     2     1\\r\\n```\\r\\n\\r\\nSlicing is purely about figuring out which rows to _keep_. It doesn't have anything to do with determining the order of said rows.\\r\\n\\r\\nThe current slice implementation is (implicitly) like a `reframe()` call instead.\\r\\n\\r\\n``` r\\r\\ndf %>% reframe(.by = x, {\\r\\n  data <- pick(everything())\\r\\n  data[row_number() %in% 1:2,]\\r\\n})\\r\\n#> # A tibble: 4 × 2\\r\\n#>       x     y\\r\\n#>   <dbl> <dbl>\\r\\n#> 1     2     3\\r\\n#> 2     2     1\\r\\n#> 3     1     2\\r\\n#> 4     1     4\\r\\n```\\r\\n\\r\\nI think the way to practically make it work like a `filter()` is to change the implementation to build up a logical vector the same size as `.data` to slice with. That would retain the row ordering of `.data`.\\r\\n\\r\\n---\\r\\n\\r\\nThe one `slice()` family exception to this is `slice_sample()`, which is not a filter. It can even generate more rows than you started with. Possibly this is a sign that `slice_*()` was an unfortunate prefix for that.\\r\\n\\r\\nFor this reason, `slice_sample()` should continue to aggregate groups together. It will just be slightly different, but that is okay.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6662/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6660\", #>     \"id\": 1556850210, #>     \"node_id\": \"I_kwDOAGIUpc5cy6Yi\", #>     \"number\": 6660, #>     \"title\": \"`mutate(.by_row =)`, `reframe(.by_row =)`, and possibly `filter(.by_row =)`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-01-25T15:31:55Z\", #>     \"updated_at\": \"2023-02-08T19:02:16Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Related to https://github.com/tidyverse/dplyr/issues/4723\\r\\n\\r\\nWith the introduction of `.by`, it seems reasonable to once again reconsider `rowwise()` as well. I think we are convinced that the _idea_ of rowwise is useful, but the implementation could possibly be improved. A few pain points:\\r\\n- `rowwise()` is a form of persistent grouping, but you rarely want it on for more than 1 operation\\r\\n- `ungroup()` is an odd verb for turning off rowwise behavior\\r\\n- It still sucks that you need `summarise(model = list(lm(...)))`, i.e. the `list()` wrapping is manual\\r\\n- Maintaining the `rowwise_df` class is difficult and error prone for us\\r\\n- There are _very_ few times where rowwise behavior is actually useful. I think the two cases are `mutate()` and `reframe()`.\\r\\n\\r\\n---\\r\\n\\r\\nWith that in mind, I'd like to suggest a two-part replacement for `rowwise()`:\\r\\n- Two per-operation rowwise verbs, `mutate_row()` and `reframe_row()`. These become the _only_ two places in dplyr where rowwise behavior is applicable.\\r\\n- Give `mutate()`, `summarise()`, `reframe()`, `mutate_row()`, and `reframe_row()` the ability to automatically wrap scalars in a list. i.e. if `vec_is(elt)` is `FALSE`, wrap automatically into a list. This means that value could _never_ exist in a data frame column as is, so there is no ambiguity about wrapping and it is fairly easy to explain.\\r\\n\\r\\nThose two proposals result in the following new patterns:\\r\\n\\r\\n```r\\r\\n# dplyr 1.1.0\\r\\niris %>%\\r\\n  tidyr::nest(.by = Species) %>%\\r\\n  rowwise(Species) %>%\\r\\n  mutate(model = list(lm(Petal.Length ~ Sepal.Length, data = data))) %>%\\r\\n  reframe(broom::tidy(model))\\r\\n   \\r\\n# New 1:\\r\\n# (note the lack of list(), and no persistant rowwise-ness)\\r\\n# (note how we carry Species along in the reframe_row() call)\\r\\niris %>%\\r\\n  tidyr::nest(.by = Species) %>%\\r\\n  mutate_row(model = lm(Petal.Length ~ Sepal.Length, data = data)) %>%\\r\\n  reframe_row(Species, broom::tidy(model))\\r\\n\\r\\n# New 2:\\r\\n# (note that even summarise() doesn't need manual list() wrapping)\\r\\niris %>%\\r\\n  summarise(\\r\\n    model = lm(Petal.Length ~ Sepal.Length, data = pick(everything())),\\r\\n    .by = Species\\r\\n  ) %>%\\r\\n  reframe_row(Species, broom::tidy(model))\\r\\n\\r\\n# All result in:\\r\\n\\r\\n#> # A tibble: 6 × 6\\r\\n#>   Species    term         estimate std.error statistic  p.value\\r\\n#>   <fct>      <chr>           <dbl>     <dbl>     <dbl>    <dbl>\\r\\n#> 1 setosa     (Intercept)     0.803    0.344      2.34  2.38e- 2\\r\\n#> 2 setosa     Sepal.Length    0.132    0.0685     1.92  6.07e- 2\\r\\n#> 3 versicolor (Intercept)     0.185    0.514      0.360 7.20e- 1\\r\\n#> 4 versicolor Sepal.Length    0.686    0.0863     7.95  2.59e-10\\r\\n#> 5 virginica  (Intercept)     0.610    0.417      1.46  1.50e- 1\\r\\n#> 6 virginica  Sepal.Length    0.750    0.0630    11.9   6.30e-16\\r\\n```\\r\\n\\r\\nThis two part proposal has the very nice property that the difference between `mutate()` and `mutate_row()` becomes _purely_ about column access:\\r\\n- `mutate()` accesses columns using `vec_slice()` / `[`\\r\\n- `mutate_row()` accesses columns using `vec_slice2()` / `[[`\\r\\n\\r\\nIn other words, rowwise has _nothing_ to do with the output type of each column expression, and you still get useful results.\\r\\n\\r\\nIn terms of other invariants, there is one related to `vec_size()`:\\r\\n- `mutate_row()` requires each expression to return an element of `vec_size() == 1`\\r\\n- `reframe_row()` allows each expression to return an element of any size\\r\\n- (the size invariant is enforced after list wrapping) \\r\\n\\r\\nOther niceties:\\r\\n- It becomes very clear when you are doing a rowwise operation, because it is in the name of the verb (similar to `.by` being in the verb)\\r\\n- Somewhat obvious, but it means rowwise behavior isn't persistent. You always have bare tibble in, bare tibble out, which greatly simplifies things.\\r\\n\\r\\n---\\r\\n\\r\\nExtra notes:\\r\\n- Somewhat obvious, but `mutate_row()` and `reframe_row()` won't get `.by` because they operation \\\"by row\\\"\\r\\n- We don't want to teach `.by` about rowwise behavior, like `.by = .row` or something. We want `.by` to be _pure_ tidyselect. Plus this special behavior would only apply for `mutate()` and `reframe()` and that would be very confusing.\\r\\n- We do _not_ need `summarise_row()`. This would have the _exact_ same semantics as `mutate_row()`, but would just drop unused columns (which can mostly be done with `.keep` in `mutate_row()`). In particular `summarise_row()` and `mutate_row()` would both have to have the `vec_size() == 1` invariant from above, so we really don't need both.\\r\\n- There is no need for `filter_row()`. The only useful thing I can think of is something like `filter_row(!is.null(model))` for filtering out `NULL` list elements. But you can do that way more efficiently with an ungrouped call to `filter(!funs::is_na(model))`.\\r\\n\\r\\n`mutate_row()` and `reframe_row()` mostly have the semantics of the wrappers below, but this doesn't do the automatic list-wrapping of scalars:\\r\\n\\r\\n```r\\r\\nmutate_row <- function(.data, ...) {\\r\\n  .data <- rowwise(.data)\\r\\n  .data <- mutate(.data, ...)\\r\\n  ungroup(.data)\\r\\n}\\r\\n\\r\\nreframe_row <- function(.data, ...) {\\r\\n  .data <- rowwise(.data)\\r\\n  reframe(.data, ...)\\r\\n}\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6660/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6580\", #>     \"id\": 1470361443, #>     \"node_id\": \"I_kwDOAGIUpc5Xo-9j\", #>     \"number\": 6580, #>     \"title\": \"Make `Joining with` message clickable to copy-to-clipboard\", #>     \"user\": { #>       \"login\": \"donboyd5\", #>       \"id\": 6538392, #>       \"node_id\": \"MDQ6VXNlcjY1MzgzOTI=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/6538392?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/donboyd5\", #>       \"html_url\": \"https://github.com/donboyd5\", #>       \"followers_url\": \"https://api.github.com/users/donboyd5/followers\", #>       \"following_url\": \"https://api.github.com/users/donboyd5/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/donboyd5/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/donboyd5/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/donboyd5/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/donboyd5/orgs\", #>       \"repos_url\": \"https://api.github.com/users/donboyd5/repos\", #>       \"events_url\": \"https://api.github.com/users/donboyd5/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/donboyd5/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1257707950, #>         \"node_id\": \"MDU6TGFiZWwxMjU3NzA3OTUw\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/tables%20%F0%9F%A7%AE\", #>         \"name\": \"tables 🧮\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"joins and set operations\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2022-11-30T23:25:12Z\", #>     \"updated_at\": \"2022-12-10T19:10:28Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Hi,\\r\\n\\r\\ndplyr 1.1.0 seems like it is going to be great (I installed the dev version with `pak::[pak](http://pak.r-lib.org/reference/pak.html)(\\\"tidyverse/dplyr\\\")`). I really like .by in summarise and mutate.\\r\\n\\r\\nOne small suggestion for messages related to the new join:\\r\\n\\r\\nIn the old join, if I leave out the \\\"by\\\" it gives a helpful message stating what it does by default, giving the \\\", by=\\\" statement it used. This is nice because if I like it, I can copy it directly into code.\\r\\n\\r\\nThe new 1.1.0 message when \\\"by\\\" is left out is slightly different. For example, here is a typical message:\\r\\n\\r\\n``` \\r\\nJoining with `by = join_by(mergevar)`\\r\\n```\\r\\n\\r\\nNotice that this does not have a comma and space before the \\\"by\\\", or else it would look like this:\\r\\n\\r\\n``` \\r\\nJoining with `, by = join_by(mergevar)`\\r\\n```\\r\\n\\r\\nThe advantage of the second message is that it can be copied into code without the two extra keystrokes the first one requires. Hardly a significant issue, but it could add up over thousands of people and many days.\\r\\n\\r\\nThanks for considering it.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6580/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   } #> ]   ## Automatic pagination users <- gh(\"/users\", .limit = 50) length(users) #> [1] 50 if (FALSE) { ## Access developer preview of Licenses API (in preview as of 2015-09-24) gh(\"/licenses\") # used to error code 415 gh(\"/licenses\", .accept = \"application/vnd.github.drax-preview+json\") } if (FALSE) { ## Access Github Enterprise API ## Use GITHUB_API_URL environment variable to change the default. gh(\"/user/repos\", type = \"public\", .api_url = \"https://github.foobar.edu/api/v3\") } if (FALSE) { ## Use I() to force body part to be sent as an array, even if length 1 ## This works whether assignees has length 1 or > 1 assignees <- \"gh_user\" assignees <- c(\"gh_user1\", \"gh_user2\") gh(\"PATCH /repos/OWNER/REPO/issues/1\", assignees = I(assignees)) } if (FALSE) { ## There are two ways to send JSON data. One is that you supply one or ## more objects that will be converted to JSON automatically via ## jsonlite::toJSON(). In this case sometimes you need to use ## jsonlite::unbox() because fromJSON() creates lists from scalar vectors ## by default. The Content-Type header is automatically added in this ## case. For example this request turns on GitHub Pages, using this ## API: https://docs.github.com/v3/repos/pages/#enable-a-pages-site  gh::gh(   \"POST /repos/{owner}/{repo}/pages\",   owner = \"r-lib\",   repo = \"gh\",   source = list(     branch = jsonlite::unbox(\"gh-pages\"),     path = jsonlite::unbox(\"/\")   ),   .send_headers = c(Accept = \"application/vnd.github.switcheroo-preview+json\") )  ## The second way is to handle the JSON encoding manually, and supply it ## as a raw vector in an unnamed argument, and also a Content-Type header:  body <- '{ \"source\": { \"branch\": \"gh-pages\", \"path\": \"/\" } }' gh::gh(   \"POST /repos/{owner}/{repo}/pages\",   owner = \"r-lib\",   repo = \"gh\",   charToRaw(body),   .send_headers = c(     Accept = \"application/vnd.github.switcheroo-preview+json\",     \"Content-Type\" = \"application/json\"   ) ) } if (FALSE) { ## Pass along a query to the search/code endpoint via the ... argument x <- gh::gh(             \"/search/code\",             q = \"installation repo:r-lib/gh\",             .send_headers = c(\"X-GitHub-Api-Version\" = \"2022-11-28\")             )  str(x, list.len = 3, give.attr = FALSE)  }"},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple interface for the GitHub GraphQL API v4. — gh_gql","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"See GraphQL API : https://docs.github.com/graphql","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"","code":"gh_gql(query, ...)"},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"query GraphQL query, string. ... Name-value pairs giving API parameters. matched endpoint placeholders, sent query parameters GET requests, JSON body POST requests. one unnamed parameter, raw vector, JSON encoded, sent raw data, . can used example add assets releases. Named NULL values silently dropped. GET requests, named NA values trigger error. methods, named NA values included body request, JSON null.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"Note: pagination .limit argument work currently, pagination GraphQL API different v3 API. need pagination GraphQL, need manually.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"","code":"if (FALSE) { gh_gql(\"query { viewer { login }}\")  # Get rate limit ratelimit_query <- \"query {   viewer {     login   }   rateLimit {     limit     cost     remaining     resetAt   } }\"  gh_gql(ratelimit_query) }"},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the next, previous, first or last page of results — gh_next","title":"Get the next, previous, first or last page of results — gh_next","text":"Get next, previous, first last page results","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the next, previous, first or last page of results — gh_next","text":"","code":"gh_next(gh_response)  gh_prev(gh_response)  gh_first(gh_response)  gh_last(gh_response)"},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the next, previous, first or last page of results — gh_next","text":"gh_response object returned gh() call.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the next, previous, first or last page of results — gh_next","text":"Answer API.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the next, previous, first or last page of results — gh_next","text":"Note always defined. E.g. first page queried (default), first previous pages defined. next page, next page defined, etc. requested page exist, error thrown.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the next, previous, first or last page of results — gh_next","text":"","code":"x <- gh(\"/users\") vapply(x, \"[[\", character(1), \"login\") #>  [1] \"mojombo\"      \"defunkt\"      \"pjhyett\"      \"wycats\"       #>  [5] \"ezmobius\"     \"ivey\"         \"evanphx\"      \"vanpelt\"      #>  [9] \"wayneeseguin\" \"brynary\"      \"kevinclark\"   \"technoweenie\" #> [13] \"macournoyer\"  \"takeo\"        \"caged\"        \"topfunky\"     #> [17] \"anotherjesse\" \"roland\"       \"lukas\"        \"fanvsfan\"     #> [21] \"tomtt\"        \"railsjitsu\"   \"nitay\"        \"kevwil\"       #> [25] \"KirinDave\"    \"jamesgolick\"  \"atmos\"        \"errfree\"      #> [29] \"mojodna\"      \"bmizerany\"    x2 <- gh_next(x) vapply(x2, \"[[\", character(1), \"login\") #>  [1] \"jnewland\"    \"joshknowles\" \"hornbeck\"    \"jwhitmire\"   \"elbowdonkey\" #>  [6] \"reinh\"       \"knzconnor\"   \"bs\"          \"rsanheim\"    \"schacon\"     #> [11] \"uggedal\"     \"bruce\"       \"sam\"         \"mmower\"      \"abhay\"       #> [16] \"rabble\"      \"benburkert\"  \"indirect\"    \"fearoffish\"  \"ry\"          #> [21] \"engineyard\"  \"jsierles\"    \"tweibley\"    \"peimei\"      \"brixen\"      #> [26] \"tmornini\"    \"outerim\"     \"daksis\"      \"sr\"          \"lifo\""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Return GitHub user's current rate limits — gh_rate_limit","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"gh_rate_limits() reports rate limits authenticated user. gh_rate_limit() reports rate limits previous successful request. details GitHub's API rate limit policies available https://docs.github.com/v3/#rate-limiting.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"","code":"gh_rate_limit(   response = NULL,   .token = NULL,   .api_url = NULL,   .send_headers = NULL )  gh_rate_limits(.token = NULL, .api_url = NULL, .send_headers = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"response gh_response object previous gh call, rate limit values determined values response header. Optional argument, missing call \"GET /rate_limit\" made. .token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\".","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"list object containing overall limit, remaining limit, limit reset time.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"gh can find personal access token (PAT) via gh_token(), includes PAT requests. requests succeed without PAT, many require PAT prove request authorized specific GitHub user. PAT also helps rate limiting. gh use casual, want PAT. gh calls gitcreds::gitcreds_get() api_url, checks session environment variables local Git credential store PAT appropriate api_url. Therefore, previously used PAT , e.g., command line Git, gh may retrieve re-use . can call gitcreds::gitcreds_get() directly, , want see found specific URL. matching PAT found, gitcreds::gitcreds_get() errors, whereas gh_token() , instead, returns \"\". See GitHub's documentation Creating personal access token, use usethis::create_github_token() guided experience, including pre-selection recommended scopes. PAT, can use gitcreds::gitcreds_set() add Git credential store. point , gh (via gitcreds::gitcreds_get()) able find without effort part.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"","code":"gh_token(api_url = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"api_url GitHub API URL. Defaults GITHUB_API_URL environment variable, set, otherwise https://api.github.com.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"string characters, PAT found, empty string, otherwise. convenience, return value S3 class order ensure simple printing strategies reveal entire PAT.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"","code":"if (FALSE) { gh_token()  format(gh_token())  str(gh_token()) }"},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the GitHub remote associated with a path — gh_tree_remote","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"handy helper want make gh requests related current project.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"","code":"gh_tree_remote(path = \".\")"},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"path Path contained within git repo.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"repo github remote, list containing username repo. Otherwise, error.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"","code":"if (FALSE) { # interactive() gh_tree_remote() }"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":null,"dir":"Reference","previous_headings":"","what":"Info on current GitHub user and token — gh_whoami","title":"Info on current GitHub user and token — gh_whoami","text":"Reports wallet name, GitHub login, GitHub URL current authenticated user, first bit token, associated scopes.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Info on current GitHub user and token — gh_whoami","text":"","code":"gh_whoami(.token = NULL, .api_url = NULL, .send_headers = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Info on current GitHub user and token — gh_whoami","text":".token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\".","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Info on current GitHub user and token — gh_whoami","text":"gh_response object, also list.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Info on current GitHub user and token — gh_whoami","text":"Get personal access token GitHub API https://github.com/settings/tokens select scopes necessary planned tasks. repo scope, example, one many likely need. macOS Windows best store token git credential store, GitHub clients, including gh, can access . can use gitcreds package add token credential store:   See https://gh.r-lib.org/articles/managing-personal-access-tokens.html https://usethis.r-lib.org/articles/articles/git-credentials.html managing GitHub (generic git) credentials. systems, including Linux, git credential store typically convenient, might want store token GITHUB_PAT environment variable, can set .Renviron file.","code":"gitcreds::gitcreds_set()"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Info on current GitHub user and token — gh_whoami","text":"","code":"gh_whoami() #> Error in gh(endpoint = \"/user\", .token = .token, .api_url = .api_url,     .send_headers = .send_headers): GitHub API error (403): Resource not accessible by integration #> ℹ Read more at #>   <https://docs.github.com/rest/users/users#get-the-authenticated-user> if (FALSE) { ## explicit token + use with GitHub Enterprise gh_whoami(   .token = \"8c70fd8419398999c9ac5bacf3192882193cadf2\",   .api_url = \"https://github.foobar.edu/api/v3\" ) }"},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the result of a GitHub API call — print.gh_response","title":"Print the result of a GitHub API call — print.gh_response","text":"Print result GitHub API call","code":""},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the result of a GitHub API call — print.gh_response","text":"","code":"# S3 method for gh_response print(x, ...)"},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the result of a GitHub API call — print.gh_response","text":"x result object. ... Ignored.","code":""},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the result of a GitHub API call — print.gh_response","text":"JSON result.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-140","dir":"Changelog","previous_headings":"","what":"gh 1.4.0","title":"gh 1.4.0","text":"CRAN release: 2023-02-22 gh() gains new .max_rate parameter sets maximum number requests per second. gh now powered httr2. generally little impact normal operation request fails, can use httr2::last_response() httr2::last_request() debug. gh() gains new .max_wait argument gives maximum number minutes wait rate limited (#67). New gh_rate_limits() function reports rate limits active user. gh can now validate GitHub fine-grained personal access tokens (@jvstein, #171).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-131","dir":"Changelog","previous_headings":"","what":"gh 1.3.1","title":"gh 1.3.1","text":"CRAN release: 2022-09-08 gh now accepts lower-case methods .e. gh::gh(\"get /users/hadley/repos\") gh::gh(\"GET /users/hadley/repos\") work (@maelle, #167). Response headers (\"response_headers\") response content (\"response_content\") now returned error conditions error handlers can use information, rate limit reset header, handling github_errors (@gadenbuie, #117).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-130","dir":"Changelog","previous_headings":"","what":"gh 1.3.0","title":"gh 1.3.0","text":"CRAN release: 2021-04-30 gh now shows correct number records progress bar paginating (#147). New .params argument gh() make easier pass parameters programmatically (#140).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-121","dir":"Changelog","previous_headings":"","what":"gh 1.2.1","title":"gh 1.2.1","text":"CRAN release: 2021-04-01 Token validation accounts new format announced 2021-03-04 implemented 2021-04-01 (#148, @fmichonneau).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-120","dir":"Changelog","previous_headings":"","what":"gh 1.2.0","title":"gh 1.2.0","text":"CRAN release: 2020-11-27 gh_gql() now passes arguments gh() (#124). gh now handles responses pagination better, tries properly merge (#136, @rundel). gh can retrieve PAT Git credential store, lookup based targeted API URL. now uses gitcreds package. environment variables consulted URL-specific GitHub PATs changed. “https://api.github.com”: GITHUB_PAT_GITHUB_COM now, instead GITHUB_PAT_API_GITHUB_COM “https://github.acme.com/api/v3”: GITHUB_PAT_GITHUB_ACME_COM now, instead GITHUB_PAT_GITHUB_ACME_COM_API_V3 See documentation gitcreds package details. keyring package longer used, favor Git credential store. documentation GitHub REST API moved https://docs.github.com/rest endpoints now documented using URI template style RFC 6570: Old: GET /repos/:owner/:repo/issues New: GET /repos/{owner}/{repo}/issues gh accepts prioritizes new style. However, still parameter substitution old style. Fixed error occurred calling gh() .progress = FALSE (@gadenbuie, #115). gh() accepts named NA parameters destined request body (#139).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-110","dir":"Changelog","previous_headings":"","what":"gh 1.1.0","title":"gh 1.1.0","text":"CRAN release: 2020-01-24 Raw responses GitHub now returned raw vector. Responses may written disk providing path .destfile argument. gh now sets .Last.error error object uncaught error, .Last.error.trace stack trace error. gh() now silently drops named NULL parameters, throws error named NA parameters (#21, #84). gh() now returns better values empty responses, typically empty lists dictionaries (#66). gh() now .accept argument make easier set Accept HTTP header (#91). New gh_gql() function make easier work GitHub GraphQL API. gh now supports separate personal access tokens GitHub Enterprise sites. See ?gh_token details. gh now supports storing GitHub personal access tokens (PAT) system keyring, via keyring package. See ?gh_token details. gh() can now POST raw data, allows adding assets releases (#56).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-101","dir":"Changelog","previous_headings":"","what":"gh 1.0.1","title":"gh 1.0.1","text":"CRAN release: 2017-07-16 First public release.","code":""}]
