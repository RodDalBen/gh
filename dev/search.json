[{"path":[]},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://gh.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"pat-and-host","dir":"Articles","previous_headings":"","what":"PAT and host","title":"Managing Personal Access Tokens","text":"gh::gh() allows user provide PAT via .token argument specify host “github.com” via .api_url argument. (companies universities run instance GitHub Enterprise.) However, ’s annoying always provide PAT host ’s unsafe PAT appear explicitly R code. ’s important make possible user provide PAT /API URL directly, rarely necessary. gh::gh() designed play well secure, less fiddly methods expressing want. .api_url .token determined user provide ? .api_url defaults value GITHUB_API_URL environment variable , unset, falls back \"https://api.github.com\". always done worrying PAT. PAT obtained via call gh_token(.api_url). , token looked based host.","code":"gh(endpoint, ..., .token = NULL, ..., .api_url = NULL, ...)"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"the-gitcreds-package","dir":"Articles","previous_headings":"","what":"The gitcreds package","title":"Managing Personal Access Tokens","text":"gh now uses gitcreds package interact Git credential store. gh calls gitcreds::gitcreds_get() URL try find matching PAT. gitcreds::gitcreds_get() checks session environment variables local Git credential store. Therefore, previously used PAT , e.g., command line Git, gh may retrieve re-use . can call gitcreds::gitcreds_get() directly, , want see found specific URL. see something like : means gitcreds get PAT Git credential store. can call gitcreds_get()$password see actual PAT. matching PAT found, gitcreds::gitcreds_get() errors.","code":"gitcreds::gitcreds_get() #> <gitcreds> #>   protocol: https #>   host    : github.com #>   username: PersonalAccessToken #>   password: <-- hidden -->"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"pat-in-an-environment-variable","dir":"Articles","previous_headings":"","what":"PAT in an environment variable","title":"Managing Personal Access Tokens","text":"don’t Git installation, Git installation working credential store, can specify PAT environment variable. github.com can set GITHUB_PAT_GITHUB_COM GITHUB_PAT variable. different GitHub host, call gitcreds::gitcreds_cache_envvar() API URL see environment variable need set. example:","code":"gitcreds::gitcreds_cache_envvar(\"https://github.acme.com\") #> [1] \"GITHUB_PAT_GITHUB_ACME_COM\""},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"recommendations","dir":"Articles","previous_headings":"","what":"Recommendations","title":"Managing Personal Access Tokens","text":"machine used interactive development, recommend: Store PAT(s) official credential store. store PAT(s) plain text , e.g., .Renviron. past, common recommended practice pragmatic reasons. However, gitcreds/gh now evolved point ’s possible us follow better security practices. use general-purpose password manager, like 1Password LastPass, may also want store PAT(s) . ? PAT “forgotten” OS-level credential store, intentionally , ’ll need provide prompted. don’t record PAT, ’ll get new PAT whenever happens. end world. aren’t disciplined deleting lost PATs https://github.com/settings/tokens, eventually find confusing situation can’t sure PAT(s) use. headless system, CI/CD platform, provide necessary PAT(s) via secure environment variables. Regular environment variables can used configure less sensitive settings, API host. Don’t expose PAT something silly like dumping environment variables log file. Note GitHub Actions, specifically, personal access token automatically available workflow GITHUB_TOKEN secret. many workflows R community contain snippet: makes automatic PAT available GITHUB_PAT environment variable. PAT doesn’t right permissions, ’ll need explicitly provide one (see link ).","code":"env:   GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}"},{"path":"https://gh.r-lib.org/dev/articles/managing-personal-access-tokens.html","id":"failure","dir":"Articles","previous_headings":"","what":"Failure","title":"Managing Personal Access Tokens","text":"PAT , gh::gh() sends request token. (Internally, Authorization header omitted PAT found empty string, \"\".) PAT-related failures look like? PAT sent endpoint requires auth, request probably succeeds! least run rate limits. endpoint requires auth, ’ll get HTTP error, possibly one: PAT first discovered environment variable, taken face value. two common ways arrive PAT specification via .Renviron secret CI/CD platform, GitHub Actions. PAT invalid, first affected request fail, probably like : also experience invalid PAT provided directly via .token. Even valid PAT can lead downstream error, insufficient scopes respect specific request.","code":"GitHub API error (401): 401 Unauthorized Message: Requires authentication GitHub API error (401): 401 Unauthorized Message: Bad credentials"},{"path":"https://gh.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Maintainer, contributor. Jennifer Bryan. Author. Hadley Wickham. Author. . Copyright holder, funder.","code":""},{"path":"https://gh.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryan J, Wickham H (2023). gh: 'GitHub' 'API'. R package version 1.4.0.9000, https://github.com/r-lib/gh#readme, https://gh.r-lib.org/.","code":"@Manual{,   title = {gh: 'GitHub' 'API'},   author = {Jennifer Bryan and Hadley Wickham},   year = {2023},   note = {R package version 1.4.0.9000, https://github.com/r-lib/gh#readme},   url = {https://gh.r-lib.org/}, }"},{"path":"https://gh.r-lib.org/dev/index.html","id":"gh","dir":"","previous_headings":"","what":"GitHub API","title":"GitHub API","text":"Minimalistic client access GitHub’s REST GraphQL APIs.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"GitHub API","text":"Install package CRAN usual:","code":"install.packages(\"gh\")"},{"path":"https://gh.r-lib.org/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"GitHub API","text":"Use gh() function access API endpoints. endpoints listed documentation. first argument gh() endpoint. can just copy paste API endpoints documentation. Note leading slash must included well. https://docs.github.com/rest/reference/repos#list-repositories---user can copy paste GET /users/{username}/repos gh() call. E.g. JSON result sent API converted R object. Parameters can passed extra arguments. E.g.","code":"library(gh) my_repos <- gh(\"GET /users/{username}/repos\", username = \"gaborcsardi\") vapply(my_repos, \"[[\", \"\", \"name\") #>  [1] \"after\"                \"alexr\"                \"all.primer.tutorials\" #>  [4] \"altlist\"              \"argufy\"               \"ask\"                  #>  [7] \"async\"                \"BCEA\"                 \"BH\"                   #> [10] \"brokenPackage\"        \"butcher\"              \"css\"                  #> [13] \"curl\"                 \"disposables\"          \"dotenv\"               #> [16] \"falsy\"                \"finmix\"               \"foobar\"               #> [19] \"franc\"                \"fswatch\"              \"guildai-r\"            #> [22] \"httpgd\"               \"installgithub.app\"    \"ISA\"                  #> [25] \"isa2\"                 \"josaplay\"             \"keynote\"              #> [28] \"keypress\"             \"log\"                  \"lpSolve\" my_repos <- gh(   \"/users/{username}/repos\",   username = \"gaborcsardi\",   sort = \"created\") vapply(my_repos, \"[[\", \"\", \"name\") #>  [1] \"isa2\"                   \"r-builds\"               \"sos\"                    #>  [4] \"SCAVENGE\"               \"rworkflows\"             \"r-bugs\"                 #>  [7] \"josaplay\"               \"all.primer.tutorials\"   \"neartools\"              #> [10] \"REDCapTidieR\"           \"guildai-r\"              \"BH\"                     #> [13] \"testrtools\"             \"vt-rs\"                  \"testpaktestthat\"        #> [16] \"httpgd\"                 \"BCEA\"                   \"monorepo\"               #> [19] \"pacman\"                 \"tiff\"                   \"tidyclust\"              #> [22] \"testCheckForceSuggests\" \"naomi\"                  \"rstudio\"                #> [25] \"butcher\"                \"foobar\"                 \"roxydemo\"               #> [28] \"log\"                    \"rtools-packages\"        \"r-builds-original\""},{"path":"https://gh.r-lib.org/dev/index.html","id":"post-patch-put-and-delete-requests","dir":"","previous_headings":"Usage","what":"POST, PATCH, PUT and DELETE requests","title":"GitHub API","text":"POST, PATCH, PUT, DELETE requests can sent including HTTP verb endpoint, first argument. E.g. create repository: delete :","code":"new_repo <- gh(\"POST /user/repos\", name = \"my-new-repo-for-gh-testing\") gh(\"DELETE /repos/{owner}/{repo}\", owner = \"gaborcsardi\",    repo = \"my-new-repo-for-gh-testing\")"},{"path":"https://gh.r-lib.org/dev/index.html","id":"tokens","dir":"","previous_headings":"Usage","what":"Tokens","title":"GitHub API","text":"default GITHUB_PAT environment variable used. Alternatively, one can set .token argument gh().","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"pagination","dir":"","previous_headings":"Usage","what":"Pagination","title":"GitHub API","text":"Supply page parameter get subsequent pages:","code":"my_repos2 <- gh(\"GET /orgs/{org}/repos\", org = \"r-lib\", page = 2) vapply(my_repos2, \"[[\", \"\", \"name\") #>  [1] \"sodium\"      \"gargle\"      \"remotes\"     \"jose\"        \"backports\"   #>  [6] \"rcmdcheck\"   \"vdiffr\"      \"callr\"       \"mockery\"     \"here\"        #> [11] \"revdepcheck\" \"processx\"    \"vctrs\"       \"debugme\"     \"usethis\"     #> [16] \"rlang\"       \"pkgload\"     \"httrmock\"    \"pkgbuild\"    \"prettycode\"  #> [21] \"roxygen2md\"  \"pkgapi\"      \"zeallot\"     \"liteq\"       \"keyring\"     #> [26] \"sloop\"       \"styler\"      \"ansistrings\" \"archive\"     \"later\""},{"path":"https://gh.r-lib.org/dev/index.html","id":"environment-variables","dir":"","previous_headings":"","what":"Environment Variables","title":"GitHub API","text":"GITHUB_API_URL environment variable used default github api url. One GITHUB_PAT GITHUB_TOKEN environment variables used, order, default token.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"GitHub API","text":"Please note gh project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://gh.r-lib.org/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"GitHub API","text":"MIT © Gábor Csárdi, Jennifer Bryan, Hadley Wickham","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gh: 'GitHub' 'API' — gh-package","title":"gh: 'GitHub' 'API' — gh-package","text":"Minimal client access 'GitHub' 'API'.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gh: 'GitHub' 'API' — gh-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com [contributor] Authors: Jennifer Bryan Hadley Wickham contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the GitHub API — gh","title":"Query the GitHub API — gh","text":"extremely minimal client. need know API able use client. function : Try substitute listed parameter endpoint, using {parameter} notation. GET request (default), add listed parameters query parameters. GET request, send parameters request body, JSON. Convert response R list using jsonlite::fromJSON().","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the GitHub API — gh","text":"","code":"gh(   endpoint,   ...,   per_page = NULL,   .per_page = NULL,   .token = NULL,   .destfile = NULL,   .overwrite = FALSE,   .api_url = NULL,   .method = \"GET\",   .limit = NULL,   .accept = \"application/vnd.github.v3+json\",   .send_headers = NULL,   .progress = TRUE,   .params = list(),   .max_wait = 600,   .max_rate = NULL )"},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the GitHub API — gh","text":"endpoint GitHub API endpoint. Must one following forms: METHOD path, e.g. GET /rate_limit, path, e.g. /rate_limit, METHOD url, e.g. GET https://api.github.com/rate_limit, url, e.g. https://api.github.com/rate_limit. method supplied, use .method, defaults \"GET\". ... Name-value pairs giving API parameters. matched endpoint placeholders, sent query parameters GET requests, JSON body POST requests. one unnamed parameter, raw vector, JSON encoded, sent raw data, . can used example add assets releases. Named NULL values silently dropped. GET requests, named NA values trigger error. methods, named NA values included body request, JSON null. per_page, .per_page Number items return per page. omitted, substituted max(.limit, 100) .limit set, otherwise determined API (never greater 100). .token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .destfile Path write response disk. NULL (default), response processed returned object. path given, response written disk form sent. .overwrite .destfile provided, whether overwrite existing file.  Defaults FALSE. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .method HTTP method use explicitly supplied endpoint. .limit Number records return. can used instead manual pagination. default NULL, means defaults GitHub API used. can set number request (less) records, also Inf request records. Note, request many records, multiple GitHub API calls used get , can take potentially long time. .accept value Accept HTTP header. Defaults \"application/vnd.github.v3+json\" . Accept given .send_headers, used. parameter can used provide custom media type, order access preview feature API. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\". .progress Whether show progress indicator calls need one HTTP request. .params Additional list parameters append .... easier use ... parameters list already. .max_wait Maximum number seconds wait rate limited. Defaults 10 minutes. .max_rate Maximum request rate requests per second. Set automatically throttle requests.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the GitHub API — gh","text":"Answer API gh_response object, also list. Failed requests generate R error. Requests generate raw response return raw vector.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the GitHub API — gh","text":"","code":"## Repositories of a user, these are equivalent gh(\"/users/hadley/repos\", .limit = 2) #> [ #>   { #>     \"id\": 40423928, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDQyMzkyOA==\", #>     \"name\": \"15-state-of-the-union\", #>     \"full_name\": \"hadley/15-state-of-the-union\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"description\": {}, #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-state-of-the-union\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/deployments\", #>     \"created_at\": \"2015-08-09T03:22:26Z\", #>     \"updated_at\": \"2022-12-31T01:27:52Z\", #>     \"pushed_at\": \"2015-08-10T20:29:10Z\", #>     \"git_url\": \"git://github.com/hadley/15-state-of-the-union.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-state-of-the-union.git\", #>     \"clone_url\": \"https://github.com/hadley/15-state-of-the-union.git\", #>     \"svn_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"homepage\": {}, #>     \"size\": 4519, #>     \"stargazers_count\": 22, #>     \"watchers_count\": 22, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 7, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 7, #>     \"open_issues\": 0, #>     \"watchers\": 22, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 40544418, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDU0NDQxOA==\", #>     \"name\": \"15-student-papers\", #>     \"full_name\": \"hadley/15-student-papers\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-student-papers\", #>     \"description\": \"Graphics & computing student paper winners @ JSM 2015\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-student-papers\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-student-papers/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-student-papers/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-student-papers/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-student-papers/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-student-papers/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-student-papers/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-student-papers/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-student-papers/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-student-papers/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-student-papers/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-student-papers/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-student-papers/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-student-papers/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-student-papers/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-student-papers/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-student-papers/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-student-papers/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-student-papers/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-student-papers/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-student-papers/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-student-papers/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-student-papers/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-student-papers/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-student-papers/deployments\", #>     \"created_at\": \"2015-08-11T13:51:29Z\", #>     \"updated_at\": \"2019-08-18T16:49:40Z\", #>     \"pushed_at\": \"2015-08-21T15:27:51Z\", #>     \"git_url\": \"git://github.com/hadley/15-student-papers.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-student-papers.git\", #>     \"clone_url\": \"https://github.com/hadley/15-student-papers.git\", #>     \"svn_url\": \"https://github.com/hadley/15-student-papers\", #>     \"homepage\": {}, #>     \"size\": 2956, #>     \"stargazers_count\": 14, #>     \"watchers_count\": 14, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 0, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 0, #>     \"open_issues\": 0, #>     \"watchers\": 14, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  gh(\"/users/{username}/repos\", username = \"hadley\", .limit = 2) #> [ #>   { #>     \"id\": 40423928, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDQyMzkyOA==\", #>     \"name\": \"15-state-of-the-union\", #>     \"full_name\": \"hadley/15-state-of-the-union\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"description\": {}, #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-state-of-the-union\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-state-of-the-union/deployments\", #>     \"created_at\": \"2015-08-09T03:22:26Z\", #>     \"updated_at\": \"2022-12-31T01:27:52Z\", #>     \"pushed_at\": \"2015-08-10T20:29:10Z\", #>     \"git_url\": \"git://github.com/hadley/15-state-of-the-union.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-state-of-the-union.git\", #>     \"clone_url\": \"https://github.com/hadley/15-state-of-the-union.git\", #>     \"svn_url\": \"https://github.com/hadley/15-state-of-the-union\", #>     \"homepage\": {}, #>     \"size\": 4519, #>     \"stargazers_count\": 22, #>     \"watchers_count\": 22, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 7, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 7, #>     \"open_issues\": 0, #>     \"watchers\": 22, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 40544418, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDU0NDQxOA==\", #>     \"name\": \"15-student-papers\", #>     \"full_name\": \"hadley/15-student-papers\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"hadley\", #>       \"id\": 4196, #>       \"node_id\": \"MDQ6VXNlcjQxOTY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/4196?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hadley\", #>       \"html_url\": \"https://github.com/hadley\", #>       \"followers_url\": \"https://api.github.com/users/hadley/followers\", #>       \"following_url\": \"https://api.github.com/users/hadley/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hadley/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hadley/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hadley/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hadley/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hadley/repos\", #>       \"events_url\": \"https://api.github.com/users/hadley/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hadley/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/hadley/15-student-papers\", #>     \"description\": \"Graphics & computing student paper winners @ JSM 2015\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/hadley/15-student-papers\", #>     \"forks_url\": \"https://api.github.com/repos/hadley/15-student-papers/forks\", #>     \"keys_url\": \"https://api.github.com/repos/hadley/15-student-papers/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/hadley/15-student-papers/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/hadley/15-student-papers/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/hadley/15-student-papers/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/hadley/15-student-papers/events\", #>     \"assignees_url\": \"https://api.github.com/repos/hadley/15-student-papers/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/hadley/15-student-papers/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/hadley/15-student-papers/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/hadley/15-student-papers/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/hadley/15-student-papers/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/hadley/15-student-papers/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/hadley/15-student-papers/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/hadley/15-student-papers/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/hadley/15-student-papers/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/hadley/15-student-papers/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/hadley/15-student-papers/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/hadley/15-student-papers/merges\", #>     \"archive_url\": \"https://api.github.com/repos/hadley/15-student-papers/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/hadley/15-student-papers/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/hadley/15-student-papers/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/hadley/15-student-papers/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/hadley/15-student-papers/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/hadley/15-student-papers/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/hadley/15-student-papers/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/hadley/15-student-papers/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/hadley/15-student-papers/deployments\", #>     \"created_at\": \"2015-08-11T13:51:29Z\", #>     \"updated_at\": \"2019-08-18T16:49:40Z\", #>     \"pushed_at\": \"2015-08-21T15:27:51Z\", #>     \"git_url\": \"git://github.com/hadley/15-student-papers.git\", #>     \"ssh_url\": \"git@github.com:hadley/15-student-papers.git\", #>     \"clone_url\": \"https://github.com/hadley/15-student-papers.git\", #>     \"svn_url\": \"https://github.com/hadley/15-student-papers\", #>     \"homepage\": {}, #>     \"size\": 2956, #>     \"stargazers_count\": 14, #>     \"watchers_count\": 14, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": false, #>     \"has_discussions\": false, #>     \"forks_count\": 0, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 0, #>     \"license\": {}, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 0, #>     \"open_issues\": 0, #>     \"watchers\": 14, #>     \"default_branch\": \"master\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]   ## Starred repositories of a user gh(\"/users/hadley/starred\", .limit = 2) #> [ #>   { #>     \"id\": 390115983, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkzOTAxMTU5ODM=\", #>     \"name\": \"py-shiny\", #>     \"full_name\": \"posit-dev/py-shiny\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"posit-dev\", #>       \"id\": 107264312, #>       \"node_id\": \"O_kgDOBmS5OA\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/107264312?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/posit-dev\", #>       \"html_url\": \"https://github.com/posit-dev\", #>       \"followers_url\": \"https://api.github.com/users/posit-dev/followers\", #>       \"following_url\": \"https://api.github.com/users/posit-dev/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/posit-dev/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/posit-dev/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/posit-dev/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/posit-dev/orgs\", #>       \"repos_url\": \"https://api.github.com/users/posit-dev/repos\", #>       \"events_url\": \"https://api.github.com/users/posit-dev/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/posit-dev/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/posit-dev/py-shiny\", #>     \"description\": \"Shiny for Python\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/posit-dev/py-shiny\", #>     \"forks_url\": \"https://api.github.com/repos/posit-dev/py-shiny/forks\", #>     \"keys_url\": \"https://api.github.com/repos/posit-dev/py-shiny/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/posit-dev/py-shiny/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/posit-dev/py-shiny/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/posit-dev/py-shiny/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/posit-dev/py-shiny/events\", #>     \"assignees_url\": \"https://api.github.com/repos/posit-dev/py-shiny/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/posit-dev/py-shiny/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/posit-dev/py-shiny/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/posit-dev/py-shiny/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/posit-dev/py-shiny/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/posit-dev/py-shiny/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/posit-dev/py-shiny/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/posit-dev/py-shiny/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/posit-dev/py-shiny/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/posit-dev/py-shiny/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/posit-dev/py-shiny/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/posit-dev/py-shiny/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/posit-dev/py-shiny/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/posit-dev/py-shiny/merges\", #>     \"archive_url\": \"https://api.github.com/repos/posit-dev/py-shiny/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/posit-dev/py-shiny/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/posit-dev/py-shiny/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/posit-dev/py-shiny/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/posit-dev/py-shiny/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/posit-dev/py-shiny/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/posit-dev/py-shiny/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/posit-dev/py-shiny/deployments\", #>     \"created_at\": \"2021-07-27T20:19:49Z\", #>     \"updated_at\": \"2023-10-31T13:58:12Z\", #>     \"pushed_at\": \"2023-10-31T14:54:04Z\", #>     \"git_url\": \"git://github.com/posit-dev/py-shiny.git\", #>     \"ssh_url\": \"git@github.com:posit-dev/py-shiny.git\", #>     \"clone_url\": \"https://github.com/posit-dev/py-shiny.git\", #>     \"svn_url\": \"https://github.com/posit-dev/py-shiny\", #>     \"homepage\": \"https://shiny.posit.co/py/\", #>     \"size\": 14777, #>     \"stargazers_count\": 709, #>     \"watchers_count\": 709, #>     \"language\": \"Python\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 40, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 227, #>     \"license\": { #>       \"key\": \"mit\", #>       \"name\": \"MIT License\", #>       \"spdx_id\": \"MIT\", #>       \"url\": \"https://api.github.com/licenses/mit\", #>       \"node_id\": \"MDc6TGljZW5zZTEz\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 40, #>     \"open_issues\": 227, #>     \"watchers\": 709, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 10221246, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMDIyMTI0Ng==\", #>     \"name\": \"bigrquery\", #>     \"full_name\": \"r-dbi/bigrquery\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"r-dbi\", #>       \"id\": 5695665, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjU2OTU2NjU=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5695665?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/r-dbi\", #>       \"html_url\": \"https://github.com/r-dbi\", #>       \"followers_url\": \"https://api.github.com/users/r-dbi/followers\", #>       \"following_url\": \"https://api.github.com/users/r-dbi/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/r-dbi/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/r-dbi/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/r-dbi/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/r-dbi/orgs\", #>       \"repos_url\": \"https://api.github.com/users/r-dbi/repos\", #>       \"events_url\": \"https://api.github.com/users/r-dbi/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/r-dbi/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"description\": \"An interface to Google's BigQuery from R.\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/r-dbi/bigrquery\", #>     \"forks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/forks\", #>     \"keys_url\": \"https://api.github.com/repos/r-dbi/bigrquery/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/r-dbi/bigrquery/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/r-dbi/bigrquery/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/events\", #>     \"assignees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/r-dbi/bigrquery/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/r-dbi/bigrquery/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/r-dbi/bigrquery/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/r-dbi/bigrquery/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/r-dbi/bigrquery/merges\", #>     \"archive_url\": \"https://api.github.com/repos/r-dbi/bigrquery/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/r-dbi/bigrquery/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/r-dbi/bigrquery/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/r-dbi/bigrquery/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/r-dbi/bigrquery/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/r-dbi/bigrquery/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/r-dbi/bigrquery/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/deployments\", #>     \"created_at\": \"2013-05-22T14:04:16Z\", #>     \"updated_at\": \"2023-10-24T11:51:15Z\", #>     \"pushed_at\": \"2023-10-25T22:57:28Z\", #>     \"git_url\": \"git://github.com/r-dbi/bigrquery.git\", #>     \"ssh_url\": \"git@github.com:r-dbi/bigrquery.git\", #>     \"clone_url\": \"https://github.com/r-dbi/bigrquery.git\", #>     \"svn_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"homepage\": \"https://bigrquery.r-dbi.org\", #>     \"size\": 1768, #>     \"stargazers_count\": 496, #>     \"watchers_count\": 496, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": false, #>     \"has_downloads\": true, #>     \"has_wiki\": false, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 179, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 86, #>     \"license\": { #>       \"key\": \"gpl-3.0\", #>       \"name\": \"GNU General Public License v3.0\", #>       \"spdx_id\": \"GPL-3.0\", #>       \"url\": \"https://api.github.com/licenses/gpl-3.0\", #>       \"node_id\": \"MDc6TGljZW5zZTk=\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [ #>       \"bigquery\", #>       \"database\", #>       \"r\" #>     ], #>     \"visibility\": \"public\", #>     \"forks\": 179, #>     \"open_issues\": 86, #>     \"watchers\": 496, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  gh(\"/users/{username}/starred\", username = \"hadley\", .limit = 2) #> [ #>   { #>     \"id\": 390115983, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkzOTAxMTU5ODM=\", #>     \"name\": \"py-shiny\", #>     \"full_name\": \"posit-dev/py-shiny\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"posit-dev\", #>       \"id\": 107264312, #>       \"node_id\": \"O_kgDOBmS5OA\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/107264312?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/posit-dev\", #>       \"html_url\": \"https://github.com/posit-dev\", #>       \"followers_url\": \"https://api.github.com/users/posit-dev/followers\", #>       \"following_url\": \"https://api.github.com/users/posit-dev/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/posit-dev/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/posit-dev/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/posit-dev/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/posit-dev/orgs\", #>       \"repos_url\": \"https://api.github.com/users/posit-dev/repos\", #>       \"events_url\": \"https://api.github.com/users/posit-dev/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/posit-dev/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/posit-dev/py-shiny\", #>     \"description\": \"Shiny for Python\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/posit-dev/py-shiny\", #>     \"forks_url\": \"https://api.github.com/repos/posit-dev/py-shiny/forks\", #>     \"keys_url\": \"https://api.github.com/repos/posit-dev/py-shiny/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/posit-dev/py-shiny/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/posit-dev/py-shiny/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/posit-dev/py-shiny/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/posit-dev/py-shiny/events\", #>     \"assignees_url\": \"https://api.github.com/repos/posit-dev/py-shiny/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/posit-dev/py-shiny/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/posit-dev/py-shiny/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/posit-dev/py-shiny/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/posit-dev/py-shiny/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/posit-dev/py-shiny/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/posit-dev/py-shiny/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/posit-dev/py-shiny/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/posit-dev/py-shiny/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/posit-dev/py-shiny/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/posit-dev/py-shiny/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/posit-dev/py-shiny/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/posit-dev/py-shiny/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/posit-dev/py-shiny/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/posit-dev/py-shiny/merges\", #>     \"archive_url\": \"https://api.github.com/repos/posit-dev/py-shiny/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/posit-dev/py-shiny/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/posit-dev/py-shiny/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/posit-dev/py-shiny/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/posit-dev/py-shiny/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/posit-dev/py-shiny/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/posit-dev/py-shiny/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/posit-dev/py-shiny/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/posit-dev/py-shiny/deployments\", #>     \"created_at\": \"2021-07-27T20:19:49Z\", #>     \"updated_at\": \"2023-10-31T13:58:12Z\", #>     \"pushed_at\": \"2023-10-31T14:54:04Z\", #>     \"git_url\": \"git://github.com/posit-dev/py-shiny.git\", #>     \"ssh_url\": \"git@github.com:posit-dev/py-shiny.git\", #>     \"clone_url\": \"https://github.com/posit-dev/py-shiny.git\", #>     \"svn_url\": \"https://github.com/posit-dev/py-shiny\", #>     \"homepage\": \"https://shiny.posit.co/py/\", #>     \"size\": 14777, #>     \"stargazers_count\": 709, #>     \"watchers_count\": 709, #>     \"language\": \"Python\", #>     \"has_issues\": true, #>     \"has_projects\": true, #>     \"has_downloads\": true, #>     \"has_wiki\": true, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 40, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 227, #>     \"license\": { #>       \"key\": \"mit\", #>       \"name\": \"MIT License\", #>       \"spdx_id\": \"MIT\", #>       \"url\": \"https://api.github.com/licenses/mit\", #>       \"node_id\": \"MDc6TGljZW5zZTEz\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [], #>     \"visibility\": \"public\", #>     \"forks\": 40, #>     \"open_issues\": 227, #>     \"watchers\": 709, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   }, #>   { #>     \"id\": 10221246, #>     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMDIyMTI0Ng==\", #>     \"name\": \"bigrquery\", #>     \"full_name\": \"r-dbi/bigrquery\", #>     \"private\": false, #>     \"owner\": { #>       \"login\": \"r-dbi\", #>       \"id\": 5695665, #>       \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjU2OTU2NjU=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/5695665?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/r-dbi\", #>       \"html_url\": \"https://github.com/r-dbi\", #>       \"followers_url\": \"https://api.github.com/users/r-dbi/followers\", #>       \"following_url\": \"https://api.github.com/users/r-dbi/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/r-dbi/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/r-dbi/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/r-dbi/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/r-dbi/orgs\", #>       \"repos_url\": \"https://api.github.com/users/r-dbi/repos\", #>       \"events_url\": \"https://api.github.com/users/r-dbi/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/r-dbi/received_events\", #>       \"type\": \"Organization\", #>       \"site_admin\": false #>     }, #>     \"html_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"description\": \"An interface to Google's BigQuery from R.\", #>     \"fork\": false, #>     \"url\": \"https://api.github.com/repos/r-dbi/bigrquery\", #>     \"forks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/forks\", #>     \"keys_url\": \"https://api.github.com/repos/r-dbi/bigrquery/keys{/key_id}\", #>     \"collaborators_url\": \"https://api.github.com/repos/r-dbi/bigrquery/collaborators{/collaborator}\", #>     \"teams_url\": \"https://api.github.com/repos/r-dbi/bigrquery/teams\", #>     \"hooks_url\": \"https://api.github.com/repos/r-dbi/bigrquery/hooks\", #>     \"issue_events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/events{/number}\", #>     \"events_url\": \"https://api.github.com/repos/r-dbi/bigrquery/events\", #>     \"assignees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/assignees{/user}\", #>     \"branches_url\": \"https://api.github.com/repos/r-dbi/bigrquery/branches{/branch}\", #>     \"tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/tags\", #>     \"blobs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/blobs{/sha}\", #>     \"git_tags_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/tags{/sha}\", #>     \"git_refs_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/refs{/sha}\", #>     \"trees_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/trees{/sha}\", #>     \"statuses_url\": \"https://api.github.com/repos/r-dbi/bigrquery/statuses/{sha}\", #>     \"languages_url\": \"https://api.github.com/repos/r-dbi/bigrquery/languages\", #>     \"stargazers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/stargazers\", #>     \"contributors_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contributors\", #>     \"subscribers_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscribers\", #>     \"subscription_url\": \"https://api.github.com/repos/r-dbi/bigrquery/subscription\", #>     \"commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/commits{/sha}\", #>     \"git_commits_url\": \"https://api.github.com/repos/r-dbi/bigrquery/git/commits{/sha}\", #>     \"comments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/comments{/number}\", #>     \"issue_comment_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues/comments{/number}\", #>     \"contents_url\": \"https://api.github.com/repos/r-dbi/bigrquery/contents/{+path}\", #>     \"compare_url\": \"https://api.github.com/repos/r-dbi/bigrquery/compare/{base}...{head}\", #>     \"merges_url\": \"https://api.github.com/repos/r-dbi/bigrquery/merges\", #>     \"archive_url\": \"https://api.github.com/repos/r-dbi/bigrquery/{archive_format}{/ref}\", #>     \"downloads_url\": \"https://api.github.com/repos/r-dbi/bigrquery/downloads\", #>     \"issues_url\": \"https://api.github.com/repos/r-dbi/bigrquery/issues{/number}\", #>     \"pulls_url\": \"https://api.github.com/repos/r-dbi/bigrquery/pulls{/number}\", #>     \"milestones_url\": \"https://api.github.com/repos/r-dbi/bigrquery/milestones{/number}\", #>     \"notifications_url\": \"https://api.github.com/repos/r-dbi/bigrquery/notifications{?since,all,participating}\", #>     \"labels_url\": \"https://api.github.com/repos/r-dbi/bigrquery/labels{/name}\", #>     \"releases_url\": \"https://api.github.com/repos/r-dbi/bigrquery/releases{/id}\", #>     \"deployments_url\": \"https://api.github.com/repos/r-dbi/bigrquery/deployments\", #>     \"created_at\": \"2013-05-22T14:04:16Z\", #>     \"updated_at\": \"2023-10-24T11:51:15Z\", #>     \"pushed_at\": \"2023-10-25T22:57:28Z\", #>     \"git_url\": \"git://github.com/r-dbi/bigrquery.git\", #>     \"ssh_url\": \"git@github.com:r-dbi/bigrquery.git\", #>     \"clone_url\": \"https://github.com/r-dbi/bigrquery.git\", #>     \"svn_url\": \"https://github.com/r-dbi/bigrquery\", #>     \"homepage\": \"https://bigrquery.r-dbi.org\", #>     \"size\": 1768, #>     \"stargazers_count\": 496, #>     \"watchers_count\": 496, #>     \"language\": \"R\", #>     \"has_issues\": true, #>     \"has_projects\": false, #>     \"has_downloads\": true, #>     \"has_wiki\": false, #>     \"has_pages\": true, #>     \"has_discussions\": false, #>     \"forks_count\": 179, #>     \"mirror_url\": {}, #>     \"archived\": false, #>     \"disabled\": false, #>     \"open_issues_count\": 86, #>     \"license\": { #>       \"key\": \"gpl-3.0\", #>       \"name\": \"GNU General Public License v3.0\", #>       \"spdx_id\": \"GPL-3.0\", #>       \"url\": \"https://api.github.com/licenses/gpl-3.0\", #>       \"node_id\": \"MDc6TGljZW5zZTk=\" #>     }, #>     \"allow_forking\": true, #>     \"is_template\": false, #>     \"web_commit_signoff_required\": false, #>     \"topics\": [ #>       \"bigquery\", #>       \"database\", #>       \"r\" #>     ], #>     \"visibility\": \"public\", #>     \"forks\": 179, #>     \"open_issues\": 86, #>     \"watchers\": 496, #>     \"default_branch\": \"main\", #>     \"permissions\": { #>       \"admin\": false, #>       \"maintain\": false, #>       \"push\": false, #>       \"triage\": false, #>       \"pull\": false #>     } #>   } #> ]  if (FALSE) { ## Create a repository, needs a token in GITHUB_PAT (or GITHUB_TOKEN) ## environment variable gh(\"POST /user/repos\", name = \"foobar\") } ## Issues of a repository gh(\"/repos/hadley/dplyr/issues\") #> [ #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6947\", #>     \"id\": 1969070265, #>     \"node_id\": \"PR_kwDOAGIUpc5eKIPd\", #>     \"number\": 6947, #>     \"title\": \"Avoid triggering duckplyr's ALTREP row names\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-30T19:28:38Z\", #>     \"updated_at\": \"2023-10-30T21:38:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6947\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6947\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6947.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6947.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Closes https://github.com/tidyverse/dplyr/pull/6927 (alternative approach)\\r\\nPart of https://github.com/tidyverse/dplyr/issues/6525 (the other half was https://github.com/r-lib/vctrs/pull/1847)\\r\\n\\r\\nIn https://github.com/tidyverse/dplyr/issues/6525#issuecomment-1303619152, we discovered that one of the places that duckplyr's ALTREP row names are being triggered is in `attributes()`, called on the `template` argument of `dplyr_reconstruct()`. Calling `attributes()` will try and expand internally compact row names (i.e. `c(NA, -5)`) into an ALTREP integer sequence https://github.com/wch/r-source/blob/69b94f0c8ce9b2497f6d7a81922575f6c585b713/src/main/attrib.c#L176-L177. This avoids leaking this internal detail to most users. But this requires calling `INTEGER()` or `INTEGER_ELT()` on the row names object. For duckplyr's lazy queries, which don't know the resulting number of rows until it happens, that is enough to trigger the lazy query.\\r\\n\\r\\nWhile working on this, I also discovered that `attributes<-()` is also a problem. It also has special behavior where it tries to _create_ this internal compact row names representation during the setting process https://github.com/wch/r-source/blob/69b94f0c8ce9b2497f6d7a81922575f6c585b713/src/main/attrib.c#L57. Again, this requires looking at `INTEGER()`. So if `data` had duckplyr ALTREP row names, then it would trigger the query upon reconstruction too.\\r\\n\\r\\nI think the best solution for this is to come up with our own attribute getter / setter helpers that try and mimic most of what `do_attributes()` and `do_attributesgets()` do, but with special casing for row names. We could avoid the two helpers and just manipulate the underlying pairlists directly with a \\\"copy most attributes\\\" style helper, but I feel like we may need something like these helpers in the future, and it seemed a little cleaner to me to be able to expose these on the R side, as you get precise control over what \\\"most attributes\\\" means (here, everything but names and row names).\\r\\n\\r\\nUp until now, this has been managed in duckplyr itself, but we think it should live here so duckplyr can remove its C code.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6946\", #>     \"id\": 1966458349, #>     \"node_id\": \"I_kwDOAGIUpc51NcXt\", #>     \"number\": 6946, #>     \"title\": \"`slice_sample()` shows strange suggestion when called with namespace\", #>     \"user\": { #>       \"login\": \"psychelzh\", #>       \"id\": 13306020, #>       \"node_id\": \"MDQ6VXNlcjEzMzA2MDIw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/13306020?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/psychelzh\", #>       \"html_url\": \"https://github.com/psychelzh\", #>       \"followers_url\": \"https://api.github.com/users/psychelzh/followers\", #>       \"following_url\": \"https://api.github.com/users/psychelzh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/psychelzh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/psychelzh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/psychelzh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/psychelzh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/psychelzh/repos\", #>       \"events_url\": \"https://api.github.com/users/psychelzh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/psychelzh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-10-28T06:17:30Z\", #>     \"updated_at\": \"2023-10-28T06:21:17Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"The error is simple as the follow:\\r\\n\\r\\n``` r\\r\\ndplyr::slice_sample(data.frame(x = 1:100), 10)\\r\\n#> Error in `dplyr::slice_sample()`:\\r\\n#> ! `n` must be explicitly named.\\r\\n#> Did you mean `::(n = 10)`?\\r\\n#> Did you mean `dplyr(n = 10)`?\\r\\n#> Did you mean `slice_sample(n = 10)`?\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::slice_sample(data.frame(x = 1:100), 10)\\r\\n#>  2.   └─dplyr:::check_slice_unnamed_n_prop(..., n = n, prop = prop)\\r\\n#>  3.     └─rlang::abort(bullets, call = error_call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-28 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6945\", #>     \"id\": 1964318347, #>     \"node_id\": \"I_kwDOAGIUpc51FR6L\", #>     \"number\": 6945, #>     \"title\": \"`rename_with()` errors when no match/clarity of error message\", #>     \"user\": { #>       \"login\": \"asadow\", #>       \"id\": 40274818, #>       \"node_id\": \"MDQ6VXNlcjQwMjc0ODE4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40274818?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/asadow\", #>       \"html_url\": \"https://github.com/asadow\", #>       \"followers_url\": \"https://api.github.com/users/asadow/followers\", #>       \"following_url\": \"https://api.github.com/users/asadow/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/asadow/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/asadow/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/asadow/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/asadow/orgs\", #>       \"repos_url\": \"https://api.github.com/users/asadow/repos\", #>       \"events_url\": \"https://api.github.com/users/asadow/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/asadow/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-26T20:25:37Z\", #>     \"updated_at\": \"2023-10-26T20:25:37Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I thought I could use map over a list of data frames to rename them using `rename_with()` and a tidyselector like `matches()`, whether or not each data frame has a matching column name. Now it looks as though that is not longer possible (#6688). \\r\\n\\r\\nThat's all fine and good. Now I see I can just use `rename()`, which does not error. But I think the error for `rename_with()` could be more clear by saying that there is no match. \\r\\n\\r\\nLastly, I'm curious: why the difference in erroring vs. not between `rename()` and `rename_with()`?\\r\\n\\r\\n``` r\\r\\nlibrary(tidyverse)\\r\\n\\r\\n# No error\\r\\nmtcars |> rename(\\\"joe\\\" = matches(\\\"qwerty\\\")) |> head(1)\\r\\n#>           mpg cyl disp  hp drat   wt  qsec vs am gear carb\\r\\n#> Mazda RX4  21   6  160 110  3.9 2.62 16.46  0  1    4    4\\r\\n\\r\\n# Hinting error\\r\\nmtcars |> rename_with(~ \\\"joe\\\", qwerty)\\r\\n#> Error in `rename_with()`:\\r\\n#> ! Can't subset columns that don't exist.\\r\\n#> ✖ Column `qwerty` doesn't exist.\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::rename_with(mtcars, ~\\\"joe\\\", qwerty)\\r\\n#>   2. ├─dplyr:::rename_with.data.frame(mtcars, ~\\\"joe\\\", qwerty)\\r\\n#>   3. │ └─tidyselect::eval_select(enquo(.cols), .data, allow_rename = FALSE)\\r\\n#>   4. │   └─tidyselect:::eval_select_impl(...)\\r\\n#>   5. │     ├─tidyselect:::with_subscript_errors(...)\\r\\n#>   6. │     │ └─rlang::try_fetch(...)\\r\\n#>   7. │     │   └─base::withCallingHandlers(...)\\r\\n#>   8. │     └─tidyselect:::vars_select_eval(...)\\r\\n#>   9. │       └─tidyselect:::walk_data_tree(expr, data_mask, context_mask)\\r\\n#>  10. │         └─tidyselect:::as_indices_sel_impl(...)\\r\\n#>  11. │           └─tidyselect:::as_indices_impl(...)\\r\\n#>  12. │             └─tidyselect:::chr_as_locations(x, vars, call = call, arg = arg)\\r\\n#>  13. │               └─vctrs::vec_as_location(...)\\r\\n#>  14. └─vctrs (local) `<fn>`()\\r\\n#>  15.   └─vctrs:::stop_subscript_oob(...)\\r\\n#>  16.     └─vctrs:::stop_subscript(...)\\r\\n#>  17.       └─rlang::abort(...)\\r\\n\\r\\n# Less helpful error\\r\\nmtcars |> rename_with(~ \\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#> Error in `rename_with()`:\\r\\n#> ! `.fn` must return a vector of length 0, not 1.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. ├─dplyr::rename_with(mtcars, ~\\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#>  2. └─dplyr:::rename_with.data.frame(mtcars, ~\\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#>  3.   └─cli::cli_abort(\\\"{.arg .fn} must return a vector of length {length(sel)}, not {length(new)}.\\\")\\r\\n#>  4.     └─rlang::abort(...)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-26 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6943\", #>     \"id\": 1961317705, #>     \"node_id\": \"I_kwDOAGIUpc5051VJ\", #>     \"number\": 6943, #>     \"title\": \"condition handling ignores locally set options\", #>     \"user\": { #>       \"login\": \"moodymudskipper\", #>       \"id\": 18351714, #>       \"node_id\": \"MDQ6VXNlcjE4MzUxNzE0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18351714?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/moodymudskipper\", #>       \"html_url\": \"https://github.com/moodymudskipper\", #>       \"followers_url\": \"https://api.github.com/users/moodymudskipper/followers\", #>       \"following_url\": \"https://api.github.com/users/moodymudskipper/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/moodymudskipper/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/moodymudskipper/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/moodymudskipper/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/moodymudskipper/orgs\", #>       \"repos_url\": \"https://api.github.com/users/moodymudskipper/repos\", #>       \"events_url\": \"https://api.github.com/users/moodymudskipper/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/moodymudskipper/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-25T12:33:55Z\", #>     \"updated_at\": \"2023-10-25T12:33:55Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Maybe because of a delayed evaluation issue ?\\r\\n\\r\\n``` r\\r\\nbugged <- function() {\\r\\n  withr::local_options(warn = 2)\\r\\n  rlang::warn(\\\"oops\\\") # or warning(\\\"oops\\\")\\r\\n  24\\r\\n}\\r\\n\\r\\n# as expected\\r\\n\\r\\nbugged()\\r\\n#> Error: (converted from warning) oops\\r\\nsubset(cars, speed == bugged())\\r\\n#> Error: (converted from warning) oops\\r\\n\\r\\n# unexpected\\r\\n\\r\\ndplyr::filter(cars, speed == bugged())\\r\\n#> Warning: There was 1 warning in `dplyr::filter()`.\\r\\n#> ℹ In argument: `speed == bugged()`.\\r\\n#> Caused by warning:\\r\\n#> ! oops\\r\\n#>   speed dist\\r\\n#> 1    24   70\\r\\n#> 2    24   92\\r\\n#> 3    24   93\\r\\n#> 4    24  120\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-25 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6942\", #>     \"id\": 1951021595, #>     \"node_id\": \"PR_kwDOAGIUpc5dNZSf\", #>     \"number\": 6942, #>     \"title\": \"Uptaded documentation on rows_append and rows_insert, issue #6864\", #>     \"user\": { #>       \"login\": \"hsalberti\", #>       \"id\": 76076260, #>       \"node_id\": \"MDQ6VXNlcjc2MDc2MjYw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/76076260?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hsalberti\", #>       \"html_url\": \"https://github.com/hsalberti\", #>       \"followers_url\": \"https://api.github.com/users/hsalberti/followers\", #>       \"following_url\": \"https://api.github.com/users/hsalberti/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hsalberti/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hsalberti/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hsalberti/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hsalberti/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hsalberti/repos\", #>       \"events_url\": \"https://api.github.com/users/hsalberti/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hsalberti/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-19T01:34:19Z\", #>     \"updated_at\": \"2023-10-19T01:34:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6942\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6942\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6942.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6942.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"https://github.com/tidyverse/dplyr/issues/6864\\r\\nSolved this issue! Looking forward for a response\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6940\", #>     \"id\": 1940781206, #>     \"node_id\": \"I_kwDOAGIUpc5zrfiW\", #>     \"number\": 6940, #>     \"title\": \"`arrange()` not warning on `!!` like `all_of()`\", #>     \"user\": { #>       \"login\": \"asadow\", #>       \"id\": 40274818, #>       \"node_id\": \"MDQ6VXNlcjQwMjc0ODE4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40274818?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/asadow\", #>       \"html_url\": \"https://github.com/asadow\", #>       \"followers_url\": \"https://api.github.com/users/asadow/followers\", #>       \"following_url\": \"https://api.github.com/users/asadow/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/asadow/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/asadow/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/asadow/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/asadow/orgs\", #>       \"repos_url\": \"https://api.github.com/users/asadow/repos\", #>       \"events_url\": \"https://api.github.com/users/asadow/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/asadow/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-10-12T20:56:00Z\", #>     \"updated_at\": \"2023-10-26T09:52:15Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"`!!` inside `arrange()` is not warning like `all_of()`\\r\\n\\r\\nAside: I was surprised to see the lack of tidyselect for `arrange()`. Is the reason documented somewhere? It is not in [the tidyselect 1.2.0 blog post](https://www.tidyverse.org/blog/2022/10/tidyselect-1-2-0/).\\r\\n\\r\\n``` r\\r\\nlibrary(tidyverse)\\r\\ndf <- tibble(x = 2:1)\\r\\nw <- \\\"x\\\"\\r\\ndf |> arrange(.data[[w]])\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     1\\r\\n#> 2     2\\r\\ndf |> arrange(!!w)\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     2\\r\\n#> 2     1\\r\\ndf |> arrange(all_of(w))\\r\\n#> Warning: There was 1 warning in `arrange()`.\\r\\n#> ℹ In argument: `..1 = all_of(w)`.\\r\\n#> Caused by warning:\\r\\n#> ! Using `all_of()` outside of a selecting function was deprecated in tidyselect\\r\\n#>   1.2.0.\\r\\n#> ℹ See details at\\r\\n#>   <https://tidyselect.r-lib.org/reference/faq-selection-context.html>\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     2\\r\\n#> 2     1\\r\\ndf |> arrange(!!.env$w)\\r\\n#> Error in eval(expr, envir, enclos): object '.env' not found\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-12 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6939\", #>     \"id\": 1935721054, #>     \"node_id\": \"I_kwDOAGIUpc5zYMJe\", #>     \"number\": 6939, #>     \"title\": \"`Error in vapply(.x, .f, .mold, ..., USE.NAMES = FALSE)`: cli_warn together with dplyr grouping results in error.\", #>     \"user\": { #>       \"login\": \"lschneiderbauer\", #>       \"id\": 422100, #>       \"node_id\": \"MDQ6VXNlcjQyMjEwMA==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/422100?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/lschneiderbauer\", #>       \"html_url\": \"https://github.com/lschneiderbauer\", #>       \"followers_url\": \"https://api.github.com/users/lschneiderbauer/followers\", #>       \"following_url\": \"https://api.github.com/users/lschneiderbauer/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/lschneiderbauer/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/lschneiderbauer/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/lschneiderbauer/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/lschneiderbauer/orgs\", #>       \"repos_url\": \"https://api.github.com/users/lschneiderbauer/repos\", #>       \"events_url\": \"https://api.github.com/users/lschneiderbauer/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/lschneiderbauer/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-10T16:09:09Z\", #>     \"updated_at\": \"2023-10-10T16:09:09Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Hi,\\r\\n\\r\\nit took me a while to get to this (very artificial) reduced example, but I managed to get it: For some reason, using `cli::warn()` inside a nested and grouped mutate function results in the described error.\\r\\n\\r\\nRemoving `cli_warn()` also removes the error and results in a sane answer.\\r\\n\\r\\nI am using R 4.2.1, with dplyr 1.1.3 and cli 3.6.1.\\r\\n\\r\\n---\\r\\n\\r\\nBrief description of the problem\\r\\n\\r\\n``` r\\r\\nlibrary(cli)\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attache Paket: 'dplyr'\\r\\n#> Die folgenden Objekte sind maskiert von 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> Die folgenden Objekte sind maskiert von 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\nsome_warning <- function() {\\r\\n  cli::cli_warn(\\\"some warning\\\")\\r\\n  return(1)\\r\\n}\\r\\n\\r\\ncreate_new_col <- function() {\\r\\n  tibble(col = TRUE) |>\\r\\n    mutate(\\r\\n      new_col = some_warning(),\\r\\n      .by = col\\r\\n    ) |>\\r\\n    pull(new_col)\\r\\n}\\r\\n\\r\\ntibble(group = TRUE) |>\\r\\n  mutate(new_col = create_new_col(), .by = group)\\r\\n#> Error in vapply(.x, .f, .mold, ..., USE.NAMES = FALSE): Werte müssen die Länge 1 haben,\\r\\n#> Ergebnis von FUN(X[[1]]) hat aber Länge 0\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-10 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6938\", #>     \"id\": 1931984400, #>     \"node_id\": \"PR_kwDOAGIUpc5cM9Bz\", #>     \"number\": 6938, #>     \"title\": \"`starwars` data - Replace defunct API\", #>     \"user\": { #>       \"login\": \"steveharoz\", #>       \"id\": 2257540, #>       \"node_id\": \"MDQ6VXNlcjIyNTc1NDA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2257540?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/steveharoz\", #>       \"html_url\": \"https://github.com/steveharoz\", #>       \"followers_url\": \"https://api.github.com/users/steveharoz/followers\", #>       \"following_url\": \"https://api.github.com/users/steveharoz/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/steveharoz/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/steveharoz/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/steveharoz/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/steveharoz/orgs\", #>       \"repos_url\": \"https://api.github.com/users/steveharoz/repos\", #>       \"events_url\": \"https://api.github.com/users/steveharoz/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/steveharoz/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-08T18:17:10Z\", #>     \"updated_at\": \"2023-10-15T07:22:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6938\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6938\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6938.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6938.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"1. The API used to generate the `starwars` data is no longer operational. I found 2 possible replacements (https://swapi.dev/about and https://swapi.py4e.com/about). The py4e site was more complete, so I used that one.\\r\\n2. A typo was pointed out in #6840. The issue was fixed in swapi.dev but not in swapi.py4e.com, so I just fixed it myself in the code.\\r\\n3. One character's details (Jek Tono Porkins) were missing from the new API, so I added them in code using the old data.\\r\\n4. The order of the films was arbitrary in the old API. The new API sorts it by release date. (This is the bulk of the diff)\\r\\n5. There are only very minor changes to the other data coming from the new API. So there shouldn't be much impact.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6937\", #>     \"id\": 1931463299, #>     \"node_id\": \"PR_kwDOAGIUpc5cLR4K\", #>     \"number\": 6937, #>     \"title\": \"Update `storms` data through 2022\", #>     \"user\": { #>       \"login\": \"steveharoz\", #>       \"id\": 2257540, #>       \"node_id\": \"MDQ6VXNlcjIyNTc1NDA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2257540?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/steveharoz\", #>       \"html_url\": \"https://github.com/steveharoz\", #>       \"followers_url\": \"https://api.github.com/users/steveharoz/followers\", #>       \"following_url\": \"https://api.github.com/users/steveharoz/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/steveharoz/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/steveharoz/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/steveharoz/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/steveharoz/orgs\", #>       \"repos_url\": \"https://api.github.com/users/steveharoz/repos\", #>       \"events_url\": \"https://api.github.com/users/steveharoz/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/steveharoz/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-07T18:52:24Z\", #>     \"updated_at\": \"2023-10-07T18:52:24Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6937\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6937\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6937.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6937.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"The data for 2022 was added by NOAA a few months ago. This PR just adds the new data by updating the source and running `data-row/storms.R`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6934\", #>     \"id\": 1922262606, #>     \"node_id\": \"I_kwDOAGIUpc5yk2ZO\", #>     \"number\": 6934, #>     \"title\": \"When `.unpack = TRUE`, `.names` should delay its column name uniqueness check\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 3407329987, #>         \"node_id\": \"LA_kwDOAGIUpc7LF7rD\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/columns%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"columns ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on columns: mutate(), select(),  rename(), relocate()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-02T16:38:23Z\", #>     \"updated_at\": \"2023-10-02T16:38:23Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Extracted from https://github.com/tidyverse/dplyr/issues/6933\\r\\n\\r\\nSometimes the function you apply in `across()` returns a tibble who's column names already uniquely identify that function (`TTR::TDI()` or `TTR::MACD()`), so you don't need to name the `list()` as that would be repetitive, and you don't need the `_1` or `_2` you get automatically.\\r\\n\\r\\nIt would be nice if you could set `.names = \\\"{.col}_\\\"` when `.unpack = TRUE` to handle this special case, but that runs the name uniqueness check too early. It creates two names called `var1_`, which do eventually get resolved _after_ the unpacking is done, and a second name uniqueness check is already done in `df_unpack()`, so I think we can skip the ones in `across_setup()` when `.unpack = TRUE`.\\r\\n\\r\\nEasiest way to do this is the probably give `across_setup()` a `name_repair` argument that we can set to `\\\"minimal\\\"` when `.unpack = TRUE`.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble(\\r\\n  var1 = seq(1, 100, 1)\\r\\n)\\r\\n\\r\\nmetric_a <- function(x) {\\r\\n  tibble::tibble(a = x, a_info = x + 1)\\r\\n}\\r\\nmetric_b <- function(x) {\\r\\n  tibble::tibble(b = x, b_info = x + 1)\\r\\n}\\r\\n\\r\\n# dont need 1 and 2 here\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      \\\\(.x) metric_a(.x),\\r\\n      \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> # A tibble: 100 × 5\\r\\n#>     var1 var1_1_a var1_1_a_info var1_2_b var1_2_b_info\\r\\n#>    <dbl>    <dbl>         <dbl>    <dbl>         <dbl>\\r\\n#>  1     1        1             2        1             2\\r\\n#>  2     2        2             3        2             3\\r\\n#>  3     3        3             4        3             4\\r\\n#>  4     4        4             5        4             5\\r\\n#>  5     5        5             6        5             6\\r\\n#>  6     6        6             7        6             7\\r\\n#>  7     7        7             8        7             8\\r\\n#>  8     8        8             9        8             9\\r\\n#>  9     9        9            10        9            10\\r\\n#> 10    10       10            11       10            11\\r\\n#> # ℹ 90 more rows\\r\\n\\r\\n# this is also repetitive\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      a = \\\\(.x) metric_a(.x),\\r\\n      b = \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> # A tibble: 100 × 5\\r\\n#>     var1 var1_a_a var1_a_a_info var1_b_b var1_b_b_info\\r\\n#>    <dbl>    <dbl>         <dbl>    <dbl>         <dbl>\\r\\n#>  1     1        1             2        1             2\\r\\n#>  2     2        2             3        2             3\\r\\n#>  3     3        3             4        3             4\\r\\n#>  4     4        4             5        4             5\\r\\n#>  5     5        5             6        5             6\\r\\n#>  6     6        6             7        6             7\\r\\n#>  7     7        7             8        7             8\\r\\n#>  8     8        8             9        8             9\\r\\n#>  9     9        9            10        9            10\\r\\n#> 10    10       10            11       10            11\\r\\n#> # ℹ 90 more rows\\r\\n\\r\\n# ideally:\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      a = \\\\(.x) metric_a(.x),\\r\\n      b = \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .names = \\\"{.col}_\\\",\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(...)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Names must be unique.\\r\\n#> ✖ These names are duplicated:\\r\\n#>   * \\\"var1_\\\" at locations 1 and 2.\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::mutate(...)\\r\\n#>   2. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   3. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   4. │   ├─base::withCallingHandlers(...)\\r\\n#>   5. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   6. │     └─mask$eval_all_mutate(quo)\\r\\n#>   7. │       └─dplyr (local) eval()\\r\\n#>   8. └─dplyr::across(...)\\r\\n#>   9.   └─dplyr:::across_setup(...)\\r\\n#>  10.     └─vctrs::vec_as_names(...)\\r\\n#>  11.       └─vctrs (local) `<fn>`()\\r\\n#>  12.         └─vctrs:::validate_unique(names = names, arg = arg, call = call)\\r\\n#>  13.           └─vctrs:::stop_names_must_be_unique(names, arg, call = call)\\r\\n#>  14.             └─vctrs:::stop_names(...)\\r\\n#>  15.               └─vctrs:::stop_vctrs(...)\\r\\n#>  16.                 └─rlang::abort(message, class = c(class, \\\"vctrs_error\\\"), ..., call = call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-02 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6931\", #>     \"id\": 1908806733, #>     \"node_id\": \"I_kwDOAGIUpc5xxhRN\", #>     \"number\": 6931, #>     \"title\": \"`.data` does not work properly in case data is stored in a nested column\", #>     \"user\": { #>       \"login\": \"psychelzh\", #>       \"id\": 13306020, #>       \"node_id\": \"MDQ6VXNlcjEzMzA2MDIw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/13306020?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/psychelzh\", #>       \"html_url\": \"https://github.com/psychelzh\", #>       \"followers_url\": \"https://api.github.com/users/psychelzh/followers\", #>       \"following_url\": \"https://api.github.com/users/psychelzh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/psychelzh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/psychelzh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/psychelzh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/psychelzh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/psychelzh/repos\", #>       \"events_url\": \"https://api.github.com/users/psychelzh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/psychelzh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-22T12:21:26Z\", #>     \"updated_at\": \"2023-09-22T12:22:11Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Please briefly describe your problem and what output you expect. If you have a question, please don't use this form. Instead, ask on <https://stackoverflow.com/> or <https://community.rstudio.com/>.\\r\\n\\r\\nPlease include a minimal reproducible example (AKA a reprex). If you've never heard of a [reprex](http://reprex.tidyverse.org/) before, start by reading <https://www.tidyverse.org/help/#reprex>.\\r\\n\\r\\n---\\r\\n\\r\\nHere my data is nested in one column called `dat`, then `.data` cannot detect a column with string, but `pick()` works as expect.\\r\\n\\r\\n``` r\\r\\nsuppressPackageStartupMessages(library(dplyr))\\r\\nlibrary(purrr)\\r\\ntest <- tibble::tribble(\\r\\n  ~target, ~dat,\\r\\n  \\\"x\\\", data.frame(id = 1:5, x = 1:5)\\r\\n) \\r\\ntest |> \\r\\n  mutate(\\r\\n    map2(\\r\\n      target, dat,\\r\\n      \\\\(target, dat) {\\r\\n        dat |> \\r\\n          mutate(y = .data[[target]])\\r\\n      }\\r\\n    )\\r\\n  )\\r\\n#> Error in eval(expr, envir, enclos): 找不到对象'target'\\r\\ntest |> \\r\\n  mutate(\\r\\n    map2(\\r\\n      target, dat,\\r\\n      \\\\(target, dat) {\\r\\n        dat |> \\r\\n          mutate(y = pick(all_of(target)))\\r\\n      }\\r\\n    )\\r\\n  )\\r\\n#> # A tibble: 1 × 3\\r\\n#>   target dat          `map2(...)` \\r\\n#>   <chr>  <list>       <list>      \\r\\n#> 1 x      <df [5 × 2]> <df [5 × 3]>\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-09-22 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6927\", #>     \"id\": 1888862482, #>     \"node_id\": \"PR_kwDOAGIUpc5Z8GJ9\", #>     \"number\": 6927, #>     \"title\": \"Implement reconstruct in C++\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-09T20:14:24Z\", #>     \"updated_at\": \"2023-09-10T18:13:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6927\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6927\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6927.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6927.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"This would allow duckplyr to remove all of its C code. Running revdepchecks now.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6925\", #>     \"id\": 1882664531, #>     \"node_id\": \"I_kwDOAGIUpc5wNy5T\", #>     \"number\": 6925, #>     \"title\": \"add_row weirdness\", #>     \"user\": { #>       \"login\": \"ggrothendieck\", #>       \"id\": 7840510, #>       \"node_id\": \"MDQ6VXNlcjc4NDA1MTA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/7840510?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/ggrothendieck\", #>       \"html_url\": \"https://github.com/ggrothendieck\", #>       \"followers_url\": \"https://api.github.com/users/ggrothendieck/followers\", #>       \"following_url\": \"https://api.github.com/users/ggrothendieck/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/ggrothendieck/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/ggrothendieck/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/ggrothendieck/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/ggrothendieck/orgs\", #>       \"repos_url\": \"https://api.github.com/users/ggrothendieck/repos\", #>       \"events_url\": \"https://api.github.com/users/ggrothendieck/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/ggrothendieck/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-09-05T20:21:47Z\", #>     \"updated_at\": \"2023-10-25T12:54:45Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"After much experimenting I found that the first pipeline worked to add a row with the sum of the D and E rows. I would have thought one could replace `DE` with the expression to calculate it as in the second pipeline (which gives the wrong answer) and not use `reframe` (which gives an error).\\r\\n\\r\\n```\\r\\nlibrary(dplyr)\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n## [1] ‘1.1.3’\\r\\n\\r\\ndata2 <- tibble(value = head(LETTERS, 5), # A to E\\r\\n   Q1 = rep(20, 5L),\\r\\n   Q2 = c(0, 40, 40, 20, 0),\\r\\n   Q3 = c(0, 40, 20, 0, 40))\\r\\n \\r\\n# 1. works\\r\\ndata2 %>%\\r\\n  mutate(DE = value %in% c(\\\"D\\\", \\\"E\\\")) %>%\\r\\n  reframe(add_row(., value = \\\"DE\\\", across(-1, ~ sum(DE * .x)))) %>%\\r\\n  select(-DE)\\r\\n# A tibble: 6 × 4\\r\\n  value    Q1    Q2    Q3\\r\\n  <chr> <dbl> <dbl> <dbl>\\r\\n1 A        20     0     0\\r\\n2 B        20    40    40\\r\\n3 C        20    40    20\\r\\n4 D        20    20     0\\r\\n5 E        20     0    40\\r\\n6 DE       40    20    40\\r\\n \\r\\n# 2. replacing DE w expr to calc it gives wrong ans\\r\\ndata2 %>%\\r\\n   reframe(add_row(., value = \\\"DE\\\", across(-1, ~ sum((value %in% c(\\\"D\\\", \\\"E\\\")) * .x))))\\r\\n## # A tibble: 6 × 4\\r\\n##   value    Q1    Q2    Q3\\r\\n##   <chr> <dbl> <dbl> <dbl>\\r\\n## 1 A        20     0     0\\r\\n## 2 B        20    40    40\\r\\n## 3 C        20    40    20\\r\\n## 4 D        20    20     0\\r\\n## 5 E        20     0    40\\r\\n## 6 DE        0     0     0\\r\\n \\r\\n# 3. removing reframe fails w error\\r\\ndata2 %>%\\r\\n   mutate(DE = value %in% c(\\\"D\\\", \\\"E\\\")) %>%\\r\\n   add_row(value = \\\"DE\\\", across(-1, ~ sum(DE * .x))) %>%\\r\\n   select(-DE)\\r\\n## Error in `across()`:\\r\\n## ! Must only be used inside data-masking verbs like `mutate()`, `filter()`, and `group_by()`.\\r\\n## Run `rlang::last_trace()` to see where the error occurred.\\r\\n```\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6924\", #>     \"id\": 1881336065, #>     \"node_id\": \"I_kwDOAGIUpc5wIukB\", #>     \"number\": 6924, #>     \"title\": \"dplyr::distinct doesn't match identical strings with different encoding\", #>     \"user\": { #>       \"login\": \"williamlai2\", #>       \"id\": 44103957, #>       \"node_id\": \"MDQ6VXNlcjQ0MTAzOTU3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/44103957?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/williamlai2\", #>       \"html_url\": \"https://github.com/williamlai2\", #>       \"followers_url\": \"https://api.github.com/users/williamlai2/followers\", #>       \"following_url\": \"https://api.github.com/users/williamlai2/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/williamlai2/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/williamlai2/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/williamlai2/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/williamlai2/orgs\", #>       \"repos_url\": \"https://api.github.com/users/williamlai2/repos\", #>       \"events_url\": \"https://api.github.com/users/williamlai2/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/williamlai2/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-09-05T07:03:51Z\", #>     \"updated_at\": \"2023-09-17T23:32:57Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Similar to #1179 with test from https://github.com/tidyverse/dplyr/commit/61b04c752d38e3d2bb24560e2b0c6d2d31a00199\\r\\n\\r\\nFrom my data:\\r\\n```\\r\\na <- tibble::tribble(\\r\\n  ~REPORT_RESULT_UNIT,\\r\\n              \\\"µS/cm\\\",\\r\\n               \\\"mg/L\\\",\\r\\n               \\\"µg/L\\\",\\r\\n                 \\\"su\\\",\\r\\n                \\\"ntu\\\",\\r\\n           \\\"µmhos/cm\\\",\\r\\n           \\\"µmhos/cm\\\",\\r\\n               \\\"pg/L\\\",\\r\\n                 \\\"mV\\\",\\r\\n            \\\"Celsius\\\",\\r\\n               \\\"ng/L\\\",\\r\\n              \\\"µS/cm\\\"\\r\\n  )\\r\\n```\\r\\n\\r\\nWith this encoding:\\r\\n```\\r\\n> Encoding(a$REPORT_RESULT_UNIT[1])\\r\\n[1] \\\"latin1\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[12])\\r\\n[1] \\\"UTF-8\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[6])\\r\\n[1] \\\"UTF-8\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[7])\\r\\n[1] \\\"UTF-8\\\"\\r\\n\\r\\n```\\r\\n\\r\\nThen:\\r\\n```\\r\\na %>% \\r\\n  distinct(REPORT_RESULT_UNIT) \\r\\n\\r\\n\\r\\n# # A tibble: 12 x 1\\r\\n# REPORT_RESULT_UNIT\\r\\n# <chr>             \\r\\n# 1 µS/cm             \\r\\n# 2 mg/L              \\r\\n# 3 µg/L              \\r\\n# 4 su                \\r\\n# 5 ntu               \\r\\n# 6 µmhos/cm          \\r\\n# 7 µmhos/cm          \\r\\n# 8 pg/L              \\r\\n# 9 mV                \\r\\n# 10 Celsius           \\r\\n# 11 ng/L              \\r\\n# 12 µS/cm     \\r\\n```\\r\\n\\r\\n```\\r\\n> sessionInfo()\\r\\nR version 4.1.2 (2021-11-01)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows 10 x64 (build 19045)\\r\\n\\r\\nMatrix products: default\\r\\n\\r\\nlocale:\\r\\n[1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252    LC_MONETARY=English_Australia.1252 LC_NUMERIC=C                      \\r\\n[5] LC_TIME=English_Australia.1252    \\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n\\r\\nother attached packages:\\r\\n[1] dplyr_1.0.9    testthat_3.1.4\\r\\n```\\r\\n\\r\\nI note that this fails:\\r\\n```\\r\\nlibrary(testthat)\\r\\nlibrary(dplyr)\\r\\n\\r\\ntest_that(\\\"distinct respects encodings (#1179)\\\", {\\r\\n  x <- c(\\\"Montr\\\\u00e9al\\\", \\\"Montr\\\\u00e9al\\\")\\r\\n  Encoding(x[2]) <- \\\"\\\"\\r\\n  df <- data.frame(x=x)\\r\\n  expect_equal( nrow(distinct(df)), 1L )\\r\\n})\\r\\n```\\r\\n\\r\\n```\\r\\n-- Failure (Line 5): distinct respects encodings (#1179) -----------------------\\r\\nnrow(distinct(df)) not equal to 1L.\\r\\n1/1 mismatches\\r\\n[1] 2 - 1 == 1\\r\\n\\r\\nError in reporter$stop_if_needed() : Test failed\\r\\n```\\r\\n\\r\\nThough when I try it with my data it is fine\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6923\", #>     \"id\": 1879065733, #>     \"node_id\": \"PR_kwDOAGIUpc5Za_p5\", #>     \"number\": 6923, #>     \"title\": \"Update r4ds url\", #>     \"user\": { #>       \"login\": \"zekiakyol\", #>       \"id\": 40212849, #>       \"node_id\": \"MDQ6VXNlcjQwMjEyODQ5\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40212849?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/zekiakyol\", #>       \"html_url\": \"https://github.com/zekiakyol\", #>       \"followers_url\": \"https://api.github.com/users/zekiakyol/followers\", #>       \"following_url\": \"https://api.github.com/users/zekiakyol/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/zekiakyol/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/zekiakyol/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/zekiakyol/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/zekiakyol/orgs\", #>       \"repos_url\": \"https://api.github.com/users/zekiakyol/repos\", #>       \"events_url\": \"https://api.github.com/users/zekiakyol/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/zekiakyol/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-03T11:49:35Z\", #>     \"updated_at\": \"2023-09-15T10:50:31Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6923\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6923\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6923.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6923.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"- This pull request updates r4ds(<https://r4ds.had.co.nz/>) to r4ds 2e (https://r4ds.hadley.nz/) on the package website.\\r\\n- **README.md** is updated by running `devtools::build_readme()`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6921\", #>     \"id\": 1874567994, #>     \"node_id\": \"I_kwDOAGIUpc5vu6M6\", #>     \"number\": 6921, #>     \"title\": \"bug in `dplyr::near`?\", #>     \"user\": { #>       \"login\": \"kaz462\", #>       \"id\": 47867131, #>       \"node_id\": \"MDQ6VXNlcjQ3ODY3MTMx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/47867131?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/kaz462\", #>       \"html_url\": \"https://github.com/kaz462\", #>       \"followers_url\": \"https://api.github.com/users/kaz462/followers\", #>       \"following_url\": \"https://api.github.com/users/kaz462/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/kaz462/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/kaz462/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/kaz462/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/kaz462/orgs\", #>       \"repos_url\": \"https://api.github.com/users/kaz462/repos\", #>       \"events_url\": \"https://api.github.com/users/kaz462/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/kaz462/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 6, #>     \"created_at\": \"2023-08-31T00:49:25Z\", #>     \"updated_at\": \"2023-10-21T09:49:38Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Is the following example a bug in `near`?\\r\\n```r\\r\\n> near(1.1 * 100 * 10^200, 110 * 10^200)\\r\\n[1] FALSE\\r\\n```\\r\\n_Originally posted by @bundfussr in https://github.com/pharmaverse/admiral/issues/2060#issuecomment-1691876301_\\r\\n\\r\\nThe same example works as expected with `base::all.equal()`\\r\\n```r\\r\\n> all.equal(1.1 * 100 * 10^200, 110 * 10^200)\\r\\n[1] TRUE\\r\\n```       \", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6917\", #>     \"id\": 1862427308, #>     \"node_id\": \"I_kwDOAGIUpc5vAmKs\", #>     \"number\": 6917, #>     \"title\": \"Add natural sort option to `arrange()`\", #>     \"user\": { #>       \"login\": \"bounlu\", #>       \"id\": 17899927, #>       \"node_id\": \"MDQ6VXNlcjE3ODk5OTI3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/17899927?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/bounlu\", #>       \"html_url\": \"https://github.com/bounlu\", #>       \"followers_url\": \"https://api.github.com/users/bounlu/followers\", #>       \"following_url\": \"https://api.github.com/users/bounlu/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/bounlu/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/bounlu/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/bounlu/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/bounlu/orgs\", #>       \"repos_url\": \"https://api.github.com/users/bounlu/repos\", #>       \"events_url\": \"https://api.github.com/users/bounlu/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/bounlu/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-08-23T01:57:49Z\", #>     \"updated_at\": \"2023-08-23T13:16:51Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Currently there is no option for `arrange()` to mimic the natural/human sorting of columns containing alphanumerical characters. In Bash, this can be achieved by `sort -V`. Please add this feature to `arrange()`.\\r\\n\\r\\n```\\r\\ndf %>% arrange(Sample)\\r\\n\\r\\nSample\\r\\nS10a\\r\\nS10b\\r\\nS11a\\r\\nS11b\\r\\nS12a\\r\\nS12b\\r\\nS13a\\r\\nS13b\\r\\nS14a\\r\\nS14b\\r\\nS15a\\r\\nS15b\\r\\nS16\\r\\nS17\\r\\nS18\\r\\nS19\\r\\nS1a\\r\\nS1b\\r\\nS2a\\r\\nS2b\\r\\nS3a\\r\\nS3b\\r\\nS4a\\r\\nS4b\\r\\nS5a\\r\\nS5b\\r\\nS6a\\r\\nS6b\\r\\nS7a\\r\\nS7b\\r\\nS8\\r\\nS9\\r\\n```\\r\\n\\r\\nIn Bash, we can sort the same column with `sort -V`:\\r\\n\\r\\n```\\r\\n$ sort -V Sample\\r\\nS1a\\r\\nS1b\\r\\nS2a\\r\\nS2b\\r\\nS3a\\r\\nS3b\\r\\nS4a\\r\\nS4b\\r\\nS5a\\r\\nS5b\\r\\nS6a\\r\\nS6b\\r\\nS7a\\r\\nS7b\\r\\nS8\\r\\nS9\\r\\nS10a\\r\\nS10b\\r\\nS11a\\r\\nS11b\\r\\nS12a\\r\\nS12b\\r\\nS13a\\r\\nS13b\\r\\nS14a\\r\\nS14b\\r\\nS15a\\r\\nS15b\\r\\nS16\\r\\nS17\\r\\nS18\\r\\nS19\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6915\", #>     \"id\": 1858206506, #>     \"node_id\": \"I_kwDOAGIUpc5uwfsq\", #>     \"number\": 6915, #>     \"title\": \"FR: `rows_clean()`?\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-20T17:27:26Z\", #>     \"updated_at\": \"2023-08-20T17:27:26Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Do we want to add a function that clears all rows to the `rows_*()` family? For data frames, this is `df[0, ]`, but this will be useful for databases and `in_place = TRUE` .\\r\\n\\r\\nDownstream: https://github.com/cynkra/dm/issues/851.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6913\", #>     \"id\": 1850514467, #>     \"node_id\": \"I_kwDOAGIUpc5uTJwj\", #>     \"number\": 6913, #>     \"title\": \"When a data frame has an \\\"n\\\" column, sometime count() automatically uses it to weight counts, other times it does not\", #>     \"user\": { #>       \"login\": \"zshipstead\", #>       \"id\": 95093393, #>       \"node_id\": \"U_kgDOBasCkQ\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/95093393?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/zshipstead\", #>       \"html_url\": \"https://github.com/zshipstead\", #>       \"followers_url\": \"https://api.github.com/users/zshipstead/followers\", #>       \"following_url\": \"https://api.github.com/users/zshipstead/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/zshipstead/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/zshipstead/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/zshipstead/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/zshipstead/orgs\", #>       \"repos_url\": \"https://api.github.com/users/zshipstead/repos\", #>       \"events_url\": \"https://api.github.com/users/zshipstead/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/zshipstead/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-14T20:46:01Z\", #>     \"updated_at\": \"2023-08-14T20:46:01Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I have a data frame that has a column with n. Vars are\\r\\n\\r\\nIdentifier\\r\\nGroupName\\r\\nn (which was a count used to determine group name)\\r\\n\\r\\nI have the same line of code that I run, so it is not a matter of me typing differently. I want to count the group name\\r\\n\\r\\ndata %>% count(GroupName) %>% distinct()\\r\\n\\r\\nSometimes when I run this code, it gives me a simple count of the different group names. Other times it weighs them based on n. Obviously it stops if I rename the n column, but the inconsistency of performance is very concerning.\\r\\n\\r\\nAre there known conflicts with other packages I might have loaded?\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6912\", #>     \"id\": 1849765675, #>     \"node_id\": \"I_kwDOAGIUpc5uQS8r\", #>     \"number\": 6912, #>     \"title\": \"Catch and rethrow the \\\"overflow\\\" error from vctrs during joins\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1257707950, #>         \"node_id\": \"MDU6TGFiZWwxMjU3NzA3OTUw\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/tables%20%F0%9F%A7%AE\", #>         \"name\": \"tables 🧮\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"joins and set operations\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-14T13:20:20Z\", #>     \"updated_at\": \"2023-08-14T13:20:20Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"See https://github.com/r-lib/vctrs/pull/1869, requires dev vctrs right now.\\r\\n\\r\\nWe could throw a much more informative error. Probably advising the user to check their join keys, because a misspecified join is typically the source of this overflow (as seen by many people opening vctrs issues about this)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6909\", #>     \"id\": 1847851427, #>     \"node_id\": \"PR_kwDOAGIUpc5XyB0w\", #>     \"number\": 6909, #>     \"title\": \"Materialize results in collect()\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-08-12T08:16:34Z\", #>     \"updated_at\": \"2023-08-24T03:06:56Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6909\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6909\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6909.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6909.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"for duckplyr.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6906\", #>     \"id\": 1839401013, #>     \"node_id\": \"I_kwDOAGIUpc5towg1\", #>     \"number\": 6906, #>     \"title\": \"Filtering ordered factor via between() does not agree with filtering using a conditional expression \", #>     \"user\": { #>       \"login\": \"Generalized\", #>       \"id\": 60151643, #>       \"node_id\": \"MDQ6VXNlcjYwMTUxNjQz\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/60151643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/Generalized\", #>       \"html_url\": \"https://github.com/Generalized\", #>       \"followers_url\": \"https://api.github.com/users/Generalized/followers\", #>       \"following_url\": \"https://api.github.com/users/Generalized/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/Generalized/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/Generalized/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/Generalized/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/Generalized/orgs\", #>       \"repos_url\": \"https://api.github.com/users/Generalized/repos\", #>       \"events_url\": \"https://api.github.com/users/Generalized/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/Generalized/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-08-07T12:55:59Z\", #>     \"updated_at\": \"2023-08-13T03:15:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"The result of using `between()` in filtering is not equivalent to evaluating a conditional expression when working with ordered factors.\\r\\n\\r\\n```{r}\\r\\n> (x <- data.frame(Visit = c(\\\"Discharge\\\", \\\"Month 3\\\", \\\"Month 6\\\", \\\"Month 12\\\", \\\"Month 20\\\")))\\r\\n      Visit\\r\\n1 Discharge\\r\\n2   Month 3\\r\\n3   Month 6\\r\\n4  Month 12\\r\\n5  Month 20\\r\\n\\r\\n> class(x$Visit)\\r\\n[1] \\\"character\\\"\\r\\n```\\r\\n\\r\\nNow let's make it an ordered factor with assumed levels (used later for other operations):\\r\\n```{r}\\r\\n> (x$Visit <- factor(x$Visit, levels = c(\\\"Baseline\\\", \\\"Discharge\\\", \\\"Month 3\\\", \\\"Month 6\\\", \\\"Month 12\\\", \\\"Month 20\\\", \\\"Premature\\\"), ordered = TRUE))\\r\\n[1] Discharge Month 3   Month 6   Month 12  Month 20 \\r\\nLevels: Baseline < Discharge < Month 3 < Month 6 < Month 12 < Month 20 < Premature\\r\\n```\\r\\n\\r\\nWhen filtering using the conjunction of conditions it works\\r\\n```{r}\\r\\n> x %>% filter(Visit >= \\\"Discharge\\\" & Visit <= \\\"Month 20\\\")\\r\\n      Visit\\r\\n1 Discharge\\r\\n2   Month 3\\r\\n3   Month 6\\r\\n4  Month 12\\r\\n5  Month 20\\r\\n```\\r\\nWhen using the convenient between(), it doesn't\\r\\n```{r}\\r\\n> x %>% filter(between(Visit, \\\"Discharge\\\", \\\"Month 20\\\"))\\r\\n      Visit\\r\\n1 Discharge\\r\\n2  Month 12\\r\\n3  Month 20\\r\\n```\\r\\n2 items are missing in the output.\\r\\n\\r\\n-----\\r\\nR version 4.2.0 (2022-04-22 ucrt)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows 10 x64 (build 19045)\\r\\n\\r\\n> packageVersion(\\\"dplyr\\\")\\r\\n[1] ‘1.1.1’\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6905\", #>     \"id\": 1839123639, #>     \"node_id\": \"I_kwDOAGIUpc5tnsy3\", #>     \"number\": 6905, #>     \"title\": \"`bind_rows()` for database tables\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-07T10:06:08Z\", #>     \"updated_at\": \"2023-08-07T10:06:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It would be nice if `bind_rows()` would work for database tables.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\nlibrary(purrr)\\r\\ncon <- DBI::dbConnect(RSQLite::SQLite(), \\\":memory:\\\")\\r\\n\\r\\n# Create random slices of mtcars\\r\\ntables <-\\r\\n  1:5 |>\\r\\n  map(function(n) {\\r\\n    tbl_name <- paste0(\\\"mtcars_\\\", n)\\r\\n    copy_to(con, slice_sample(mtcars, n = 3), tbl_name)\\r\\n\\r\\n    tbl(con, tbl_name)\\r\\n  })\\r\\nbind_rows(!!!tables)\\r\\n#> Error in `bind_rows()`:\\r\\n#> ! Argument 1 must be a data frame or a named atomic vector.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::bind_rows(!!!tables)\\r\\n#>  2.   └─rlang::abort(glue(\\\"Argument {i} must be a data frame or a named atomic vector.\\\"))\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-08-07 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\nI know there were issues with the double dispatch and what happens if local tables and database tables are mixed.\\r\\nBut I think it would be sufficient if either all inputs are local tables or database tables.\\r\\nThis was also requested again in dbplyr: https://github.com/tidyverse/dbplyr/issues/1342.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/reactions\", #>       \"total_count\": 4, #>       \"+1\": 4, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6900\", #>     \"id\": 1835459833, #>     \"node_id\": \"I_kwDOAGIUpc5tZuT5\", #>     \"number\": 6900, #>     \"title\": \"Improve na_if documentation re vctrs coercion rules\", #>     \"user\": { #>       \"login\": \"DanielEWeeks\", #>       \"id\": 8495972, #>       \"node_id\": \"MDQ6VXNlcjg0OTU5NzI=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/8495972?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DanielEWeeks\", #>       \"html_url\": \"https://github.com/DanielEWeeks\", #>       \"followers_url\": \"https://api.github.com/users/DanielEWeeks/followers\", #>       \"following_url\": \"https://api.github.com/users/DanielEWeeks/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DanielEWeeks/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DanielEWeeks/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DanielEWeeks/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DanielEWeeks/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DanielEWeeks/repos\", #>       \"events_url\": \"https://api.github.com/users/DanielEWeeks/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DanielEWeeks/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-03T17:29:55Z\", #>     \"updated_at\": \"2023-08-03T17:30:18Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"**Brief description of the problem**\\r\\n\\r\\nUsing `na_if` it generated error messages that I found mystifying:\\r\\n\\r\\n```r\\r\\n> na_if(\\\"ID\\\", -3333)\\r\\nError in `na_if()`:\\r\\n! Can't convert `y` <double> to match type of `x` <character>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n> na_if(\\\"ID\\\", \\\"-3333\\\")\\r\\n[1] \\\"ID\\\"\\r\\n> na_if( 1, \\\"-3333\\\")\\r\\nError in `na_if()`:\\r\\n! Can't convert `y` <character> to match type of `x` <double>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n> na_if( 1, -3333)\\r\\n[1] 1\\r\\n```\\r\\nCurrently the `na_if(x, y)` documentation simply states:\\r\\n\\r\\n\\\"y is cast to the type of x before comparison.\\\"\\r\\n\\r\\nso it sounds like it should be able, when doing `na_if(\\\"ID\\\", -3333)`, to cast the numeric `-3333` to character before doing the comparison.  \\r\\n\\r\\nSo I was initially mystified by this behavior (above), but then it was explained to me that `na_if` is using {vctrs} under the hood, so it is using `vctrs` coercion rules.   As such, please consider extending the `na_if` documentation for the `na_if` function with a bit more text and relevant examples to explain and clarify this.  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6897\", #>     \"id\": 1824687161, #>     \"node_id\": \"I_kwDOAGIUpc5swoQ5\", #>     \"number\": 6897, #>     \"title\": \"Using `across()` within `mutate()` is appreciably slower than mutating columns individually\", #>     \"user\": { #>       \"login\": \"MattJEM\", #>       \"id\": 26907416, #>       \"node_id\": \"MDQ6VXNlcjI2OTA3NDE2\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/26907416?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/MattJEM\", #>       \"html_url\": \"https://github.com/MattJEM\", #>       \"followers_url\": \"https://api.github.com/users/MattJEM/followers\", #>       \"following_url\": \"https://api.github.com/users/MattJEM/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/MattJEM/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/MattJEM/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/MattJEM/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/MattJEM/orgs\", #>       \"repos_url\": \"https://api.github.com/users/MattJEM/repos\", #>       \"events_url\": \"https://api.github.com/users/MattJEM/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/MattJEM/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-07-27T15:58:10Z\", #>     \"updated_at\": \"2023-07-28T04:41:03Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"If I group a dataset and apply the same function across multiple columns using `mutate(across(...))` I see a performance decrease compared to individually mutating the columns. It is 5.31s vs 0.053s in the reprex, but in my actual, much larger dataset the difference is 1.5 hours vs a couple of minutes.\\r\\n\\r\\n---\\r\\n\\r\\n`sessionInfo()`\\r\\n```r\\r\\nR version 4.3.1 (2023-06-16 ucrt)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows Server 2019 x64 (build 17763)\\r\\n\\r\\nMatrix products: default\\r\\n\\r\\n\\r\\nlocale:\\r\\n[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252\\r\\n[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    \\r\\n\\r\\ntime zone: America/New_York\\r\\ntzcode source: internal\\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n\\r\\nother attached packages:\\r\\n[1] modeldata_1.1.0 dplyr_1.1.2    \\r\\n\\r\\nloaded via a namespace (and not attached):\\r\\n [1] utf8_1.2.3        R6_2.5.1          tidyselect_1.2.0  magrittr_2.0.3    glue_1.6.2        tibble_3.2.1     \\r\\n [7] pkgconfig_2.0.3   generics_0.1.3    lifecycle_1.0.3   cli_3.6.1         fansi_1.0.4       vctrs_0.6.3      \\r\\n[13] withr_2.5.0       compiler_4.3.1    rstudioapi_0.15.0 tools_4.3.1       pillar_1.9.0      crayon_1.5.2     \\r\\n[19] rlang_1.1.1\\r\\n```\\r\\n---\\r\\nReprex\\r\\n```r\\r\\nlibrary(dplyr)\\r\\nlibrary(modeldata)\\r\\n\\r\\ndata(ames)\\r\\n\\r\\nstart_time1 <- Sys.time()\\r\\names_calc1 <- ames %>%\\r\\n  group_by(Year_Built, MS_Zoning) %>%\\r\\n  mutate(across(First_Flr_SF:TotRms_AbvGrd, mean, na.rm = TRUE, .names = '{.col}_mean')) %>%\\r\\n  ungroup()\\r\\nstop_time1 <- Sys.time()\\r\\n\\r\\nstart_time2 <- Sys.time()\\r\\names_calc2 <- ames %>%\\r\\n  group_by(Year_Built, MS_Zoning) %>%\\r\\n  mutate(First_Flr_SF_mean = mean(First_Flr_SF, na.rm = TRUE),\\r\\n         Second_Flr_SF_mean = mean(Second_Flr_SF, na.rm = TRUE),\\r\\n         Gr_Liv_Area_mean = mean(Gr_Liv_Area, na.rm = TRUE),\\r\\n         Bsmt_Full_Bath_mean = mean(Bsmt_Full_Bath, na.rm = TRUE),\\r\\n         Bsmt_Half_Bath_mean = mean(Bsmt_Half_Bath, na.rm = TRUE),\\r\\n         Full_Bath_mean = mean(Full_Bath, na.rm = TRUE),\\r\\n         Half_Bath_mean = mean(Half_Bath, na.rm = TRUE),\\r\\n         Bedroom_AbvGr_mean = mean(Bedroom_AbvGr, na.rm = TRUE),\\r\\n         Kitchen_AbvGr_mean = mean(Kitchen_AbvGr, na.rm = TRUE),\\r\\n         TotRms_AbvGrd_mean = mean(TotRms_AbvGrd, na.rm = TRUE)) %>%\\r\\n  ungroup()\\r\\nstop_time2 <- Sys.time()\\r\\n\\r\\nstop_time1 - start_time1 # Using across() takes 5.313556 secs\\r\\nstop_time2 - start_time2 # Individually mutating takes 0.05337405 secs\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6896\", #>     \"id\": 1824054486, #>     \"node_id\": \"I_kwDOAGIUpc5suNzW\", #>     \"number\": 6896, #>     \"title\": \"`bind_rows` now failing when a column includes JSON vectors\", #>     \"user\": { #>       \"login\": \"James-G-Hill\", #>       \"id\": 2002036, #>       \"node_id\": \"MDQ6VXNlcjIwMDIwMzY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2002036?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/James-G-Hill\", #>       \"html_url\": \"https://github.com/James-G-Hill\", #>       \"followers_url\": \"https://api.github.com/users/James-G-Hill/followers\", #>       \"following_url\": \"https://api.github.com/users/James-G-Hill/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/James-G-Hill/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/James-G-Hill/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/James-G-Hill/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/James-G-Hill/orgs\", #>       \"repos_url\": \"https://api.github.com/users/James-G-Hill/repos\", #>       \"events_url\": \"https://api.github.com/users/James-G-Hill/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/James-G-Hill/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-27T10:10:53Z\", #>     \"updated_at\": \"2023-07-27T10:10:53Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Using `bind_rows` (dplyr version 1.1.2) with tibbles including JSON produced from `jsonlite` produces and error whereas it previously worked (dplyr 1.0.0 for example)\\r\\n\\r\\n```r\\r\\ndplyr::bind_rows(\\r\\n  dplyr::tibble(msg = jsonlite::toJSON(list(\\\"a\\\"), auto_unbox = TRUE)),\\r\\n  dplyr::tibble(msg = jsonlite::toJSON(list(\\\"b\\\"), auto_unbox = TRUE))\\r\\n)\\r\\n```\\r\\n\\r\\nError:\\r\\n\\r\\n```\\r\\nError in `dplyr::bind_rows()`:\\r\\n! Can't convert `..1$msg` <json> to match type of `msg` <vctrs:::common_class_fallback>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6895\", #>     \"id\": 1820741012, #>     \"node_id\": \"I_kwDOAGIUpc5shk2U\", #>     \"number\": 6895, #>     \"title\": \" Confirm if `dplyr::across` can pass same length of vector to  `.names` \", #>     \"user\": { #>       \"login\": \"ynsec37\", #>       \"id\": 98389771, #>       \"node_id\": \"U_kgDOBd1PCw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/98389771?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/ynsec37\", #>       \"html_url\": \"https://github.com/ynsec37\", #>       \"followers_url\": \"https://api.github.com/users/ynsec37/followers\", #>       \"following_url\": \"https://api.github.com/users/ynsec37/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/ynsec37/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/ynsec37/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/ynsec37/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/ynsec37/orgs\", #>       \"repos_url\": \"https://api.github.com/users/ynsec37/repos\", #>       \"events_url\": \"https://api.github.com/users/ynsec37/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/ynsec37/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-07-25T16:54:41Z\", #>     \"updated_at\": \"2023-08-01T17:18:07Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Dear developer,\\r\\n\\r\\nI found the below example work well but no related description in current [official document](https://dplyr.tidyverse.org/reference/across.html).\\r\\n\\r\\n> .names\\t A glue specification that describes how to name the output columns. This can use {.col} to stand for the selected column name, and {.fn} to stand for the name of the function being applied. The default (NULL) is equivalent to \\\"{.col}\\\" for the single function case and \\\"{.col}_{.fn}\\\" for the case where a list is used for .fns.\\r\\n\\r\\n\\r\\n\\r\\nI just want to confirm whether this way is right or accepted, especilly when the new variable names can not simply be computed by `{.col}` or `{.fn}`\\r\\n\\r\\n```r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble::tibble(a = 1, b = 2, c = 3)\\r\\n\\r\\ncols <- c(\\\"a\\\", \\\"b\\\", \\\"c\\\")\\r\\nnew_cols <- c(\\\"x\\\", \\\"y\\\", \\\"z\\\")\\r\\n\\r\\ndf %>%\\r\\n  mutate(across(\\r\\n    .cols = all_of(cols),\\r\\n    .fns = ~ .x + 10,\\r\\n    .names = \\\"{new_cols}\\\"\\r\\n  ))\\r\\n#> # A tibble: 1 × 6\\r\\n#>       a     b     c     x     y     z\\r\\n#>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#> 1     1     2     3    11    12    13\\r\\n```\\r\\nThank very much for your reply.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/reactions\", #>       \"total_count\": 2, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 1 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6892\", #>     \"id\": 1818429552, #>     \"node_id\": \"I_kwDOAGIUpc5sYwhw\", #>     \"number\": 6892, #>     \"title\": \"dplyr::across inappropriately rewrites dollar indexes my function code\", #>     \"user\": { #>       \"login\": \"DarwinAwardWinner\", #>       \"id\": 228145, #>       \"node_id\": \"MDQ6VXNlcjIyODE0NQ==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/228145?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DarwinAwardWinner\", #>       \"html_url\": \"https://github.com/DarwinAwardWinner\", #>       \"followers_url\": \"https://api.github.com/users/DarwinAwardWinner/followers\", #>       \"following_url\": \"https://api.github.com/users/DarwinAwardWinner/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DarwinAwardWinner/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DarwinAwardWinner/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DarwinAwardWinner/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DarwinAwardWinner/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DarwinAwardWinner/repos\", #>       \"events_url\": \"https://api.github.com/users/DarwinAwardWinner/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DarwinAwardWinner/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 10, #>     \"created_at\": \"2023-07-24T13:27:23Z\", #>     \"updated_at\": \"2023-07-31T18:02:26Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I was getting a weird error inside the `mutate(across(...))` (see reprex), and by closely reading the stack trace I eventually realized it was because some function (presumably `dplyr::across`) is rewriting my function, changing the x in `desn$x` into e.g. `dens$mpg` (see line 10 of the stack trace). I guess this is because dplyr is rewriting every symbolic occurrence of the function arguments, including the `$x`. The rest of the reprex demonstrates 2 simple workarounds: using double bracket indexing to avoid referring to x as a symbol, and changing the argument name to avoid the name collision. However, debugging this error was rather confusing, since manually running the code on a test case didn't produce the error. I would expect the original code to work, since this function would work as expected in any other context, e.g. `lapply`.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\nmtcars <- as_tibble(mtcars)\\r\\n\\r\\n## Fails\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(x) {\\r\\n    dens <- density(x, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens$x, dens$y, xout = x, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(...)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `mpg_KDensity`.\\r\\n#> Caused by error in `xy.coords()`:\\r\\n#> ! 'x' and 'y' lengths differ\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─mtcars %>% ...\\r\\n#>   2. ├─dplyr::mutate(...)\\r\\n#>   3. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   4. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   5. │   ├─base::withCallingHandlers(...)\\r\\n#>   6. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   7. │     ├─base::withCallingHandlers(...)\\r\\n#>   8. │     └─mask$eval_all_mutate(quo)\\r\\n#>   9. │       └─dplyr (local) eval()\\r\\n#>  10. ├─stats::approx(dens$mpg, dens$y, xout = mpg, na.rm = FALSE, rule = 2)\\r\\n#>  11. │ └─stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)\\r\\n#>  12. │   └─grDevices::xy.coords(x, y, setLab = FALSE)\\r\\n#>  13. │     └─base::stop(\\\"'x' and 'y' lengths differ\\\")\\r\\n#>  14. └─base::.handleSimpleError(...)\\r\\n#>  15.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  16.     └─rlang::abort(msg, call = call(\\\"across\\\"), parent = cnd)\\r\\n\\r\\n## Succeeds\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(x) {\\r\\n    dens <- density(x, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens[[\\\"x\\\"]], dens$y, xout = x, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> # A tibble: 32 × 22\\r\\n#>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n#>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\\r\\n#>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\\r\\n#>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\\r\\n#>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\\r\\n#>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\\r\\n#>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\\r\\n#>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\\r\\n#>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\\r\\n#>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\\r\\n#> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\\r\\n#> # ℹ 22 more rows\\r\\n#> # ℹ 11 more variables: mpg_KDensity <dbl>, cyl_KDensity <dbl>,\\r\\n#> #   disp_KDensity <dbl>, hp_KDensity <dbl>, drat_KDensity <dbl>,\\r\\n#> #   wt_KDensity <dbl>, qsec_KDensity <dbl>, vs_KDensity <dbl>,\\r\\n#> #   am_KDensity <dbl>, gear_KDensity <dbl>, carb_KDensity <dbl>\\r\\n\\r\\n## Also succeeds\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(xx) {\\r\\n    dens <- density(xx, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens$x, dens$y, xout = xx, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> # A tibble: 32 × 22\\r\\n#>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n#>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\\r\\n#>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\\r\\n#>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\\r\\n#>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\\r\\n#>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\\r\\n#>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\\r\\n#>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\\r\\n#>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\\r\\n#>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\\r\\n#> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\\r\\n#> # ℹ 22 more rows\\r\\n#> # ℹ 11 more variables: mpg_KDensity <dbl>, cyl_KDensity <dbl>,\\r\\n#> #   disp_KDensity <dbl>, hp_KDensity <dbl>, drat_KDensity <dbl>,\\r\\n#> #   wt_KDensity <dbl>, qsec_KDensity <dbl>, vs_KDensity <dbl>,\\r\\n#> #   am_KDensity <dbl>, gear_KDensity <dbl>, carb_KDensity <dbl>\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-07-24 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6891\", #>     \"id\": 1818419328, #>     \"node_id\": \"I_kwDOAGIUpc5sYuCA\", #>     \"number\": 6891, #>     \"title\": \"The case for `drop_rows()` and `keep_rows()` in relation to `filter()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 334471510, #>         \"node_id\": \"MDU6TGFiZWwzMzQ0NzE1MTA=\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/verbs%20:running_woman:\", #>         \"name\": \"verbs :running_woman:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-07-24T13:22:13Z\", #>     \"updated_at\": \"2023-08-01T16:46:38Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"There have been quite a few requests in the past for an \\\"anti filter\\\", i.e. I want to specify a set of conditions that determine which rows to _drop_. Additionally, it has traditionally been somewhat difficult to explain that `filter()` is about specifying rows to _keep_; that isn't really explained clearly in the verb name. Also, we've also seen in the past that it is mildly confusing that `select()` is about columns and `filter()` is about rows, again, there isn't anything in the verb names to describe the difference.\\r\\n\\r\\n---\\r\\n\\r\\nOne thing we could consider doing is to add two new very explicit verbs:\\r\\n- `keep_rows(data, ..., by = , missing = )`\\r\\n- `drop_rows(data, ..., by = , missing = )`\\r\\n\\r\\nWhere `keep_rows()` is equivalent to `filter()`, and `drop_rows()` is the opposite.\\r\\n\\r\\nTo be very clear, `filter()` would _never_ disappear. We would, however, consider superseding it in favor of these if they prove to be successful, which really only means we'd start using them in docs and workshops instead of `filter()`. We'd even consider not even superseding `filter()`, which many people find scary. Instead we'd just be aliasing `keep_rows()` as `filter()`.\\r\\n\\r\\nThe biggest annoyance when writing a \\\"drop\\\" style expression with `filter()` is that you first have to write a \\\"keep\\\" expression and then painfully invert it. i.e.:\\r\\n\\r\\n\\\"drop rows from `df` where `a` and `b` and `c` are `TRUE`\\\"\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\ndf <- tibble(\\r\\n  id = c(1, 2, 3),\\r\\n  a = c(TRUE, NA, TRUE),\\r\\n  b = c(FALSE, TRUE, TRUE),\\r\\n  c = c(TRUE, TRUE, TRUE)\\r\\n)\\r\\ndf\\r\\n#> # A tibble: 3 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE \\r\\n#> 2     2 NA    TRUE  TRUE \\r\\n#> 3     3 TRUE  TRUE  TRUE\\r\\n\\r\\n# \\\"keep rows where a and b and c are TRUE\\\"\\r\\n# this nicely drops NAs because they don't match our specified criteria\\r\\nfilter(df, a, b, c)\\r\\n#> # A tibble: 1 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     3 TRUE  TRUE  TRUE\\r\\n\\r\\n# \\\"drop rows where a and b and c are TRUE\\\"\\r\\n# this AWFULLY drops NAs because of how filter() works!\\r\\n# NA doesn't match our criteria so shouldnt be seen as something to drop\\r\\nfilter(df, !(a & b & c))\\r\\n#> # A tibble: 1 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE\\r\\n```\\r\\n\\r\\nNote that even the seemingly correct \\\"drop\\\" expression is actually wrong when it comes to handling missing values. It is fairly hard to get this right.\\r\\n\\r\\nThe `drop_rows()` version would be:\\r\\n\\r\\n```r\\r\\ndf %>% drop_rows(a, b, c)\\r\\n#> # A tibble: 2 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE \\r\\n#> 2     2 NA    TRUE  TRUE \\r\\n```\\r\\n\\r\\nWhere `NA` isn't considered something you \\\"drop\\\" by default, but would be if `missing` was tweaked to whatever we decide means \\\"treat a missing value like `TRUE`\\\".\\r\\n\\r\\n---\\r\\n\\r\\nA few other notes:\\r\\n- `missing` is from https://github.com/tidyverse/dplyr/issues/6560 and controls how missing values are treated. By default, both functions would treat an `NA` as `FALSE` (i.e. missing values are never kept or dropped), but could be made to treat them as `TRUE` or an error. Though I don't think `missing = c(\\\"keep\\\", \\\"drop\\\", \\\"error\\\")` works uniformly for both verbs so we'd need to think of another parameterization.\\r\\n- Both functions would support `if_all()` and `if_any()`, which I think form nice natural sentences. \\\"drop rows if any are NA\\\" sounds pretty good for `drop_rows(df, if_any(c(a, b), is.na))`. That is like `tidyr::drop_na()`.\\r\\n- Neither would support `across()`, which we have been deprecating from `filter()` for a little while now.\\r\\n- Both functions would combine multiple conditions using `&`, as that is typically the natural way to combine multiple conditions and you can always get `|` behavior with either an explicit `|` or by using multiple calls to the function. i.e. `df %>% drop_rows(x > 5 | y > 6)` is the same as `df %>% drop_rows(x > 5) %>% drop_rows(y > 6)` (and you can't do that split trick with `&`). `if_any()` can also work for `|` when you need to apply the same function to multiple columns.\\r\\n- Both functions would support `by`\\r\\n\\r\\nSome issues and questions related to this:\\r\\n- https://github.com/tidyverse/dplyr/issues/6888\\r\\n- https://github.com/tidyverse/dplyr/issues/1527\\r\\n- https://github.com/tidyverse/dplyr/issues/741\\r\\n- https://github.com/tidyverse/dplyr/issues/1797\\r\\n- https://stackoverflow.com/questions/45661377/delete-rows-based-on-multiple-conditions-with-dplyr\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6890\", #>     \"id\": 1817996283, #>     \"node_id\": \"I_kwDOAGIUpc5sXGv7\", #>     \"number\": 6890, #>     \"title\": \"Unexpected/impractical behaviour of rowwise() in combination with mutate_all()\", #>     \"user\": { #>       \"login\": \"martijnvanattekum\", #>       \"id\": 19334781, #>       \"node_id\": \"MDQ6VXNlcjE5MzM0Nzgx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19334781?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/martijnvanattekum\", #>       \"html_url\": \"https://github.com/martijnvanattekum\", #>       \"followers_url\": \"https://api.github.com/users/martijnvanattekum/followers\", #>       \"following_url\": \"https://api.github.com/users/martijnvanattekum/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/martijnvanattekum/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/martijnvanattekum/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/martijnvanattekum/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/martijnvanattekum/orgs\", #>       \"repos_url\": \"https://api.github.com/users/martijnvanattekum/repos\", #>       \"events_url\": \"https://api.github.com/users/martijnvanattekum/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/martijnvanattekum/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-24T09:16:52Z\", #>     \"updated_at\": \"2023-07-24T09:16:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"When trying to apply a function using `mutate_all()` to each **row** of a data frame using `rowwise()`, it seems the function only considers individual values, rather than the complete row. \\r\\n\\r\\nComparing column-wise with rowwise operations:\\r\\n```\\r\\n# Columnwise - considers the complete column when applying the function\\r\\nlibrary(dplyr)\\r\\nhead(mtcars) %>% mutate_all(rank)\\r\\n\\r\\n>                   mpg cyl disp hp drat wt qsec vs am gear carb\\r\\n> Mazda RX4         3.5 3.5  2.5  4  5.5  2  1.0  2  5    5  5.5\\r\\n> Mazda RX4 Wag     3.5 3.5  2.5  4  5.5  3  2.5  2  5    5  5.5\\r\\n> Datsun 710        6.0 1.0  1.0  1  4.0  1  4.0  5  5    5  2.0\\r\\n> Hornet 4 Drive    5.0 3.5  5.0  4  2.0  4  5.0  5  2    2  2.0\\r\\n> Hornet Sportabout 2.0 6.0  6.0  6  3.0  5  2.5  2  2    2  4.0\\r\\n> Valiant           1.0 3.5  4.0  2  1.0  6  6.0  5  2    2  2.0\\r\\n\\r\\n# Rowwise - considers only the individual values within the row when applying the function, hence always returning rank 1\\r\\nlibrary(dplyr)\\r\\nhead(mtcars) %>% rowwise() %>% mutate_all(rank)\\r\\n\\r\\n> # A tibble: 6 × 11\\r\\n> # Rowwise: \\r\\n>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n> 1     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 2     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 3     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 4     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 5     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 6     1     1     1     1     1     1     1     1     1     1     1\\r\\n\\r\\n# Expected result\\r\\n# Can be obtained running head(mtcars) %>% apply(1, \\\\(row) rank(row)) %>% t() %>% data.frame()\\r\\n\\r\\n>                   mpg cyl disp hp drat wt qsec  vs  am gear carb\\r\\n> Mazda RX4           9 7.0   11 10    4  3    8 1.0 2.0  5.5  5.5\\r\\n> Mazda RX4 Wag       9 7.0   11 10    4  3    8 1.0 2.0  5.5  5.5\\r\\n> Datsun 710          9 6.5   11 10    5  4    8 2.0 2.0  6.5  2.0\\r\\n> Hornet 4 Drive      9 7.0   11 10    5  6    8 2.5 1.0  4.0  2.5\\r\\n> Hornet Sportabout   9 7.0   11 10    5  6    8 1.5 1.5  4.0  3.0\\r\\n> Valiant             8 7.0   11 10    4  6    9 2.5 1.0  5.0  2.5\\r\\n```\\r\\n\\r\\nWould it be possible to obtain the expected result with `rowwise()`?\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   } #> ]  gh(\"/repos/{owner}/{repo}/issues\", owner = \"hadley\", repo = \"dplyr\") #> [ #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6947\", #>     \"id\": 1969070265, #>     \"node_id\": \"PR_kwDOAGIUpc5eKIPd\", #>     \"number\": 6947, #>     \"title\": \"Avoid triggering duckplyr's ALTREP row names\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-30T19:28:38Z\", #>     \"updated_at\": \"2023-10-30T21:38:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6947\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6947\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6947.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6947.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"Closes https://github.com/tidyverse/dplyr/pull/6927 (alternative approach)\\r\\nPart of https://github.com/tidyverse/dplyr/issues/6525 (the other half was https://github.com/r-lib/vctrs/pull/1847)\\r\\n\\r\\nIn https://github.com/tidyverse/dplyr/issues/6525#issuecomment-1303619152, we discovered that one of the places that duckplyr's ALTREP row names are being triggered is in `attributes()`, called on the `template` argument of `dplyr_reconstruct()`. Calling `attributes()` will try and expand internally compact row names (i.e. `c(NA, -5)`) into an ALTREP integer sequence https://github.com/wch/r-source/blob/69b94f0c8ce9b2497f6d7a81922575f6c585b713/src/main/attrib.c#L176-L177. This avoids leaking this internal detail to most users. But this requires calling `INTEGER()` or `INTEGER_ELT()` on the row names object. For duckplyr's lazy queries, which don't know the resulting number of rows until it happens, that is enough to trigger the lazy query.\\r\\n\\r\\nWhile working on this, I also discovered that `attributes<-()` is also a problem. It also has special behavior where it tries to _create_ this internal compact row names representation during the setting process https://github.com/wch/r-source/blob/69b94f0c8ce9b2497f6d7a81922575f6c585b713/src/main/attrib.c#L57. Again, this requires looking at `INTEGER()`. So if `data` had duckplyr ALTREP row names, then it would trigger the query upon reconstruction too.\\r\\n\\r\\nI think the best solution for this is to come up with our own attribute getter / setter helpers that try and mimic most of what `do_attributes()` and `do_attributesgets()` do, but with special casing for row names. We could avoid the two helpers and just manipulate the underlying pairlists directly with a \\\"copy most attributes\\\" style helper, but I feel like we may need something like these helpers in the future, and it seemed a little cleaner to me to be able to expose these on the R side, as you get precise control over what \\\"most attributes\\\" means (here, everything but names and row names).\\r\\n\\r\\nUp until now, this has been managed in duckplyr itself, but we think it should live here so duckplyr can remove its C code.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6947/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6946\", #>     \"id\": 1966458349, #>     \"node_id\": \"I_kwDOAGIUpc51NcXt\", #>     \"number\": 6946, #>     \"title\": \"`slice_sample()` shows strange suggestion when called with namespace\", #>     \"user\": { #>       \"login\": \"psychelzh\", #>       \"id\": 13306020, #>       \"node_id\": \"MDQ6VXNlcjEzMzA2MDIw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/13306020?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/psychelzh\", #>       \"html_url\": \"https://github.com/psychelzh\", #>       \"followers_url\": \"https://api.github.com/users/psychelzh/followers\", #>       \"following_url\": \"https://api.github.com/users/psychelzh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/psychelzh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/psychelzh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/psychelzh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/psychelzh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/psychelzh/repos\", #>       \"events_url\": \"https://api.github.com/users/psychelzh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/psychelzh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-10-28T06:17:30Z\", #>     \"updated_at\": \"2023-10-28T06:21:17Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"The error is simple as the follow:\\r\\n\\r\\n``` r\\r\\ndplyr::slice_sample(data.frame(x = 1:100), 10)\\r\\n#> Error in `dplyr::slice_sample()`:\\r\\n#> ! `n` must be explicitly named.\\r\\n#> Did you mean `::(n = 10)`?\\r\\n#> Did you mean `dplyr(n = 10)`?\\r\\n#> Did you mean `slice_sample(n = 10)`?\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::slice_sample(data.frame(x = 1:100), 10)\\r\\n#>  2.   └─dplyr:::check_slice_unnamed_n_prop(..., n = n, prop = prop)\\r\\n#>  3.     └─rlang::abort(bullets, call = error_call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-28 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6946/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6945\", #>     \"id\": 1964318347, #>     \"node_id\": \"I_kwDOAGIUpc51FR6L\", #>     \"number\": 6945, #>     \"title\": \"`rename_with()` errors when no match/clarity of error message\", #>     \"user\": { #>       \"login\": \"asadow\", #>       \"id\": 40274818, #>       \"node_id\": \"MDQ6VXNlcjQwMjc0ODE4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40274818?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/asadow\", #>       \"html_url\": \"https://github.com/asadow\", #>       \"followers_url\": \"https://api.github.com/users/asadow/followers\", #>       \"following_url\": \"https://api.github.com/users/asadow/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/asadow/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/asadow/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/asadow/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/asadow/orgs\", #>       \"repos_url\": \"https://api.github.com/users/asadow/repos\", #>       \"events_url\": \"https://api.github.com/users/asadow/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/asadow/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-26T20:25:37Z\", #>     \"updated_at\": \"2023-10-26T20:25:37Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I thought I could use map over a list of data frames to rename them using `rename_with()` and a tidyselector like `matches()`, whether or not each data frame has a matching column name. Now it looks as though that is not longer possible (#6688). \\r\\n\\r\\nThat's all fine and good. Now I see I can just use `rename()`, which does not error. But I think the error for `rename_with()` could be more clear by saying that there is no match. \\r\\n\\r\\nLastly, I'm curious: why the difference in erroring vs. not between `rename()` and `rename_with()`?\\r\\n\\r\\n``` r\\r\\nlibrary(tidyverse)\\r\\n\\r\\n# No error\\r\\nmtcars |> rename(\\\"joe\\\" = matches(\\\"qwerty\\\")) |> head(1)\\r\\n#>           mpg cyl disp  hp drat   wt  qsec vs am gear carb\\r\\n#> Mazda RX4  21   6  160 110  3.9 2.62 16.46  0  1    4    4\\r\\n\\r\\n# Hinting error\\r\\nmtcars |> rename_with(~ \\\"joe\\\", qwerty)\\r\\n#> Error in `rename_with()`:\\r\\n#> ! Can't subset columns that don't exist.\\r\\n#> ✖ Column `qwerty` doesn't exist.\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::rename_with(mtcars, ~\\\"joe\\\", qwerty)\\r\\n#>   2. ├─dplyr:::rename_with.data.frame(mtcars, ~\\\"joe\\\", qwerty)\\r\\n#>   3. │ └─tidyselect::eval_select(enquo(.cols), .data, allow_rename = FALSE)\\r\\n#>   4. │   └─tidyselect:::eval_select_impl(...)\\r\\n#>   5. │     ├─tidyselect:::with_subscript_errors(...)\\r\\n#>   6. │     │ └─rlang::try_fetch(...)\\r\\n#>   7. │     │   └─base::withCallingHandlers(...)\\r\\n#>   8. │     └─tidyselect:::vars_select_eval(...)\\r\\n#>   9. │       └─tidyselect:::walk_data_tree(expr, data_mask, context_mask)\\r\\n#>  10. │         └─tidyselect:::as_indices_sel_impl(...)\\r\\n#>  11. │           └─tidyselect:::as_indices_impl(...)\\r\\n#>  12. │             └─tidyselect:::chr_as_locations(x, vars, call = call, arg = arg)\\r\\n#>  13. │               └─vctrs::vec_as_location(...)\\r\\n#>  14. └─vctrs (local) `<fn>`()\\r\\n#>  15.   └─vctrs:::stop_subscript_oob(...)\\r\\n#>  16.     └─vctrs:::stop_subscript(...)\\r\\n#>  17.       └─rlang::abort(...)\\r\\n\\r\\n# Less helpful error\\r\\nmtcars |> rename_with(~ \\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#> Error in `rename_with()`:\\r\\n#> ! `.fn` must return a vector of length 0, not 1.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. ├─dplyr::rename_with(mtcars, ~\\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#>  2. └─dplyr:::rename_with.data.frame(mtcars, ~\\\"joe\\\", matches(\\\"qwerty\\\"))\\r\\n#>  3.   └─cli::cli_abort(\\\"{.arg .fn} must return a vector of length {length(sel)}, not {length(new)}.\\\")\\r\\n#>  4.     └─rlang::abort(...)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-26 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6945/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6943\", #>     \"id\": 1961317705, #>     \"node_id\": \"I_kwDOAGIUpc5051VJ\", #>     \"number\": 6943, #>     \"title\": \"condition handling ignores locally set options\", #>     \"user\": { #>       \"login\": \"moodymudskipper\", #>       \"id\": 18351714, #>       \"node_id\": \"MDQ6VXNlcjE4MzUxNzE0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18351714?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/moodymudskipper\", #>       \"html_url\": \"https://github.com/moodymudskipper\", #>       \"followers_url\": \"https://api.github.com/users/moodymudskipper/followers\", #>       \"following_url\": \"https://api.github.com/users/moodymudskipper/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/moodymudskipper/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/moodymudskipper/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/moodymudskipper/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/moodymudskipper/orgs\", #>       \"repos_url\": \"https://api.github.com/users/moodymudskipper/repos\", #>       \"events_url\": \"https://api.github.com/users/moodymudskipper/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/moodymudskipper/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-25T12:33:55Z\", #>     \"updated_at\": \"2023-10-25T12:33:55Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Maybe because of a delayed evaluation issue ?\\r\\n\\r\\n``` r\\r\\nbugged <- function() {\\r\\n  withr::local_options(warn = 2)\\r\\n  rlang::warn(\\\"oops\\\") # or warning(\\\"oops\\\")\\r\\n  24\\r\\n}\\r\\n\\r\\n# as expected\\r\\n\\r\\nbugged()\\r\\n#> Error: (converted from warning) oops\\r\\nsubset(cars, speed == bugged())\\r\\n#> Error: (converted from warning) oops\\r\\n\\r\\n# unexpected\\r\\n\\r\\ndplyr::filter(cars, speed == bugged())\\r\\n#> Warning: There was 1 warning in `dplyr::filter()`.\\r\\n#> ℹ In argument: `speed == bugged()`.\\r\\n#> Caused by warning:\\r\\n#> ! oops\\r\\n#>   speed dist\\r\\n#> 1    24   70\\r\\n#> 2    24   92\\r\\n#> 3    24   93\\r\\n#> 4    24  120\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-25 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6943/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6942\", #>     \"id\": 1951021595, #>     \"node_id\": \"PR_kwDOAGIUpc5dNZSf\", #>     \"number\": 6942, #>     \"title\": \"Uptaded documentation on rows_append and rows_insert, issue #6864\", #>     \"user\": { #>       \"login\": \"hsalberti\", #>       \"id\": 76076260, #>       \"node_id\": \"MDQ6VXNlcjc2MDc2MjYw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/76076260?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/hsalberti\", #>       \"html_url\": \"https://github.com/hsalberti\", #>       \"followers_url\": \"https://api.github.com/users/hsalberti/followers\", #>       \"following_url\": \"https://api.github.com/users/hsalberti/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/hsalberti/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/hsalberti/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/hsalberti/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/hsalberti/orgs\", #>       \"repos_url\": \"https://api.github.com/users/hsalberti/repos\", #>       \"events_url\": \"https://api.github.com/users/hsalberti/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/hsalberti/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-19T01:34:19Z\", #>     \"updated_at\": \"2023-10-19T01:34:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6942\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6942\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6942.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6942.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"https://github.com/tidyverse/dplyr/issues/6864\\r\\nSolved this issue! Looking forward for a response\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6942/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6940\", #>     \"id\": 1940781206, #>     \"node_id\": \"I_kwDOAGIUpc5zrfiW\", #>     \"number\": 6940, #>     \"title\": \"`arrange()` not warning on `!!` like `all_of()`\", #>     \"user\": { #>       \"login\": \"asadow\", #>       \"id\": 40274818, #>       \"node_id\": \"MDQ6VXNlcjQwMjc0ODE4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40274818?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/asadow\", #>       \"html_url\": \"https://github.com/asadow\", #>       \"followers_url\": \"https://api.github.com/users/asadow/followers\", #>       \"following_url\": \"https://api.github.com/users/asadow/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/asadow/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/asadow/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/asadow/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/asadow/orgs\", #>       \"repos_url\": \"https://api.github.com/users/asadow/repos\", #>       \"events_url\": \"https://api.github.com/users/asadow/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/asadow/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-10-12T20:56:00Z\", #>     \"updated_at\": \"2023-10-26T09:52:15Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"`!!` inside `arrange()` is not warning like `all_of()`\\r\\n\\r\\nAside: I was surprised to see the lack of tidyselect for `arrange()`. Is the reason documented somewhere? It is not in [the tidyselect 1.2.0 blog post](https://www.tidyverse.org/blog/2022/10/tidyselect-1-2-0/).\\r\\n\\r\\n``` r\\r\\nlibrary(tidyverse)\\r\\ndf <- tibble(x = 2:1)\\r\\nw <- \\\"x\\\"\\r\\ndf |> arrange(.data[[w]])\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     1\\r\\n#> 2     2\\r\\ndf |> arrange(!!w)\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     2\\r\\n#> 2     1\\r\\ndf |> arrange(all_of(w))\\r\\n#> Warning: There was 1 warning in `arrange()`.\\r\\n#> ℹ In argument: `..1 = all_of(w)`.\\r\\n#> Caused by warning:\\r\\n#> ! Using `all_of()` outside of a selecting function was deprecated in tidyselect\\r\\n#>   1.2.0.\\r\\n#> ℹ See details at\\r\\n#>   <https://tidyselect.r-lib.org/reference/faq-selection-context.html>\\r\\n#> # A tibble: 2 × 1\\r\\n#>       x\\r\\n#>   <int>\\r\\n#> 1     2\\r\\n#> 2     1\\r\\ndf |> arrange(!!.env$w)\\r\\n#> Error in eval(expr, envir, enclos): object '.env' not found\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-12 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6940/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6939\", #>     \"id\": 1935721054, #>     \"node_id\": \"I_kwDOAGIUpc5zYMJe\", #>     \"number\": 6939, #>     \"title\": \"`Error in vapply(.x, .f, .mold, ..., USE.NAMES = FALSE)`: cli_warn together with dplyr grouping results in error.\", #>     \"user\": { #>       \"login\": \"lschneiderbauer\", #>       \"id\": 422100, #>       \"node_id\": \"MDQ6VXNlcjQyMjEwMA==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/422100?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/lschneiderbauer\", #>       \"html_url\": \"https://github.com/lschneiderbauer\", #>       \"followers_url\": \"https://api.github.com/users/lschneiderbauer/followers\", #>       \"following_url\": \"https://api.github.com/users/lschneiderbauer/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/lschneiderbauer/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/lschneiderbauer/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/lschneiderbauer/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/lschneiderbauer/orgs\", #>       \"repos_url\": \"https://api.github.com/users/lschneiderbauer/repos\", #>       \"events_url\": \"https://api.github.com/users/lschneiderbauer/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/lschneiderbauer/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-10T16:09:09Z\", #>     \"updated_at\": \"2023-10-10T16:09:09Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Hi,\\r\\n\\r\\nit took me a while to get to this (very artificial) reduced example, but I managed to get it: For some reason, using `cli::warn()` inside a nested and grouped mutate function results in the described error.\\r\\n\\r\\nRemoving `cli_warn()` also removes the error and results in a sane answer.\\r\\n\\r\\nI am using R 4.2.1, with dplyr 1.1.3 and cli 3.6.1.\\r\\n\\r\\n---\\r\\n\\r\\nBrief description of the problem\\r\\n\\r\\n``` r\\r\\nlibrary(cli)\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attache Paket: 'dplyr'\\r\\n#> Die folgenden Objekte sind maskiert von 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> Die folgenden Objekte sind maskiert von 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\n\\r\\nsome_warning <- function() {\\r\\n  cli::cli_warn(\\\"some warning\\\")\\r\\n  return(1)\\r\\n}\\r\\n\\r\\ncreate_new_col <- function() {\\r\\n  tibble(col = TRUE) |>\\r\\n    mutate(\\r\\n      new_col = some_warning(),\\r\\n      .by = col\\r\\n    ) |>\\r\\n    pull(new_col)\\r\\n}\\r\\n\\r\\ntibble(group = TRUE) |>\\r\\n  mutate(new_col = create_new_col(), .by = group)\\r\\n#> Error in vapply(.x, .f, .mold, ..., USE.NAMES = FALSE): Werte müssen die Länge 1 haben,\\r\\n#> Ergebnis von FUN(X[[1]]) hat aber Länge 0\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-10 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6939/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6938\", #>     \"id\": 1931984400, #>     \"node_id\": \"PR_kwDOAGIUpc5cM9Bz\", #>     \"number\": 6938, #>     \"title\": \"`starwars` data - Replace defunct API\", #>     \"user\": { #>       \"login\": \"steveharoz\", #>       \"id\": 2257540, #>       \"node_id\": \"MDQ6VXNlcjIyNTc1NDA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2257540?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/steveharoz\", #>       \"html_url\": \"https://github.com/steveharoz\", #>       \"followers_url\": \"https://api.github.com/users/steveharoz/followers\", #>       \"following_url\": \"https://api.github.com/users/steveharoz/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/steveharoz/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/steveharoz/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/steveharoz/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/steveharoz/orgs\", #>       \"repos_url\": \"https://api.github.com/users/steveharoz/repos\", #>       \"events_url\": \"https://api.github.com/users/steveharoz/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/steveharoz/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-08T18:17:10Z\", #>     \"updated_at\": \"2023-10-15T07:22:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6938\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6938\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6938.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6938.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"1. The API used to generate the `starwars` data is no longer operational. I found 2 possible replacements (https://swapi.dev/about and https://swapi.py4e.com/about). The py4e site was more complete, so I used that one.\\r\\n2. A typo was pointed out in #6840. The issue was fixed in swapi.dev but not in swapi.py4e.com, so I just fixed it myself in the code.\\r\\n3. One character's details (Jek Tono Porkins) were missing from the new API, so I added them in code using the old data.\\r\\n4. The order of the films was arbitrary in the old API. The new API sorts it by release date. (This is the bulk of the diff)\\r\\n5. There are only very minor changes to the other data coming from the new API. So there shouldn't be much impact.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6938/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6937\", #>     \"id\": 1931463299, #>     \"node_id\": \"PR_kwDOAGIUpc5cLR4K\", #>     \"number\": 6937, #>     \"title\": \"Update `storms` data through 2022\", #>     \"user\": { #>       \"login\": \"steveharoz\", #>       \"id\": 2257540, #>       \"node_id\": \"MDQ6VXNlcjIyNTc1NDA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2257540?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/steveharoz\", #>       \"html_url\": \"https://github.com/steveharoz\", #>       \"followers_url\": \"https://api.github.com/users/steveharoz/followers\", #>       \"following_url\": \"https://api.github.com/users/steveharoz/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/steveharoz/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/steveharoz/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/steveharoz/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/steveharoz/orgs\", #>       \"repos_url\": \"https://api.github.com/users/steveharoz/repos\", #>       \"events_url\": \"https://api.github.com/users/steveharoz/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/steveharoz/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-07T18:52:24Z\", #>     \"updated_at\": \"2023-10-07T18:52:24Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"CONTRIBUTOR\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6937\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6937\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6937.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6937.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"The data for 2022 was added by NOAA a few months ago. This PR just adds the new data by updating the source and running `data-row/storms.R`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6937/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6934\", #>     \"id\": 1922262606, #>     \"node_id\": \"I_kwDOAGIUpc5yk2ZO\", #>     \"number\": 6934, #>     \"title\": \"When `.unpack = TRUE`, `.names` should delay its column name uniqueness check\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 3407329987, #>         \"node_id\": \"LA_kwDOAGIUpc7LF7rD\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/columns%20%E2%86%94%EF%B8%8F\", #>         \"name\": \"columns ↔️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on columns: mutate(), select(),  rename(), relocate()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-10-02T16:38:23Z\", #>     \"updated_at\": \"2023-10-02T16:38:23Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Extracted from https://github.com/tidyverse/dplyr/issues/6933\\r\\n\\r\\nSometimes the function you apply in `across()` returns a tibble who's column names already uniquely identify that function (`TTR::TDI()` or `TTR::MACD()`), so you don't need to name the `list()` as that would be repetitive, and you don't need the `_1` or `_2` you get automatically.\\r\\n\\r\\nIt would be nice if you could set `.names = \\\"{.col}_\\\"` when `.unpack = TRUE` to handle this special case, but that runs the name uniqueness check too early. It creates two names called `var1_`, which do eventually get resolved _after_ the unpacking is done, and a second name uniqueness check is already done in `df_unpack()`, so I think we can skip the ones in `across_setup()` when `.unpack = TRUE`.\\r\\n\\r\\nEasiest way to do this is the probably give `across_setup()` a `name_repair` argument that we can set to `\\\"minimal\\\"` when `.unpack = TRUE`.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble(\\r\\n  var1 = seq(1, 100, 1)\\r\\n)\\r\\n\\r\\nmetric_a <- function(x) {\\r\\n  tibble::tibble(a = x, a_info = x + 1)\\r\\n}\\r\\nmetric_b <- function(x) {\\r\\n  tibble::tibble(b = x, b_info = x + 1)\\r\\n}\\r\\n\\r\\n# dont need 1 and 2 here\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      \\\\(.x) metric_a(.x),\\r\\n      \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> # A tibble: 100 × 5\\r\\n#>     var1 var1_1_a var1_1_a_info var1_2_b var1_2_b_info\\r\\n#>    <dbl>    <dbl>         <dbl>    <dbl>         <dbl>\\r\\n#>  1     1        1             2        1             2\\r\\n#>  2     2        2             3        2             3\\r\\n#>  3     3        3             4        3             4\\r\\n#>  4     4        4             5        4             5\\r\\n#>  5     5        5             6        5             6\\r\\n#>  6     6        6             7        6             7\\r\\n#>  7     7        7             8        7             8\\r\\n#>  8     8        8             9        8             9\\r\\n#>  9     9        9            10        9            10\\r\\n#> 10    10       10            11       10            11\\r\\n#> # ℹ 90 more rows\\r\\n\\r\\n# this is also repetitive\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      a = \\\\(.x) metric_a(.x),\\r\\n      b = \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> # A tibble: 100 × 5\\r\\n#>     var1 var1_a_a var1_a_a_info var1_b_b var1_b_b_info\\r\\n#>    <dbl>    <dbl>         <dbl>    <dbl>         <dbl>\\r\\n#>  1     1        1             2        1             2\\r\\n#>  2     2        2             3        2             3\\r\\n#>  3     3        3             4        3             4\\r\\n#>  4     4        4             5        4             5\\r\\n#>  5     5        5             6        5             6\\r\\n#>  6     6        6             7        6             7\\r\\n#>  7     7        7             8        7             8\\r\\n#>  8     8        8             9        8             9\\r\\n#>  9     9        9            10        9            10\\r\\n#> 10    10       10            11       10            11\\r\\n#> # ℹ 90 more rows\\r\\n\\r\\n# ideally:\\r\\ndf |>\\r\\n  mutate(across(\\r\\n    var1,\\r\\n    list(\\r\\n      a = \\\\(.x) metric_a(.x),\\r\\n      b = \\\\(.x) metric_b(.x)\\r\\n    ),\\r\\n    .names = \\\"{.col}_\\\",\\r\\n    .unpack = TRUE\\r\\n  ))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(...)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Names must be unique.\\r\\n#> ✖ These names are duplicated:\\r\\n#>   * \\\"var1_\\\" at locations 1 and 2.\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─dplyr::mutate(...)\\r\\n#>   2. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   3. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   4. │   ├─base::withCallingHandlers(...)\\r\\n#>   5. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   6. │     └─mask$eval_all_mutate(quo)\\r\\n#>   7. │       └─dplyr (local) eval()\\r\\n#>   8. └─dplyr::across(...)\\r\\n#>   9.   └─dplyr:::across_setup(...)\\r\\n#>  10.     └─vctrs::vec_as_names(...)\\r\\n#>  11.       └─vctrs (local) `<fn>`()\\r\\n#>  12.         └─vctrs:::validate_unique(names = names, arg = arg, call = call)\\r\\n#>  13.           └─vctrs:::stop_names_must_be_unique(names, arg, call = call)\\r\\n#>  14.             └─vctrs:::stop_names(...)\\r\\n#>  15.               └─vctrs:::stop_vctrs(...)\\r\\n#>  16.                 └─rlang::abort(message, class = c(class, \\\"vctrs_error\\\"), ..., call = call)\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-10-02 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6934/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6931\", #>     \"id\": 1908806733, #>     \"node_id\": \"I_kwDOAGIUpc5xxhRN\", #>     \"number\": 6931, #>     \"title\": \"`.data` does not work properly in case data is stored in a nested column\", #>     \"user\": { #>       \"login\": \"psychelzh\", #>       \"id\": 13306020, #>       \"node_id\": \"MDQ6VXNlcjEzMzA2MDIw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/13306020?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/psychelzh\", #>       \"html_url\": \"https://github.com/psychelzh\", #>       \"followers_url\": \"https://api.github.com/users/psychelzh/followers\", #>       \"following_url\": \"https://api.github.com/users/psychelzh/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/psychelzh/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/psychelzh/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/psychelzh/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/psychelzh/orgs\", #>       \"repos_url\": \"https://api.github.com/users/psychelzh/repos\", #>       \"events_url\": \"https://api.github.com/users/psychelzh/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/psychelzh/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-22T12:21:26Z\", #>     \"updated_at\": \"2023-09-22T12:22:11Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Please briefly describe your problem and what output you expect. If you have a question, please don't use this form. Instead, ask on <https://stackoverflow.com/> or <https://community.rstudio.com/>.\\r\\n\\r\\nPlease include a minimal reproducible example (AKA a reprex). If you've never heard of a [reprex](http://reprex.tidyverse.org/) before, start by reading <https://www.tidyverse.org/help/#reprex>.\\r\\n\\r\\n---\\r\\n\\r\\nHere my data is nested in one column called `dat`, then `.data` cannot detect a column with string, but `pick()` works as expect.\\r\\n\\r\\n``` r\\r\\nsuppressPackageStartupMessages(library(dplyr))\\r\\nlibrary(purrr)\\r\\ntest <- tibble::tribble(\\r\\n  ~target, ~dat,\\r\\n  \\\"x\\\", data.frame(id = 1:5, x = 1:5)\\r\\n) \\r\\ntest |> \\r\\n  mutate(\\r\\n    map2(\\r\\n      target, dat,\\r\\n      \\\\(target, dat) {\\r\\n        dat |> \\r\\n          mutate(y = .data[[target]])\\r\\n      }\\r\\n    )\\r\\n  )\\r\\n#> Error in eval(expr, envir, enclos): 找不到对象'target'\\r\\ntest |> \\r\\n  mutate(\\r\\n    map2(\\r\\n      target, dat,\\r\\n      \\\\(target, dat) {\\r\\n        dat |> \\r\\n          mutate(y = pick(all_of(target)))\\r\\n      }\\r\\n    )\\r\\n  )\\r\\n#> # A tibble: 1 × 3\\r\\n#>   target dat          `map2(...)` \\r\\n#>   <chr>  <list>       <list>      \\r\\n#> 1 x      <df [5 × 2]> <df [5 × 3]>\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-09-22 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6931/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6927\", #>     \"id\": 1888862482, #>     \"node_id\": \"PR_kwDOAGIUpc5Z8GJ9\", #>     \"number\": 6927, #>     \"title\": \"Implement reconstruct in C++\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-09T20:14:24Z\", #>     \"updated_at\": \"2023-09-10T18:13:19Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6927\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6927\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6927.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6927.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"This would allow duckplyr to remove all of its C code. Running revdepchecks now.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6927/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6925\", #>     \"id\": 1882664531, #>     \"node_id\": \"I_kwDOAGIUpc5wNy5T\", #>     \"number\": 6925, #>     \"title\": \"add_row weirdness\", #>     \"user\": { #>       \"login\": \"ggrothendieck\", #>       \"id\": 7840510, #>       \"node_id\": \"MDQ6VXNlcjc4NDA1MTA=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/7840510?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/ggrothendieck\", #>       \"html_url\": \"https://github.com/ggrothendieck\", #>       \"followers_url\": \"https://api.github.com/users/ggrothendieck/followers\", #>       \"following_url\": \"https://api.github.com/users/ggrothendieck/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/ggrothendieck/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/ggrothendieck/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/ggrothendieck/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/ggrothendieck/orgs\", #>       \"repos_url\": \"https://api.github.com/users/ggrothendieck/repos\", #>       \"events_url\": \"https://api.github.com/users/ggrothendieck/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/ggrothendieck/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-09-05T20:21:47Z\", #>     \"updated_at\": \"2023-10-25T12:54:45Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"After much experimenting I found that the first pipeline worked to add a row with the sum of the D and E rows. I would have thought one could replace `DE` with the expression to calculate it as in the second pipeline (which gives the wrong answer) and not use `reframe` (which gives an error).\\r\\n\\r\\n```\\r\\nlibrary(dplyr)\\r\\npackageVersion(\\\"dplyr\\\")\\r\\n## [1] ‘1.1.3’\\r\\n\\r\\ndata2 <- tibble(value = head(LETTERS, 5), # A to E\\r\\n   Q1 = rep(20, 5L),\\r\\n   Q2 = c(0, 40, 40, 20, 0),\\r\\n   Q3 = c(0, 40, 20, 0, 40))\\r\\n \\r\\n# 1. works\\r\\ndata2 %>%\\r\\n  mutate(DE = value %in% c(\\\"D\\\", \\\"E\\\")) %>%\\r\\n  reframe(add_row(., value = \\\"DE\\\", across(-1, ~ sum(DE * .x)))) %>%\\r\\n  select(-DE)\\r\\n# A tibble: 6 × 4\\r\\n  value    Q1    Q2    Q3\\r\\n  <chr> <dbl> <dbl> <dbl>\\r\\n1 A        20     0     0\\r\\n2 B        20    40    40\\r\\n3 C        20    40    20\\r\\n4 D        20    20     0\\r\\n5 E        20     0    40\\r\\n6 DE       40    20    40\\r\\n \\r\\n# 2. replacing DE w expr to calc it gives wrong ans\\r\\ndata2 %>%\\r\\n   reframe(add_row(., value = \\\"DE\\\", across(-1, ~ sum((value %in% c(\\\"D\\\", \\\"E\\\")) * .x))))\\r\\n## # A tibble: 6 × 4\\r\\n##   value    Q1    Q2    Q3\\r\\n##   <chr> <dbl> <dbl> <dbl>\\r\\n## 1 A        20     0     0\\r\\n## 2 B        20    40    40\\r\\n## 3 C        20    40    20\\r\\n## 4 D        20    20     0\\r\\n## 5 E        20     0    40\\r\\n## 6 DE        0     0     0\\r\\n \\r\\n# 3. removing reframe fails w error\\r\\ndata2 %>%\\r\\n   mutate(DE = value %in% c(\\\"D\\\", \\\"E\\\")) %>%\\r\\n   add_row(value = \\\"DE\\\", across(-1, ~ sum(DE * .x))) %>%\\r\\n   select(-DE)\\r\\n## Error in `across()`:\\r\\n## ! Must only be used inside data-masking verbs like `mutate()`, `filter()`, and `group_by()`.\\r\\n## Run `rlang::last_trace()` to see where the error occurred.\\r\\n```\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6925/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6924\", #>     \"id\": 1881336065, #>     \"node_id\": \"I_kwDOAGIUpc5wIukB\", #>     \"number\": 6924, #>     \"title\": \"dplyr::distinct doesn't match identical strings with different encoding\", #>     \"user\": { #>       \"login\": \"williamlai2\", #>       \"id\": 44103957, #>       \"node_id\": \"MDQ6VXNlcjQ0MTAzOTU3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/44103957?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/williamlai2\", #>       \"html_url\": \"https://github.com/williamlai2\", #>       \"followers_url\": \"https://api.github.com/users/williamlai2/followers\", #>       \"following_url\": \"https://api.github.com/users/williamlai2/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/williamlai2/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/williamlai2/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/williamlai2/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/williamlai2/orgs\", #>       \"repos_url\": \"https://api.github.com/users/williamlai2/repos\", #>       \"events_url\": \"https://api.github.com/users/williamlai2/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/williamlai2/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-09-05T07:03:51Z\", #>     \"updated_at\": \"2023-09-17T23:32:57Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Similar to #1179 with test from https://github.com/tidyverse/dplyr/commit/61b04c752d38e3d2bb24560e2b0c6d2d31a00199\\r\\n\\r\\nFrom my data:\\r\\n```\\r\\na <- tibble::tribble(\\r\\n  ~REPORT_RESULT_UNIT,\\r\\n              \\\"µS/cm\\\",\\r\\n               \\\"mg/L\\\",\\r\\n               \\\"µg/L\\\",\\r\\n                 \\\"su\\\",\\r\\n                \\\"ntu\\\",\\r\\n           \\\"µmhos/cm\\\",\\r\\n           \\\"µmhos/cm\\\",\\r\\n               \\\"pg/L\\\",\\r\\n                 \\\"mV\\\",\\r\\n            \\\"Celsius\\\",\\r\\n               \\\"ng/L\\\",\\r\\n              \\\"µS/cm\\\"\\r\\n  )\\r\\n```\\r\\n\\r\\nWith this encoding:\\r\\n```\\r\\n> Encoding(a$REPORT_RESULT_UNIT[1])\\r\\n[1] \\\"latin1\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[12])\\r\\n[1] \\\"UTF-8\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[6])\\r\\n[1] \\\"UTF-8\\\"\\r\\n> Encoding(a$REPORT_RESULT_UNIT[7])\\r\\n[1] \\\"UTF-8\\\"\\r\\n\\r\\n```\\r\\n\\r\\nThen:\\r\\n```\\r\\na %>% \\r\\n  distinct(REPORT_RESULT_UNIT) \\r\\n\\r\\n\\r\\n# # A tibble: 12 x 1\\r\\n# REPORT_RESULT_UNIT\\r\\n# <chr>             \\r\\n# 1 µS/cm             \\r\\n# 2 mg/L              \\r\\n# 3 µg/L              \\r\\n# 4 su                \\r\\n# 5 ntu               \\r\\n# 6 µmhos/cm          \\r\\n# 7 µmhos/cm          \\r\\n# 8 pg/L              \\r\\n# 9 mV                \\r\\n# 10 Celsius           \\r\\n# 11 ng/L              \\r\\n# 12 µS/cm     \\r\\n```\\r\\n\\r\\n```\\r\\n> sessionInfo()\\r\\nR version 4.1.2 (2021-11-01)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows 10 x64 (build 19045)\\r\\n\\r\\nMatrix products: default\\r\\n\\r\\nlocale:\\r\\n[1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252    LC_MONETARY=English_Australia.1252 LC_NUMERIC=C                      \\r\\n[5] LC_TIME=English_Australia.1252    \\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n\\r\\nother attached packages:\\r\\n[1] dplyr_1.0.9    testthat_3.1.4\\r\\n```\\r\\n\\r\\nI note that this fails:\\r\\n```\\r\\nlibrary(testthat)\\r\\nlibrary(dplyr)\\r\\n\\r\\ntest_that(\\\"distinct respects encodings (#1179)\\\", {\\r\\n  x <- c(\\\"Montr\\\\u00e9al\\\", \\\"Montr\\\\u00e9al\\\")\\r\\n  Encoding(x[2]) <- \\\"\\\"\\r\\n  df <- data.frame(x=x)\\r\\n  expect_equal( nrow(distinct(df)), 1L )\\r\\n})\\r\\n```\\r\\n\\r\\n```\\r\\n-- Failure (Line 5): distinct respects encodings (#1179) -----------------------\\r\\nnrow(distinct(df)) not equal to 1L.\\r\\n1/1 mismatches\\r\\n[1] 2 - 1 == 1\\r\\n\\r\\nError in reporter$stop_if_needed() : Test failed\\r\\n```\\r\\n\\r\\nThough when I try it with my data it is fine\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6924/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6923\", #>     \"id\": 1879065733, #>     \"node_id\": \"PR_kwDOAGIUpc5Za_p5\", #>     \"number\": 6923, #>     \"title\": \"Update r4ds url\", #>     \"user\": { #>       \"login\": \"zekiakyol\", #>       \"id\": 40212849, #>       \"node_id\": \"MDQ6VXNlcjQwMjEyODQ5\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/40212849?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/zekiakyol\", #>       \"html_url\": \"https://github.com/zekiakyol\", #>       \"followers_url\": \"https://api.github.com/users/zekiakyol/followers\", #>       \"following_url\": \"https://api.github.com/users/zekiakyol/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/zekiakyol/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/zekiakyol/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/zekiakyol/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/zekiakyol/orgs\", #>       \"repos_url\": \"https://api.github.com/users/zekiakyol/repos\", #>       \"events_url\": \"https://api.github.com/users/zekiakyol/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/zekiakyol/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-09-03T11:49:35Z\", #>     \"updated_at\": \"2023-09-15T10:50:31Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6923\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6923\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6923.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6923.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"- This pull request updates r4ds(<https://r4ds.had.co.nz/>) to r4ds 2e (https://r4ds.hadley.nz/) on the package website.\\r\\n- **README.md** is updated by running `devtools::build_readme()`.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6923/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6921\", #>     \"id\": 1874567994, #>     \"node_id\": \"I_kwDOAGIUpc5vu6M6\", #>     \"number\": 6921, #>     \"title\": \"bug in `dplyr::near`?\", #>     \"user\": { #>       \"login\": \"kaz462\", #>       \"id\": 47867131, #>       \"node_id\": \"MDQ6VXNlcjQ3ODY3MTMx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/47867131?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/kaz462\", #>       \"html_url\": \"https://github.com/kaz462\", #>       \"followers_url\": \"https://api.github.com/users/kaz462/followers\", #>       \"following_url\": \"https://api.github.com/users/kaz462/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/kaz462/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/kaz462/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/kaz462/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/kaz462/orgs\", #>       \"repos_url\": \"https://api.github.com/users/kaz462/repos\", #>       \"events_url\": \"https://api.github.com/users/kaz462/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/kaz462/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 6, #>     \"created_at\": \"2023-08-31T00:49:25Z\", #>     \"updated_at\": \"2023-10-21T09:49:38Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Is the following example a bug in `near`?\\r\\n```r\\r\\n> near(1.1 * 100 * 10^200, 110 * 10^200)\\r\\n[1] FALSE\\r\\n```\\r\\n_Originally posted by @bundfussr in https://github.com/pharmaverse/admiral/issues/2060#issuecomment-1691876301_\\r\\n\\r\\nThe same example works as expected with `base::all.equal()`\\r\\n```r\\r\\n> all.equal(1.1 * 100 * 10^200, 110 * 10^200)\\r\\n[1] TRUE\\r\\n```       \", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6921/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6917\", #>     \"id\": 1862427308, #>     \"node_id\": \"I_kwDOAGIUpc5vAmKs\", #>     \"number\": 6917, #>     \"title\": \"Add natural sort option to `arrange()`\", #>     \"user\": { #>       \"login\": \"bounlu\", #>       \"id\": 17899927, #>       \"node_id\": \"MDQ6VXNlcjE3ODk5OTI3\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/17899927?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/bounlu\", #>       \"html_url\": \"https://github.com/bounlu\", #>       \"followers_url\": \"https://api.github.com/users/bounlu/followers\", #>       \"following_url\": \"https://api.github.com/users/bounlu/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/bounlu/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/bounlu/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/bounlu/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/bounlu/orgs\", #>       \"repos_url\": \"https://api.github.com/users/bounlu/repos\", #>       \"events_url\": \"https://api.github.com/users/bounlu/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/bounlu/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-08-23T01:57:49Z\", #>     \"updated_at\": \"2023-08-23T13:16:51Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Currently there is no option for `arrange()` to mimic the natural/human sorting of columns containing alphanumerical characters. In Bash, this can be achieved by `sort -V`. Please add this feature to `arrange()`.\\r\\n\\r\\n```\\r\\ndf %>% arrange(Sample)\\r\\n\\r\\nSample\\r\\nS10a\\r\\nS10b\\r\\nS11a\\r\\nS11b\\r\\nS12a\\r\\nS12b\\r\\nS13a\\r\\nS13b\\r\\nS14a\\r\\nS14b\\r\\nS15a\\r\\nS15b\\r\\nS16\\r\\nS17\\r\\nS18\\r\\nS19\\r\\nS1a\\r\\nS1b\\r\\nS2a\\r\\nS2b\\r\\nS3a\\r\\nS3b\\r\\nS4a\\r\\nS4b\\r\\nS5a\\r\\nS5b\\r\\nS6a\\r\\nS6b\\r\\nS7a\\r\\nS7b\\r\\nS8\\r\\nS9\\r\\n```\\r\\n\\r\\nIn Bash, we can sort the same column with `sort -V`:\\r\\n\\r\\n```\\r\\n$ sort -V Sample\\r\\nS1a\\r\\nS1b\\r\\nS2a\\r\\nS2b\\r\\nS3a\\r\\nS3b\\r\\nS4a\\r\\nS4b\\r\\nS5a\\r\\nS5b\\r\\nS6a\\r\\nS6b\\r\\nS7a\\r\\nS7b\\r\\nS8\\r\\nS9\\r\\nS10a\\r\\nS10b\\r\\nS11a\\r\\nS11b\\r\\nS12a\\r\\nS12b\\r\\nS13a\\r\\nS13b\\r\\nS14a\\r\\nS14b\\r\\nS15a\\r\\nS15b\\r\\nS16\\r\\nS17\\r\\nS18\\r\\nS19\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6917/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6915\", #>     \"id\": 1858206506, #>     \"node_id\": \"I_kwDOAGIUpc5uwfsq\", #>     \"number\": 6915, #>     \"title\": \"FR: `rows_clean()`?\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-20T17:27:26Z\", #>     \"updated_at\": \"2023-08-20T17:27:26Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Do we want to add a function that clears all rows to the `rows_*()` family? For data frames, this is `df[0, ]`, but this will be useful for databases and `in_place = TRUE` .\\r\\n\\r\\nDownstream: https://github.com/cynkra/dm/issues/851.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6915/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6913\", #>     \"id\": 1850514467, #>     \"node_id\": \"I_kwDOAGIUpc5uTJwj\", #>     \"number\": 6913, #>     \"title\": \"When a data frame has an \\\"n\\\" column, sometime count() automatically uses it to weight counts, other times it does not\", #>     \"user\": { #>       \"login\": \"zshipstead\", #>       \"id\": 95093393, #>       \"node_id\": \"U_kgDOBasCkQ\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/95093393?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/zshipstead\", #>       \"html_url\": \"https://github.com/zshipstead\", #>       \"followers_url\": \"https://api.github.com/users/zshipstead/followers\", #>       \"following_url\": \"https://api.github.com/users/zshipstead/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/zshipstead/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/zshipstead/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/zshipstead/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/zshipstead/orgs\", #>       \"repos_url\": \"https://api.github.com/users/zshipstead/repos\", #>       \"events_url\": \"https://api.github.com/users/zshipstead/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/zshipstead/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-14T20:46:01Z\", #>     \"updated_at\": \"2023-08-14T20:46:01Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I have a data frame that has a column with n. Vars are\\r\\n\\r\\nIdentifier\\r\\nGroupName\\r\\nn (which was a count used to determine group name)\\r\\n\\r\\nI have the same line of code that I run, so it is not a matter of me typing differently. I want to count the group name\\r\\n\\r\\ndata %>% count(GroupName) %>% distinct()\\r\\n\\r\\nSometimes when I run this code, it gives me a simple count of the different group names. Other times it weighs them based on n. Obviously it stops if I rename the n column, but the inconsistency of performance is very concerning.\\r\\n\\r\\nAre there known conflicts with other packages I might have loaded?\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6913/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6912\", #>     \"id\": 1849765675, #>     \"node_id\": \"I_kwDOAGIUpc5uQS8r\", #>     \"number\": 6912, #>     \"title\": \"Catch and rethrow the \\\"overflow\\\" error from vctrs during joins\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 1257707950, #>         \"node_id\": \"MDU6TGFiZWwxMjU3NzA3OTUw\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/tables%20%F0%9F%A7%AE\", #>         \"name\": \"tables 🧮\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"joins and set operations\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-14T13:20:20Z\", #>     \"updated_at\": \"2023-08-14T13:20:20Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"See https://github.com/r-lib/vctrs/pull/1869, requires dev vctrs right now.\\r\\n\\r\\nWe could throw a much more informative error. Probably advising the user to check their join keys, because a misspecified join is typically the source of this overflow (as seen by many people opening vctrs issues about this)\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6912/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6909\", #>     \"id\": 1847851427, #>     \"node_id\": \"PR_kwDOAGIUpc5XyB0w\", #>     \"number\": 6909, #>     \"title\": \"Materialize results in collect()\", #>     \"user\": { #>       \"login\": \"krlmlr\", #>       \"id\": 1741643, #>       \"node_id\": \"MDQ6VXNlcjE3NDE2NDM=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/1741643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/krlmlr\", #>       \"html_url\": \"https://github.com/krlmlr\", #>       \"followers_url\": \"https://api.github.com/users/krlmlr/followers\", #>       \"following_url\": \"https://api.github.com/users/krlmlr/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/krlmlr/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/krlmlr/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/krlmlr/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/krlmlr/orgs\", #>       \"repos_url\": \"https://api.github.com/users/krlmlr/repos\", #>       \"events_url\": \"https://api.github.com/users/krlmlr/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/krlmlr/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 2, #>     \"created_at\": \"2023-08-12T08:16:34Z\", #>     \"updated_at\": \"2023-08-24T03:06:56Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"draft\": false, #>     \"pull_request\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/pulls/6909\", #>       \"html_url\": \"https://github.com/tidyverse/dplyr/pull/6909\", #>       \"diff_url\": \"https://github.com/tidyverse/dplyr/pull/6909.diff\", #>       \"patch_url\": \"https://github.com/tidyverse/dplyr/pull/6909.patch\", #>       \"merged_at\": {} #>     }, #>     \"body\": \"for duckplyr.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6909/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6906\", #>     \"id\": 1839401013, #>     \"node_id\": \"I_kwDOAGIUpc5towg1\", #>     \"number\": 6906, #>     \"title\": \"Filtering ordered factor via between() does not agree with filtering using a conditional expression \", #>     \"user\": { #>       \"login\": \"Generalized\", #>       \"id\": 60151643, #>       \"node_id\": \"MDQ6VXNlcjYwMTUxNjQz\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/60151643?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/Generalized\", #>       \"html_url\": \"https://github.com/Generalized\", #>       \"followers_url\": \"https://api.github.com/users/Generalized/followers\", #>       \"following_url\": \"https://api.github.com/users/Generalized/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/Generalized/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/Generalized/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/Generalized/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/Generalized/orgs\", #>       \"repos_url\": \"https://api.github.com/users/Generalized/repos\", #>       \"events_url\": \"https://api.github.com/users/Generalized/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/Generalized/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 3, #>     \"created_at\": \"2023-08-07T12:55:59Z\", #>     \"updated_at\": \"2023-08-13T03:15:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"The result of using `between()` in filtering is not equivalent to evaluating a conditional expression when working with ordered factors.\\r\\n\\r\\n```{r}\\r\\n> (x <- data.frame(Visit = c(\\\"Discharge\\\", \\\"Month 3\\\", \\\"Month 6\\\", \\\"Month 12\\\", \\\"Month 20\\\")))\\r\\n      Visit\\r\\n1 Discharge\\r\\n2   Month 3\\r\\n3   Month 6\\r\\n4  Month 12\\r\\n5  Month 20\\r\\n\\r\\n> class(x$Visit)\\r\\n[1] \\\"character\\\"\\r\\n```\\r\\n\\r\\nNow let's make it an ordered factor with assumed levels (used later for other operations):\\r\\n```{r}\\r\\n> (x$Visit <- factor(x$Visit, levels = c(\\\"Baseline\\\", \\\"Discharge\\\", \\\"Month 3\\\", \\\"Month 6\\\", \\\"Month 12\\\", \\\"Month 20\\\", \\\"Premature\\\"), ordered = TRUE))\\r\\n[1] Discharge Month 3   Month 6   Month 12  Month 20 \\r\\nLevels: Baseline < Discharge < Month 3 < Month 6 < Month 12 < Month 20 < Premature\\r\\n```\\r\\n\\r\\nWhen filtering using the conjunction of conditions it works\\r\\n```{r}\\r\\n> x %>% filter(Visit >= \\\"Discharge\\\" & Visit <= \\\"Month 20\\\")\\r\\n      Visit\\r\\n1 Discharge\\r\\n2   Month 3\\r\\n3   Month 6\\r\\n4  Month 12\\r\\n5  Month 20\\r\\n```\\r\\nWhen using the convenient between(), it doesn't\\r\\n```{r}\\r\\n> x %>% filter(between(Visit, \\\"Discharge\\\", \\\"Month 20\\\"))\\r\\n      Visit\\r\\n1 Discharge\\r\\n2  Month 12\\r\\n3  Month 20\\r\\n```\\r\\n2 items are missing in the output.\\r\\n\\r\\n-----\\r\\nR version 4.2.0 (2022-04-22 ucrt)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows 10 x64 (build 19045)\\r\\n\\r\\n> packageVersion(\\\"dplyr\\\")\\r\\n[1] ‘1.1.1’\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6906/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6905\", #>     \"id\": 1839123639, #>     \"node_id\": \"I_kwDOAGIUpc5tnsy3\", #>     \"number\": 6905, #>     \"title\": \"`bind_rows()` for database tables\", #>     \"user\": { #>       \"login\": \"mgirlich\", #>       \"id\": 18258854, #>       \"node_id\": \"MDQ6VXNlcjE4MjU4ODU0\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/18258854?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/mgirlich\", #>       \"html_url\": \"https://github.com/mgirlich\", #>       \"followers_url\": \"https://api.github.com/users/mgirlich/followers\", #>       \"following_url\": \"https://api.github.com/users/mgirlich/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/mgirlich/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/mgirlich/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/mgirlich/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/mgirlich/orgs\", #>       \"repos_url\": \"https://api.github.com/users/mgirlich/repos\", #>       \"events_url\": \"https://api.github.com/users/mgirlich/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/mgirlich/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-07T10:06:08Z\", #>     \"updated_at\": \"2023-08-07T10:06:08Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"It would be nice if `bind_rows()` would work for database tables.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\nlibrary(purrr)\\r\\ncon <- DBI::dbConnect(RSQLite::SQLite(), \\\":memory:\\\")\\r\\n\\r\\n# Create random slices of mtcars\\r\\ntables <-\\r\\n  1:5 |>\\r\\n  map(function(n) {\\r\\n    tbl_name <- paste0(\\\"mtcars_\\\", n)\\r\\n    copy_to(con, slice_sample(mtcars, n = 3), tbl_name)\\r\\n\\r\\n    tbl(con, tbl_name)\\r\\n  })\\r\\nbind_rows(!!!tables)\\r\\n#> Error in `bind_rows()`:\\r\\n#> ! Argument 1 must be a data frame or a named atomic vector.\\r\\n#> Backtrace:\\r\\n#>     ▆\\r\\n#>  1. └─dplyr::bind_rows(!!!tables)\\r\\n#>  2.   └─rlang::abort(glue(\\\"Argument {i} must be a data frame or a named atomic vector.\\\"))\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-08-07 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\\r\\n\\r\\nI know there were issues with the double dispatch and what happens if local tables and database tables are mixed.\\r\\nBut I think it would be sufficient if either all inputs are local tables or database tables.\\r\\nThis was also requested again in dbplyr: https://github.com/tidyverse/dbplyr/issues/1342.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/reactions\", #>       \"total_count\": 4, #>       \"+1\": 4, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6905/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6900\", #>     \"id\": 1835459833, #>     \"node_id\": \"I_kwDOAGIUpc5tZuT5\", #>     \"number\": 6900, #>     \"title\": \"Improve na_if documentation re vctrs coercion rules\", #>     \"user\": { #>       \"login\": \"DanielEWeeks\", #>       \"id\": 8495972, #>       \"node_id\": \"MDQ6VXNlcjg0OTU5NzI=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/8495972?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DanielEWeeks\", #>       \"html_url\": \"https://github.com/DanielEWeeks\", #>       \"followers_url\": \"https://api.github.com/users/DanielEWeeks/followers\", #>       \"following_url\": \"https://api.github.com/users/DanielEWeeks/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DanielEWeeks/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DanielEWeeks/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DanielEWeeks/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DanielEWeeks/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DanielEWeeks/repos\", #>       \"events_url\": \"https://api.github.com/users/DanielEWeeks/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DanielEWeeks/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-08-03T17:29:55Z\", #>     \"updated_at\": \"2023-08-03T17:30:18Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"**Brief description of the problem**\\r\\n\\r\\nUsing `na_if` it generated error messages that I found mystifying:\\r\\n\\r\\n```r\\r\\n> na_if(\\\"ID\\\", -3333)\\r\\nError in `na_if()`:\\r\\n! Can't convert `y` <double> to match type of `x` <character>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n> na_if(\\\"ID\\\", \\\"-3333\\\")\\r\\n[1] \\\"ID\\\"\\r\\n> na_if( 1, \\\"-3333\\\")\\r\\nError in `na_if()`:\\r\\n! Can't convert `y` <character> to match type of `x` <double>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n> na_if( 1, -3333)\\r\\n[1] 1\\r\\n```\\r\\nCurrently the `na_if(x, y)` documentation simply states:\\r\\n\\r\\n\\\"y is cast to the type of x before comparison.\\\"\\r\\n\\r\\nso it sounds like it should be able, when doing `na_if(\\\"ID\\\", -3333)`, to cast the numeric `-3333` to character before doing the comparison.  \\r\\n\\r\\nSo I was initially mystified by this behavior (above), but then it was explained to me that `na_if` is using {vctrs} under the hood, so it is using `vctrs` coercion rules.   As such, please consider extending the `na_if` documentation for the `na_if` function with a bit more text and relevant examples to explain and clarify this.  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6900/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6897\", #>     \"id\": 1824687161, #>     \"node_id\": \"I_kwDOAGIUpc5swoQ5\", #>     \"number\": 6897, #>     \"title\": \"Using `across()` within `mutate()` is appreciably slower than mutating columns individually\", #>     \"user\": { #>       \"login\": \"MattJEM\", #>       \"id\": 26907416, #>       \"node_id\": \"MDQ6VXNlcjI2OTA3NDE2\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/26907416?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/MattJEM\", #>       \"html_url\": \"https://github.com/MattJEM\", #>       \"followers_url\": \"https://api.github.com/users/MattJEM/followers\", #>       \"following_url\": \"https://api.github.com/users/MattJEM/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/MattJEM/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/MattJEM/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/MattJEM/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/MattJEM/orgs\", #>       \"repos_url\": \"https://api.github.com/users/MattJEM/repos\", #>       \"events_url\": \"https://api.github.com/users/MattJEM/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/MattJEM/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-07-27T15:58:10Z\", #>     \"updated_at\": \"2023-07-28T04:41:03Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"If I group a dataset and apply the same function across multiple columns using `mutate(across(...))` I see a performance decrease compared to individually mutating the columns. It is 5.31s vs 0.053s in the reprex, but in my actual, much larger dataset the difference is 1.5 hours vs a couple of minutes.\\r\\n\\r\\n---\\r\\n\\r\\n`sessionInfo()`\\r\\n```r\\r\\nR version 4.3.1 (2023-06-16 ucrt)\\r\\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\\r\\nRunning under: Windows Server 2019 x64 (build 17763)\\r\\n\\r\\nMatrix products: default\\r\\n\\r\\n\\r\\nlocale:\\r\\n[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252\\r\\n[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    \\r\\n\\r\\ntime zone: America/New_York\\r\\ntzcode source: internal\\r\\n\\r\\nattached base packages:\\r\\n[1] stats     graphics  grDevices utils     datasets  methods   base     \\r\\n\\r\\nother attached packages:\\r\\n[1] modeldata_1.1.0 dplyr_1.1.2    \\r\\n\\r\\nloaded via a namespace (and not attached):\\r\\n [1] utf8_1.2.3        R6_2.5.1          tidyselect_1.2.0  magrittr_2.0.3    glue_1.6.2        tibble_3.2.1     \\r\\n [7] pkgconfig_2.0.3   generics_0.1.3    lifecycle_1.0.3   cli_3.6.1         fansi_1.0.4       vctrs_0.6.3      \\r\\n[13] withr_2.5.0       compiler_4.3.1    rstudioapi_0.15.0 tools_4.3.1       pillar_1.9.0      crayon_1.5.2     \\r\\n[19] rlang_1.1.1\\r\\n```\\r\\n---\\r\\nReprex\\r\\n```r\\r\\nlibrary(dplyr)\\r\\nlibrary(modeldata)\\r\\n\\r\\ndata(ames)\\r\\n\\r\\nstart_time1 <- Sys.time()\\r\\names_calc1 <- ames %>%\\r\\n  group_by(Year_Built, MS_Zoning) %>%\\r\\n  mutate(across(First_Flr_SF:TotRms_AbvGrd, mean, na.rm = TRUE, .names = '{.col}_mean')) %>%\\r\\n  ungroup()\\r\\nstop_time1 <- Sys.time()\\r\\n\\r\\nstart_time2 <- Sys.time()\\r\\names_calc2 <- ames %>%\\r\\n  group_by(Year_Built, MS_Zoning) %>%\\r\\n  mutate(First_Flr_SF_mean = mean(First_Flr_SF, na.rm = TRUE),\\r\\n         Second_Flr_SF_mean = mean(Second_Flr_SF, na.rm = TRUE),\\r\\n         Gr_Liv_Area_mean = mean(Gr_Liv_Area, na.rm = TRUE),\\r\\n         Bsmt_Full_Bath_mean = mean(Bsmt_Full_Bath, na.rm = TRUE),\\r\\n         Bsmt_Half_Bath_mean = mean(Bsmt_Half_Bath, na.rm = TRUE),\\r\\n         Full_Bath_mean = mean(Full_Bath, na.rm = TRUE),\\r\\n         Half_Bath_mean = mean(Half_Bath, na.rm = TRUE),\\r\\n         Bedroom_AbvGr_mean = mean(Bedroom_AbvGr, na.rm = TRUE),\\r\\n         Kitchen_AbvGr_mean = mean(Kitchen_AbvGr, na.rm = TRUE),\\r\\n         TotRms_AbvGrd_mean = mean(TotRms_AbvGrd, na.rm = TRUE)) %>%\\r\\n  ungroup()\\r\\nstop_time2 <- Sys.time()\\r\\n\\r\\nstop_time1 - start_time1 # Using across() takes 5.313556 secs\\r\\nstop_time2 - start_time2 # Individually mutating takes 0.05337405 secs\\r\\n```\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6897/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6896\", #>     \"id\": 1824054486, #>     \"node_id\": \"I_kwDOAGIUpc5suNzW\", #>     \"number\": 6896, #>     \"title\": \"`bind_rows` now failing when a column includes JSON vectors\", #>     \"user\": { #>       \"login\": \"James-G-Hill\", #>       \"id\": 2002036, #>       \"node_id\": \"MDQ6VXNlcjIwMDIwMzY=\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/2002036?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/James-G-Hill\", #>       \"html_url\": \"https://github.com/James-G-Hill\", #>       \"followers_url\": \"https://api.github.com/users/James-G-Hill/followers\", #>       \"following_url\": \"https://api.github.com/users/James-G-Hill/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/James-G-Hill/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/James-G-Hill/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/James-G-Hill/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/James-G-Hill/orgs\", #>       \"repos_url\": \"https://api.github.com/users/James-G-Hill/repos\", #>       \"events_url\": \"https://api.github.com/users/James-G-Hill/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/James-G-Hill/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-27T10:10:53Z\", #>     \"updated_at\": \"2023-07-27T10:10:53Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Using `bind_rows` (dplyr version 1.1.2) with tibbles including JSON produced from `jsonlite` produces and error whereas it previously worked (dplyr 1.0.0 for example)\\r\\n\\r\\n```r\\r\\ndplyr::bind_rows(\\r\\n  dplyr::tibble(msg = jsonlite::toJSON(list(\\\"a\\\"), auto_unbox = TRUE)),\\r\\n  dplyr::tibble(msg = jsonlite::toJSON(list(\\\"b\\\"), auto_unbox = TRUE))\\r\\n)\\r\\n```\\r\\n\\r\\nError:\\r\\n\\r\\n```\\r\\nError in `dplyr::bind_rows()`:\\r\\n! Can't convert `..1$msg` <json> to match type of `msg` <vctrs:::common_class_fallback>.\\r\\nRun `rlang::last_trace()` to see where the error occurred.\\r\\n```\\r\\n\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6896/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6895\", #>     \"id\": 1820741012, #>     \"node_id\": \"I_kwDOAGIUpc5shk2U\", #>     \"number\": 6895, #>     \"title\": \" Confirm if `dplyr::across` can pass same length of vector to  `.names` \", #>     \"user\": { #>       \"login\": \"ynsec37\", #>       \"id\": 98389771, #>       \"node_id\": \"U_kgDOBd1PCw\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/98389771?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/ynsec37\", #>       \"html_url\": \"https://github.com/ynsec37\", #>       \"followers_url\": \"https://api.github.com/users/ynsec37/followers\", #>       \"following_url\": \"https://api.github.com/users/ynsec37/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/ynsec37/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/ynsec37/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/ynsec37/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/ynsec37/orgs\", #>       \"repos_url\": \"https://api.github.com/users/ynsec37/repos\", #>       \"events_url\": \"https://api.github.com/users/ynsec37/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/ynsec37/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 1, #>     \"created_at\": \"2023-07-25T16:54:41Z\", #>     \"updated_at\": \"2023-08-01T17:18:07Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"Dear developer,\\r\\n\\r\\nI found the below example work well but no related description in current [official document](https://dplyr.tidyverse.org/reference/across.html).\\r\\n\\r\\n> .names\\t A glue specification that describes how to name the output columns. This can use {.col} to stand for the selected column name, and {.fn} to stand for the name of the function being applied. The default (NULL) is equivalent to \\\"{.col}\\\" for the single function case and \\\"{.col}_{.fn}\\\" for the case where a list is used for .fns.\\r\\n\\r\\n\\r\\n\\r\\nI just want to confirm whether this way is right or accepted, especilly when the new variable names can not simply be computed by `{.col}` or `{.fn}`\\r\\n\\r\\n```r\\r\\nlibrary(dplyr, warn.conflicts = FALSE)\\r\\n\\r\\ndf <- tibble::tibble(a = 1, b = 2, c = 3)\\r\\n\\r\\ncols <- c(\\\"a\\\", \\\"b\\\", \\\"c\\\")\\r\\nnew_cols <- c(\\\"x\\\", \\\"y\\\", \\\"z\\\")\\r\\n\\r\\ndf %>%\\r\\n  mutate(across(\\r\\n    .cols = all_of(cols),\\r\\n    .fns = ~ .x + 10,\\r\\n    .names = \\\"{new_cols}\\\"\\r\\n  ))\\r\\n#> # A tibble: 1 × 6\\r\\n#>       a     b     c     x     y     z\\r\\n#>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#> 1     1     2     3    11    12    13\\r\\n```\\r\\nThank very much for your reply.\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/reactions\", #>       \"total_count\": 2, #>       \"+1\": 1, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 1 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6895/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6892\", #>     \"id\": 1818429552, #>     \"node_id\": \"I_kwDOAGIUpc5sYwhw\", #>     \"number\": 6892, #>     \"title\": \"dplyr::across inappropriately rewrites dollar indexes my function code\", #>     \"user\": { #>       \"login\": \"DarwinAwardWinner\", #>       \"id\": 228145, #>       \"node_id\": \"MDQ6VXNlcjIyODE0NQ==\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/228145?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DarwinAwardWinner\", #>       \"html_url\": \"https://github.com/DarwinAwardWinner\", #>       \"followers_url\": \"https://api.github.com/users/DarwinAwardWinner/followers\", #>       \"following_url\": \"https://api.github.com/users/DarwinAwardWinner/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DarwinAwardWinner/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DarwinAwardWinner/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DarwinAwardWinner/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DarwinAwardWinner/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DarwinAwardWinner/repos\", #>       \"events_url\": \"https://api.github.com/users/DarwinAwardWinner/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DarwinAwardWinner/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 10, #>     \"created_at\": \"2023-07-24T13:27:23Z\", #>     \"updated_at\": \"2023-07-31T18:02:26Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"I was getting a weird error inside the `mutate(across(...))` (see reprex), and by closely reading the stack trace I eventually realized it was because some function (presumably `dplyr::across`) is rewriting my function, changing the x in `desn$x` into e.g. `dens$mpg` (see line 10 of the stack trace). I guess this is because dplyr is rewriting every symbolic occurrence of the function arguments, including the `$x`. The rest of the reprex demonstrates 2 simple workarounds: using double bracket indexing to avoid referring to x as a symbol, and changing the argument name to avoid the name collision. However, debugging this error was rather confusing, since manually running the code on a test case didn't produce the error. I would expect the original code to work, since this function would work as expected in any other context, e.g. `lapply`.\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n#> \\r\\n#> Attaching package: 'dplyr'\\r\\n#> The following objects are masked from 'package:stats':\\r\\n#> \\r\\n#>     filter, lag\\r\\n#> The following objects are masked from 'package:base':\\r\\n#> \\r\\n#>     intersect, setdiff, setequal, union\\r\\nmtcars <- as_tibble(mtcars)\\r\\n\\r\\n## Fails\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(x) {\\r\\n    dens <- density(x, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens$x, dens$y, xout = x, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> Error in `mutate()`:\\r\\n#> ℹ In argument: `across(...)`.\\r\\n#> Caused by error in `across()`:\\r\\n#> ! Can't compute column `mpg_KDensity`.\\r\\n#> Caused by error in `xy.coords()`:\\r\\n#> ! 'x' and 'y' lengths differ\\r\\n#> Backtrace:\\r\\n#>      ▆\\r\\n#>   1. ├─mtcars %>% ...\\r\\n#>   2. ├─dplyr::mutate(...)\\r\\n#>   3. ├─dplyr:::mutate.data.frame(...)\\r\\n#>   4. │ └─dplyr:::mutate_cols(.data, dplyr_quosures(...), by)\\r\\n#>   5. │   ├─base::withCallingHandlers(...)\\r\\n#>   6. │   └─dplyr:::mutate_col(dots[[i]], data, mask, new_columns)\\r\\n#>   7. │     ├─base::withCallingHandlers(...)\\r\\n#>   8. │     └─mask$eval_all_mutate(quo)\\r\\n#>   9. │       └─dplyr (local) eval()\\r\\n#>  10. ├─stats::approx(dens$mpg, dens$y, xout = mpg, na.rm = FALSE, rule = 2)\\r\\n#>  11. │ └─stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)\\r\\n#>  12. │   └─grDevices::xy.coords(x, y, setLab = FALSE)\\r\\n#>  13. │     └─base::stop(\\\"'x' and 'y' lengths differ\\\")\\r\\n#>  14. └─base::.handleSimpleError(...)\\r\\n#>  15.   └─dplyr (local) h(simpleError(msg, call))\\r\\n#>  16.     └─rlang::abort(msg, call = call(\\\"across\\\"), parent = cnd)\\r\\n\\r\\n## Succeeds\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(x) {\\r\\n    dens <- density(x, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens[[\\\"x\\\"]], dens$y, xout = x, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> # A tibble: 32 × 22\\r\\n#>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n#>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\\r\\n#>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\\r\\n#>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\\r\\n#>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\\r\\n#>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\\r\\n#>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\\r\\n#>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\\r\\n#>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\\r\\n#>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\\r\\n#> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\\r\\n#> # ℹ 22 more rows\\r\\n#> # ℹ 11 more variables: mpg_KDensity <dbl>, cyl_KDensity <dbl>,\\r\\n#> #   disp_KDensity <dbl>, hp_KDensity <dbl>, drat_KDensity <dbl>,\\r\\n#> #   wt_KDensity <dbl>, qsec_KDensity <dbl>, vs_KDensity <dbl>,\\r\\n#> #   am_KDensity <dbl>, gear_KDensity <dbl>, carb_KDensity <dbl>\\r\\n\\r\\n## Also succeeds\\r\\nmtcars %>%\\r\\n  mutate(across(where(is.numeric), .names = \\\"{.col}_KDensity\\\", function(xx) {\\r\\n    dens <- density(xx, bw = \\\"SJ\\\", n = 2048, na.rm = TRUE)\\r\\n    approx(dens$x, dens$y, xout = xx, na.rm = FALSE, rule = 2)$y\\r\\n  }))\\r\\n#> # A tibble: 32 × 22\\r\\n#>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n#>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n#>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4\\r\\n#>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4\\r\\n#>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\\r\\n#>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\\r\\n#>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\\r\\n#>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\\r\\n#>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\\r\\n#>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\\r\\n#>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\\r\\n#> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\\r\\n#> # ℹ 22 more rows\\r\\n#> # ℹ 11 more variables: mpg_KDensity <dbl>, cyl_KDensity <dbl>,\\r\\n#> #   disp_KDensity <dbl>, hp_KDensity <dbl>, drat_KDensity <dbl>,\\r\\n#> #   wt_KDensity <dbl>, qsec_KDensity <dbl>, vs_KDensity <dbl>,\\r\\n#> #   am_KDensity <dbl>, gear_KDensity <dbl>, carb_KDensity <dbl>\\r\\n```\\r\\n\\r\\n<sup>Created on 2023-07-24 with [reprex v2.0.2](https://reprex.tidyverse.org)<\\/sup>\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6892/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6891\", #>     \"id\": 1818419328, #>     \"node_id\": \"I_kwDOAGIUpc5sYuCA\", #>     \"number\": 6891, #>     \"title\": \"The case for `drop_rows()` and `keep_rows()` in relation to `filter()`\", #>     \"user\": { #>       \"login\": \"DavisVaughan\", #>       \"id\": 19150088, #>       \"node_id\": \"MDQ6VXNlcjE5MTUwMDg4\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19150088?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/DavisVaughan\", #>       \"html_url\": \"https://github.com/DavisVaughan\", #>       \"followers_url\": \"https://api.github.com/users/DavisVaughan/followers\", #>       \"following_url\": \"https://api.github.com/users/DavisVaughan/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/DavisVaughan/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/DavisVaughan/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/DavisVaughan/orgs\", #>       \"repos_url\": \"https://api.github.com/users/DavisVaughan/repos\", #>       \"events_url\": \"https://api.github.com/users/DavisVaughan/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/DavisVaughan/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [ #>       { #>         \"id\": 17708200, #>         \"node_id\": \"MDU6TGFiZWwxNzcwODIwMA==\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/feature\", #>         \"name\": \"feature\", #>         \"color\": \"B4C3AE\", #>         \"default\": false, #>         \"description\": \"a feature request or enhancement\" #>       }, #>       { #>         \"id\": 334471510, #>         \"node_id\": \"MDU6TGFiZWwzMzQ0NzE1MTA=\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/verbs%20:running_woman:\", #>         \"name\": \"verbs :running_woman:\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"\" #>       }, #>       { #>         \"id\": 3407327207, #>         \"node_id\": \"LA_kwDOAGIUpc7LF6_n\", #>         \"url\": \"https://api.github.com/repos/tidyverse/dplyr/labels/rows%20%E2%86%95%EF%B8%8F\", #>         \"name\": \"rows ↕️\", #>         \"color\": \"eeeeee\", #>         \"default\": false, #>         \"description\": \"Operations on rows: filter(), slice(), arrange()\" #>       } #>     ], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 4, #>     \"created_at\": \"2023-07-24T13:22:13Z\", #>     \"updated_at\": \"2023-08-01T16:46:38Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"MEMBER\", #>     \"active_lock_reason\": {}, #>     \"body\": \"There have been quite a few requests in the past for an \\\"anti filter\\\", i.e. I want to specify a set of conditions that determine which rows to _drop_. Additionally, it has traditionally been somewhat difficult to explain that `filter()` is about specifying rows to _keep_; that isn't really explained clearly in the verb name. Also, we've also seen in the past that it is mildly confusing that `select()` is about columns and `filter()` is about rows, again, there isn't anything in the verb names to describe the difference.\\r\\n\\r\\n---\\r\\n\\r\\nOne thing we could consider doing is to add two new very explicit verbs:\\r\\n- `keep_rows(data, ..., by = , missing = )`\\r\\n- `drop_rows(data, ..., by = , missing = )`\\r\\n\\r\\nWhere `keep_rows()` is equivalent to `filter()`, and `drop_rows()` is the opposite.\\r\\n\\r\\nTo be very clear, `filter()` would _never_ disappear. We would, however, consider superseding it in favor of these if they prove to be successful, which really only means we'd start using them in docs and workshops instead of `filter()`. We'd even consider not even superseding `filter()`, which many people find scary. Instead we'd just be aliasing `keep_rows()` as `filter()`.\\r\\n\\r\\nThe biggest annoyance when writing a \\\"drop\\\" style expression with `filter()` is that you first have to write a \\\"keep\\\" expression and then painfully invert it. i.e.:\\r\\n\\r\\n\\\"drop rows from `df` where `a` and `b` and `c` are `TRUE`\\\"\\r\\n\\r\\n``` r\\r\\nlibrary(dplyr)\\r\\n\\r\\ndf <- tibble(\\r\\n  id = c(1, 2, 3),\\r\\n  a = c(TRUE, NA, TRUE),\\r\\n  b = c(FALSE, TRUE, TRUE),\\r\\n  c = c(TRUE, TRUE, TRUE)\\r\\n)\\r\\ndf\\r\\n#> # A tibble: 3 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE \\r\\n#> 2     2 NA    TRUE  TRUE \\r\\n#> 3     3 TRUE  TRUE  TRUE\\r\\n\\r\\n# \\\"keep rows where a and b and c are TRUE\\\"\\r\\n# this nicely drops NAs because they don't match our specified criteria\\r\\nfilter(df, a, b, c)\\r\\n#> # A tibble: 1 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     3 TRUE  TRUE  TRUE\\r\\n\\r\\n# \\\"drop rows where a and b and c are TRUE\\\"\\r\\n# this AWFULLY drops NAs because of how filter() works!\\r\\n# NA doesn't match our criteria so shouldnt be seen as something to drop\\r\\nfilter(df, !(a & b & c))\\r\\n#> # A tibble: 1 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE\\r\\n```\\r\\n\\r\\nNote that even the seemingly correct \\\"drop\\\" expression is actually wrong when it comes to handling missing values. It is fairly hard to get this right.\\r\\n\\r\\nThe `drop_rows()` version would be:\\r\\n\\r\\n```r\\r\\ndf %>% drop_rows(a, b, c)\\r\\n#> # A tibble: 2 × 4\\r\\n#>      id a     b     c    \\r\\n#>   <dbl> <lgl> <lgl> <lgl>\\r\\n#> 1     1 TRUE  FALSE TRUE \\r\\n#> 2     2 NA    TRUE  TRUE \\r\\n```\\r\\n\\r\\nWhere `NA` isn't considered something you \\\"drop\\\" by default, but would be if `missing` was tweaked to whatever we decide means \\\"treat a missing value like `TRUE`\\\".\\r\\n\\r\\n---\\r\\n\\r\\nA few other notes:\\r\\n- `missing` is from https://github.com/tidyverse/dplyr/issues/6560 and controls how missing values are treated. By default, both functions would treat an `NA` as `FALSE` (i.e. missing values are never kept or dropped), but could be made to treat them as `TRUE` or an error. Though I don't think `missing = c(\\\"keep\\\", \\\"drop\\\", \\\"error\\\")` works uniformly for both verbs so we'd need to think of another parameterization.\\r\\n- Both functions would support `if_all()` and `if_any()`, which I think form nice natural sentences. \\\"drop rows if any are NA\\\" sounds pretty good for `drop_rows(df, if_any(c(a, b), is.na))`. That is like `tidyr::drop_na()`.\\r\\n- Neither would support `across()`, which we have been deprecating from `filter()` for a little while now.\\r\\n- Both functions would combine multiple conditions using `&`, as that is typically the natural way to combine multiple conditions and you can always get `|` behavior with either an explicit `|` or by using multiple calls to the function. i.e. `df %>% drop_rows(x > 5 | y > 6)` is the same as `df %>% drop_rows(x > 5) %>% drop_rows(y > 6)` (and you can't do that split trick with `&`). `if_any()` can also work for `|` when you need to apply the same function to multiple columns.\\r\\n- Both functions would support `by`\\r\\n\\r\\nSome issues and questions related to this:\\r\\n- https://github.com/tidyverse/dplyr/issues/6888\\r\\n- https://github.com/tidyverse/dplyr/issues/1527\\r\\n- https://github.com/tidyverse/dplyr/issues/741\\r\\n- https://github.com/tidyverse/dplyr/issues/1797\\r\\n- https://stackoverflow.com/questions/45661377/delete-rows-based-on-multiple-conditions-with-dplyr\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6891/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   }, #>   { #>     \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890\", #>     \"repository_url\": \"https://api.github.com/repos/tidyverse/dplyr\", #>     \"labels_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/labels{/name}\", #>     \"comments_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/comments\", #>     \"events_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/events\", #>     \"html_url\": \"https://github.com/tidyverse/dplyr/issues/6890\", #>     \"id\": 1817996283, #>     \"node_id\": \"I_kwDOAGIUpc5sXGv7\", #>     \"number\": 6890, #>     \"title\": \"Unexpected/impractical behaviour of rowwise() in combination with mutate_all()\", #>     \"user\": { #>       \"login\": \"martijnvanattekum\", #>       \"id\": 19334781, #>       \"node_id\": \"MDQ6VXNlcjE5MzM0Nzgx\", #>       \"avatar_url\": \"https://avatars.githubusercontent.com/u/19334781?v=4\", #>       \"gravatar_id\": \"\", #>       \"url\": \"https://api.github.com/users/martijnvanattekum\", #>       \"html_url\": \"https://github.com/martijnvanattekum\", #>       \"followers_url\": \"https://api.github.com/users/martijnvanattekum/followers\", #>       \"following_url\": \"https://api.github.com/users/martijnvanattekum/following{/other_user}\", #>       \"gists_url\": \"https://api.github.com/users/martijnvanattekum/gists{/gist_id}\", #>       \"starred_url\": \"https://api.github.com/users/martijnvanattekum/starred{/owner}{/repo}\", #>       \"subscriptions_url\": \"https://api.github.com/users/martijnvanattekum/subscriptions\", #>       \"organizations_url\": \"https://api.github.com/users/martijnvanattekum/orgs\", #>       \"repos_url\": \"https://api.github.com/users/martijnvanattekum/repos\", #>       \"events_url\": \"https://api.github.com/users/martijnvanattekum/events{/privacy}\", #>       \"received_events_url\": \"https://api.github.com/users/martijnvanattekum/received_events\", #>       \"type\": \"User\", #>       \"site_admin\": false #>     }, #>     \"labels\": [], #>     \"state\": \"open\", #>     \"locked\": false, #>     \"assignee\": {}, #>     \"assignees\": [], #>     \"milestone\": {}, #>     \"comments\": 0, #>     \"created_at\": \"2023-07-24T09:16:52Z\", #>     \"updated_at\": \"2023-07-24T09:16:52Z\", #>     \"closed_at\": {}, #>     \"author_association\": \"NONE\", #>     \"active_lock_reason\": {}, #>     \"body\": \"When trying to apply a function using `mutate_all()` to each **row** of a data frame using `rowwise()`, it seems the function only considers individual values, rather than the complete row. \\r\\n\\r\\nComparing column-wise with rowwise operations:\\r\\n```\\r\\n# Columnwise - considers the complete column when applying the function\\r\\nlibrary(dplyr)\\r\\nhead(mtcars) %>% mutate_all(rank)\\r\\n\\r\\n>                   mpg cyl disp hp drat wt qsec vs am gear carb\\r\\n> Mazda RX4         3.5 3.5  2.5  4  5.5  2  1.0  2  5    5  5.5\\r\\n> Mazda RX4 Wag     3.5 3.5  2.5  4  5.5  3  2.5  2  5    5  5.5\\r\\n> Datsun 710        6.0 1.0  1.0  1  4.0  1  4.0  5  5    5  2.0\\r\\n> Hornet 4 Drive    5.0 3.5  5.0  4  2.0  4  5.0  5  2    2  2.0\\r\\n> Hornet Sportabout 2.0 6.0  6.0  6  3.0  5  2.5  2  2    2  4.0\\r\\n> Valiant           1.0 3.5  4.0  2  1.0  6  6.0  5  2    2  2.0\\r\\n\\r\\n# Rowwise - considers only the individual values within the row when applying the function, hence always returning rank 1\\r\\nlibrary(dplyr)\\r\\nhead(mtcars) %>% rowwise() %>% mutate_all(rank)\\r\\n\\r\\n> # A tibble: 6 × 11\\r\\n> # Rowwise: \\r\\n>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\\r\\n>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\\r\\n> 1     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 2     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 3     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 4     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 5     1     1     1     1     1     1     1     1     1     1     1\\r\\n> 6     1     1     1     1     1     1     1     1     1     1     1\\r\\n\\r\\n# Expected result\\r\\n# Can be obtained running head(mtcars) %>% apply(1, \\\\(row) rank(row)) %>% t() %>% data.frame()\\r\\n\\r\\n>                   mpg cyl disp hp drat wt qsec  vs  am gear carb\\r\\n> Mazda RX4           9 7.0   11 10    4  3    8 1.0 2.0  5.5  5.5\\r\\n> Mazda RX4 Wag       9 7.0   11 10    4  3    8 1.0 2.0  5.5  5.5\\r\\n> Datsun 710          9 6.5   11 10    5  4    8 2.0 2.0  6.5  2.0\\r\\n> Hornet 4 Drive      9 7.0   11 10    5  6    8 2.5 1.0  4.0  2.5\\r\\n> Hornet Sportabout   9 7.0   11 10    5  6    8 1.5 1.5  4.0  3.0\\r\\n> Valiant             8 7.0   11 10    4  6    9 2.5 1.0  5.0  2.5\\r\\n```\\r\\n\\r\\nWould it be possible to obtain the expected result with `rowwise()`?\", #>     \"reactions\": { #>       \"url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/reactions\", #>       \"total_count\": 0, #>       \"+1\": 0, #>       \"-1\": 0, #>       \"laugh\": 0, #>       \"hooray\": 0, #>       \"confused\": 0, #>       \"heart\": 0, #>       \"rocket\": 0, #>       \"eyes\": 0 #>     }, #>     \"timeline_url\": \"https://api.github.com/repos/tidyverse/dplyr/issues/6890/timeline\", #>     \"performed_via_github_app\": {}, #>     \"state_reason\": {} #>   } #> ]   ## Automatic pagination users <- gh(\"/users\", .limit = 50) #> Error in check_string(url, \"`url`\"): `url` must be a string length(users) #> Error in eval(expr, envir, enclos): object 'users' not found if (FALSE) { ## Access developer preview of Licenses API (in preview as of 2015-09-24) gh(\"/licenses\") # used to error code 415 gh(\"/licenses\", .accept = \"application/vnd.github.drax-preview+json\") } if (FALSE) { ## Access Github Enterprise API ## Use GITHUB_API_URL environment variable to change the default. gh(\"/user/repos\", type = \"public\", .api_url = \"https://github.foobar.edu/api/v3\") } if (FALSE) { ## Use I() to force body part to be sent as an array, even if length 1 ## This works whether assignees has length 1 or > 1 assignees <- \"gh_user\" assignees <- c(\"gh_user1\", \"gh_user2\") gh(\"PATCH /repos/OWNER/REPO/issues/1\", assignees = I(assignees)) } if (FALSE) { ## There are two ways to send JSON data. One is that you supply one or ## more objects that will be converted to JSON automatically via ## jsonlite::toJSON(). In this case sometimes you need to use ## jsonlite::unbox() because fromJSON() creates lists from scalar vectors ## by default. The Content-Type header is automatically added in this ## case. For example this request turns on GitHub Pages, using this ## API: https://docs.github.com/v3/repos/pages/#enable-a-pages-site  gh::gh(   \"POST /repos/{owner}/{repo}/pages\",   owner = \"r-lib\",   repo = \"gh\",   source = list(     branch = jsonlite::unbox(\"gh-pages\"),     path = jsonlite::unbox(\"/\")   ),   .send_headers = c(Accept = \"application/vnd.github.switcheroo-preview+json\") )  ## The second way is to handle the JSON encoding manually, and supply it ## as a raw vector in an unnamed argument, and also a Content-Type header:  body <- '{ \"source\": { \"branch\": \"gh-pages\", \"path\": \"/\" } }' gh::gh(   \"POST /repos/{owner}/{repo}/pages\",   owner = \"r-lib\",   repo = \"gh\",   charToRaw(body),   .send_headers = c(     Accept = \"application/vnd.github.switcheroo-preview+json\",     \"Content-Type\" = \"application/json\"   ) ) } if (FALSE) { ## Pass along a query to the search/code endpoint via the ... argument x <- gh::gh(             \"/search/code\",             q = \"installation repo:r-lib/gh\",             .send_headers = c(\"X-GitHub-Api-Version\" = \"2022-11-28\")             )  str(x, list.len = 3, give.attr = FALSE)  }"},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple interface for the GitHub GraphQL API v4. — gh_gql","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"See GraphQL API : https://docs.github.com/graphql","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"","code":"gh_gql(query, ...)"},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"query GraphQL query, string. ... Name-value pairs giving API parameters. matched endpoint placeholders, sent query parameters GET requests, JSON body POST requests. one unnamed parameter, raw vector, JSON encoded, sent raw data, . can used example add assets releases. Named NULL values silently dropped. GET requests, named NA values trigger error. methods, named NA values included body request, JSON null.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"Note: pagination .limit argument work currently, pagination GraphQL API different v3 API. need pagination GraphQL, need manually.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh_gql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A simple interface for the GitHub GraphQL API v4. — gh_gql","text":"","code":"if (FALSE) { gh_gql(\"query { viewer { login }}\")  # Get rate limit ratelimit_query <- \"query {   viewer {     login   }   rateLimit {     limit     cost     remaining     resetAt   } }\"  gh_gql(ratelimit_query) }"},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the next, previous, first or last page of results — gh_next","title":"Get the next, previous, first or last page of results — gh_next","text":"Get next, previous, first last page results","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the next, previous, first or last page of results — gh_next","text":"","code":"gh_next(gh_response)  gh_prev(gh_response)  gh_first(gh_response)  gh_last(gh_response)"},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the next, previous, first or last page of results — gh_next","text":"gh_response object returned gh() call.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the next, previous, first or last page of results — gh_next","text":"Answer API.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the next, previous, first or last page of results — gh_next","text":"Note always defined. E.g. first page queried (default), first previous pages defined. next page, next page defined, etc. requested page exist, error thrown.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/reference/gh_next.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the next, previous, first or last page of results — gh_next","text":"","code":"x <- gh(\"/users\") vapply(x, \"[[\", character(1), \"login\") #>  [1] \"mojombo\"      \"defunkt\"      \"pjhyett\"      \"wycats\"       #>  [5] \"ezmobius\"     \"ivey\"         \"evanphx\"      \"vanpelt\"      #>  [9] \"wayneeseguin\" \"brynary\"      \"kevinclark\"   \"technoweenie\" #> [13] \"macournoyer\"  \"takeo\"        \"caged\"        \"topfunky\"     #> [17] \"anotherjesse\" \"roland\"       \"lukas\"        \"fanvsfan\"     #> [21] \"tomtt\"        \"railsjitsu\"   \"nitay\"        \"kevwil\"       #> [25] \"KirinDave\"    \"jamesgolick\"  \"atmos\"        \"errfree\"      #> [29] \"mojodna\"      \"bmizerany\"    x2 <- gh_next(x) vapply(x2, \"[[\", character(1), \"login\") #>  [1] \"jnewland\"    \"joshknowles\" \"hornbeck\"    \"jwhitmire\"   \"elbowdonkey\" #>  [6] \"reinh\"       \"knzconnor\"   \"bs\"          \"rsanheim\"    \"schacon\"     #> [11] \"uggedal\"     \"bruce\"       \"sam\"         \"mmower\"      \"abhay\"       #> [16] \"rabble\"      \"benburkert\"  \"indirect\"    \"fearoffish\"  \"ry\"          #> [21] \"engineyard\"  \"jsierles\"    \"tweibley\"    \"peimei\"      \"brixen\"      #> [26] \"tmornini\"    \"outerim\"     \"daksis\"      \"sr\"          \"lifo\""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Return GitHub user's current rate limits — gh_rate_limit","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"gh_rate_limits() reports rate limits authenticated user. gh_rate_limit() reports rate limits previous successful request. details GitHub's API rate limit policies available https://docs.github.com/v3/#rate-limiting.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"","code":"gh_rate_limit(   response = NULL,   .token = NULL,   .api_url = NULL,   .send_headers = NULL )  gh_rate_limits(.token = NULL, .api_url = NULL, .send_headers = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"response gh_response object previous gh call, rate limit values determined values response header. Optional argument, missing call \"GET /rate_limit\" made. .token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\".","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_rate_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return GitHub user's current rate limits — gh_rate_limit","text":"list object containing overall limit, remaining limit, limit reset time.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"gh can find personal access token (PAT) via gh_token(), includes PAT requests. requests succeed without PAT, many require PAT prove request authorized specific GitHub user. PAT also helps rate limiting. gh use casual, want PAT. gh calls gitcreds::gitcreds_get() api_url, checks session environment variables local Git credential store PAT appropriate api_url. Therefore, previously used PAT , e.g., command line Git, gh may retrieve re-use . can call gitcreds::gitcreds_get() directly, , want see found specific URL. matching PAT found, gitcreds::gitcreds_get() errors, whereas gh_token() , instead, returns \"\". See GitHub's documentation Creating personal access token, use usethis::create_github_token() guided experience, including pre-selection recommended scopes. PAT, can use gitcreds::gitcreds_set() add Git credential store. point , gh (via gitcreds::gitcreds_get()) able find without effort part.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"","code":"gh_token(api_url = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"api_url GitHub API URL. Defaults GITHUB_API_URL environment variable, set, otherwise https://api.github.com.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"string characters, PAT found, empty string, otherwise. convenience, return value S3 class order ensure simple printing strategies reveal entire PAT.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the local user's GitHub Personal Access Token (PAT) — gh_token","text":"","code":"if (FALSE) { gh_token()  format(gh_token())  str(gh_token()) }"},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the GitHub remote associated with a path — gh_tree_remote","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"handy helper want make gh requests related current project.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"","code":"gh_tree_remote(path = \".\")"},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"path Path contained within git repo.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"repo github remote, list containing username repo. Otherwise, error.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_tree_remote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the GitHub remote associated with a path — gh_tree_remote","text":"","code":"if (FALSE) { # interactive() gh_tree_remote() }"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":null,"dir":"Reference","previous_headings":"","what":"Info on current GitHub user and token — gh_whoami","title":"Info on current GitHub user and token — gh_whoami","text":"Reports wallet name, GitHub login, GitHub URL current authenticated user, first bit token, associated scopes.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Info on current GitHub user and token — gh_whoami","text":"","code":"gh_whoami(.token = NULL, .api_url = NULL, .send_headers = NULL)"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Info on current GitHub user and token — gh_whoami","text":".token Authentication token. Defaults GITHUB_PAT GITHUB_TOKEN environment variables, order set. See gh_token() need flexibility, e.g. different tokens different GitHub Enterprise deployments. .api_url Github API url (default: https://api.github.com). Used endpoint just contains path. Defaults GITHUB_API_URL environment variable set. .send_headers Named character vector header field values (except Authorization, handled via .token). can used override augment default User-Agent header: \"https://github.com/r-lib/gh\".","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Info on current GitHub user and token — gh_whoami","text":"gh_response object, also list.","code":""},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Info on current GitHub user and token — gh_whoami","text":"Get personal access token GitHub API https://github.com/settings/tokens select scopes necessary planned tasks. repo scope, example, one many likely need. macOS Windows best store token git credential store, GitHub clients, including gh, can access . can use gitcreds package add token credential store:   See https://gh.r-lib.org/articles/managing-personal-access-tokens.html https://usethis.r-lib.org/articles/articles/git-credentials.html managing GitHub (generic git) credentials. systems, including Linux, git credential store typically convenient, might want store token GITHUB_PAT environment variable, can set .Renviron file.","code":"gitcreds::gitcreds_set()"},{"path":"https://gh.r-lib.org/dev/reference/gh_whoami.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Info on current GitHub user and token — gh_whoami","text":"","code":"gh_whoami() #> Error in gh(endpoint = \"/user\", .token = .token, .api_url = .api_url,     .send_headers = .send_headers): GitHub API error (403): Resource not accessible by integration #> ℹ Read more at #>   <https://docs.github.com/rest/users/users#get-the-authenticated-user> if (FALSE) { ## explicit token + use with GitHub Enterprise gh_whoami(   .token = \"8c70fd8419398999c9ac5bacf3192882193cadf2\",   .api_url = \"https://github.foobar.edu/api/v3\" ) }"},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the result of a GitHub API call — print.gh_response","title":"Print the result of a GitHub API call — print.gh_response","text":"Print result GitHub API call","code":""},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the result of a GitHub API call — print.gh_response","text":"","code":"# S3 method for gh_response print(x, ...)"},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the result of a GitHub API call — print.gh_response","text":"x result object. ... Ignored.","code":""},{"path":"https://gh.r-lib.org/dev/reference/print.gh_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the result of a GitHub API call — print.gh_response","text":"JSON result.","code":""},{"path":[]},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-140","dir":"Changelog","previous_headings":"","what":"gh 1.4.0","title":"gh 1.4.0","text":"CRAN release: 2023-02-22 gh() gains new .max_rate parameter sets maximum number requests per second. gh now powered httr2. generally little impact normal operation request fails, can use httr2::last_response() httr2::last_request() debug. gh() gains new .max_wait argument gives maximum number minutes wait rate limited (#67). New gh_rate_limits() function reports rate limits active user. gh can now validate GitHub fine-grained personal access tokens (@jvstein, #171).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-131","dir":"Changelog","previous_headings":"","what":"gh 1.3.1","title":"gh 1.3.1","text":"CRAN release: 2022-09-08 gh now accepts lower-case methods .e. gh::gh(\"get /users/hadley/repos\") gh::gh(\"GET /users/hadley/repos\") work (@maelle, #167). Response headers (\"response_headers\") response content (\"response_content\") now returned error conditions error handlers can use information, rate limit reset header, handling github_errors (@gadenbuie, #117).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-130","dir":"Changelog","previous_headings":"","what":"gh 1.3.0","title":"gh 1.3.0","text":"CRAN release: 2021-04-30 gh now shows correct number records progress bar paginating (#147). New .params argument gh() make easier pass parameters programmatically (#140).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-121","dir":"Changelog","previous_headings":"","what":"gh 1.2.1","title":"gh 1.2.1","text":"CRAN release: 2021-04-01 Token validation accounts new format announced 2021-03-04 implemented 2021-04-01 (#148, @fmichonneau).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-120","dir":"Changelog","previous_headings":"","what":"gh 1.2.0","title":"gh 1.2.0","text":"CRAN release: 2020-11-27 gh_gql() now passes arguments gh() (#124). gh now handles responses pagination better, tries properly merge (#136, @rundel). gh can retrieve PAT Git credential store, lookup based targeted API URL. now uses gitcreds package. environment variables consulted URL-specific GitHub PATs changed. “https://api.github.com”: GITHUB_PAT_GITHUB_COM now, instead GITHUB_PAT_API_GITHUB_COM “https://github.acme.com/api/v3”: GITHUB_PAT_GITHUB_ACME_COM now, instead GITHUB_PAT_GITHUB_ACME_COM_API_V3 See documentation gitcreds package details. keyring package longer used, favor Git credential store. documentation GitHub REST API moved https://docs.github.com/rest endpoints now documented using URI template style RFC 6570: Old: GET /repos/:owner/:repo/issues New: GET /repos/{owner}/{repo}/issues gh accepts prioritizes new style. However, still parameter substitution old style. Fixed error occurred calling gh() .progress = FALSE (@gadenbuie, #115). gh() accepts named NA parameters destined request body (#139).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-110","dir":"Changelog","previous_headings":"","what":"gh 1.1.0","title":"gh 1.1.0","text":"CRAN release: 2020-01-24 Raw responses GitHub now returned raw vector. Responses may written disk providing path .destfile argument. gh now sets .Last.error error object uncaught error, .Last.error.trace stack trace error. gh() now silently drops named NULL parameters, throws error named NA parameters (#21, #84). gh() now returns better values empty responses, typically empty lists dictionaries (#66). gh() now .accept argument make easier set Accept HTTP header (#91). New gh_gql() function make easier work GitHub GraphQL API. gh now supports separate personal access tokens GitHub Enterprise sites. See ?gh_token details. gh now supports storing GitHub personal access tokens (PAT) system keyring, via keyring package. See ?gh_token details. gh() can now POST raw data, allows adding assets releases (#56).","code":""},{"path":"https://gh.r-lib.org/dev/news/index.html","id":"gh-101","dir":"Changelog","previous_headings":"","what":"gh 1.0.1","title":"gh 1.0.1","text":"CRAN release: 2017-07-16 First public release.","code":""}]
